{"version":3,"file":"extension.js","mappings":"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Q,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAClD,CAAE,KAAQ,MAAU,CAAE,KAAQ,MAAU,CAAE,MAAQ,OAClD,CAAE,MAAQ,OA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","sources":["webpack://rainbow-csv/./node_modules/define-data-property/index.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/functionCall.js","webpack://rainbow-csv/./node_modules/math-intrinsics/round.js","webpack://rainbow-csv/./node_modules/get-intrinsic/index.js","webpack://rainbow-csv/./node_modules/call-bind/index.js","webpack://rainbow-csv/./node_modules/util/util.js","webpack://rainbow-csv/./node_modules/has-property-descriptors/index.js","webpack://rainbow-csv/./node_modules/es-define-property/index.js","webpack://rainbow-csv/./rainbow_utils.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/functionApply.js","webpack://rainbow-csv/./node_modules/get-proto/Object.getPrototypeOf.js","webpack://rainbow-csv/./node_modules/util/support/isBufferBrowser.js","webpack://rainbow-csv/./node_modules/es-errors/eval.js","webpack://rainbow-csv/./node_modules/has-symbols/shams.js","webpack://rainbow-csv/external commonjs \"vscode\"","webpack://rainbow-csv/./node_modules/math-intrinsics/abs.js","webpack://rainbow-csv/./contrib/wcwidth/combining.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/applyBind.js","webpack://rainbow-csv/./node_modules/for-each/index.js","webpack://rainbow-csv/./node_modules/math-intrinsics/sign.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/index.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/actualApply.js","webpack://rainbow-csv/./contrib/wcwidth/index.js","webpack://rainbow-csv/./fast_load_utils.js","webpack://rainbow-csv/./node_modules/get-proto/index.js","webpack://rainbow-csv/./node_modules/is-regex/index.js","webpack://rainbow-csv/./node_modules/has-symbols/index.js","webpack://rainbow-csv/./rbql_core/rbql-js/csv_utils.js","webpack://rainbow-csv/./node_modules/math-intrinsics/isNaN.js","webpack://rainbow-csv/./node_modules/es-errors/uri.js","webpack://rainbow-csv/./node_modules/process/browser.js","webpack://rainbow-csv/./node_modules/is-typed-array/index.js","webpack://rainbow-csv/./node_modules/which-typed-array/index.js","webpack://rainbow-csv/./node_modules/gopd/index.js","webpack://rainbow-csv/./node_modules/math-intrinsics/pow.js","webpack://rainbow-csv/./node_modules/math-intrinsics/max.js","webpack://rainbow-csv/./node_modules/gopd/gOPD.js","webpack://rainbow-csv/./node_modules/call-bound/index.js","webpack://rainbow-csv/./node_modules/possible-typed-array-names/index.js","webpack://rainbow-csv/./node_modules/inherits/inherits_browser.js","webpack://rainbow-csv/./node_modules/function-bind/index.js","webpack://rainbow-csv/./node_modules/set-function-length/index.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql_csv.js","webpack://rainbow-csv/./node_modules/call-bind-apply-helpers/reflectApply.js","webpack://rainbow-csv/./node_modules/dunder-proto/get.js","webpack://rainbow-csv/./node_modules/is-arguments/index.js","webpack://rainbow-csv/./node_modules/math-intrinsics/min.js","webpack://rainbow-csv/./node_modules/es-errors/syntax.js","webpack://rainbow-csv/./node_modules/is-generator-function/index.js","webpack://rainbow-csv/./node_modules/get-proto/Reflect.getPrototypeOf.js","webpack://rainbow-csv/./node_modules/math-intrinsics/floor.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql.js","webpack://rainbow-csv/./node_modules/util/support/types.js","webpack://rainbow-csv/./node_modules/has-tostringtag/shams.js","webpack://rainbow-csv/./node_modules/available-typed-arrays/index.js","webpack://rainbow-csv/./node_modules/es-errors/range.js","webpack://rainbow-csv/./node_modules/function-bind/implementation.js","webpack://rainbow-csv/./node_modules/es-errors/index.js","webpack://rainbow-csv/./node_modules/es-errors/ref.js","webpack://rainbow-csv/./node_modules/is-callable/index.js","webpack://rainbow-csv/./node_modules/es-object-atoms/index.js","webpack://rainbow-csv/./node_modules/es-errors/type.js","webpack://rainbow-csv/./node_modules/safe-regex-test/index.js","webpack://rainbow-csv/./node_modules/hasown/index.js","webpack://rainbow-csv/webpack/bootstrap","webpack://rainbow-csv/webpack/runtime/global","webpack://rainbow-csv/./extension.js"],"sourcesContent":["'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = callBindBasic(arguments);\n\tvar adjustedLength = originalFunction.length - (arguments.length - 1);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + (adjustedLength > 0 ? adjustedLength : 0),\n\t\ttrue\n\t);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","const os = require('os');\nconst fs = require('fs');\nconst path = require('path');\n\nconst rbql = require('./rbql_core/rbql-js/rbql.js');\nconst rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nconst fast_load_utils = require('./fast_load_utils.js');\n\nconst wcwidth = require('./contrib/wcwidth/index.js');\n\n// TODO Allow the number regex to end with dot e.g. 12. or 1245. without the fractional part.\n// Otherwise as soon as someone start typing a fractional part it immediately renders the whole column as non-number for live CSV editing.\nconst number_regex = /^([0-9]+)(\\.[0-9]+)?$/;\n\n// Copypasted from extension.js\nconst QUOTED_RFC_POLICY = 'quoted_rfc';\nconst QUOTED_POLICY = 'quoted';\nconst max_preview_field_length = 250;\n\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction get_default_js_udf_content() {\n    let default_content = `// This file can be used to store RBQL UDFs. Example:\n    //\n    // function foo(value) {\n    //     return 'foo ' + String(value.length);\n    // }\n    //\n    // Functions defined in this file can be used in RBQL queries e.g.\n    // SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    //\n    // Don't forget to save this file after editing!\n    //\n    // Write your own functions below this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_default_python_udf_content() {\n    let default_content = `# This file can be used to store RBQL UDFs. Example:\n    #\n    # def foo(value):\n    #     return 'foo ' + str(len(value))\n    #\n    #\n    # Functions defined in this file can be used in RBQL queries e.g.\n    # SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    #\n    # Don't forget to save this file after editing!\n    #\n    # Write your own functions below this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_cursor_position_if_unambiguous(active_editor) {\n    let selections = active_editor.selections;\n    if (!selections || selections.length != 1) {\n        // Support only single-cursor, multicursor is ambiguous.\n        return null;\n    }\n    let selection = selections[0];\n    let position = selection.active;\n    if (!position.isEqual(selection.anchor)) {\n        // Selections are ambiguous.\n        return null;\n    }\n    return position;\n}\n\n\nfunction is_ascii(src_str) {\n    return /^[\\x00-\\x7F]*$/.test(src_str);\n}\n\n\nclass ColumnStat {\n    constructor(enable_double_width_alignment) {\n        this.enable_double_width_alignment = enable_double_width_alignment;\n        this.can_be_numeric = true;\n        this.max_total_length = 0;\n        this.max_int_length = 0;\n        this.max_fractional_length = 0;\n        this.only_ascii = enable_double_width_alignment ? true : null;\n        this.has_wide_chars = enable_double_width_alignment ? false : null;\n    }\n\n    mark_non_numeric() {\n        this.can_be_numeric = false;\n        this.max_int_length = 0;\n        this.max_fractional_length = 0;\n    }\n\n    is_numeric() {\n        return this.max_int_length > 0;\n    }\n\n    reconcile(rhs) {\n        this.max_total_length = Math.max(this.max_total_length, rhs.max_total_length);\n        if (this.enable_double_width_alignment) {\n            assert(rhs.enable_double_width_alignment, \"Unable to reconcile\");\n            this.only_ascii = this.only_ascii && rhs.only_ascii;\n            this.has_wide_chars = this.has_wide_chars || rhs.has_wide_chars;\n        }\n        if (!rhs.can_be_numeric) {\n            this.mark_non_numeric();\n        }\n        if (!this.can_be_numeric) {\n            return;\n        }\n        this.max_int_length = Math.max(this.max_int_length, rhs.max_int_length);\n        this.max_fractional_length = Math.max(this.max_fractional_length, rhs.max_fractional_length);\n    }\n\n    get_adjusted_total_length() {\n        // The sum of integer and float parts can be bigger than the max width, e.g. here:\n        // value\n        // 0.12\n        // 1234\n        return Math.max(this.max_total_length, this.max_int_length + this.max_fractional_length);\n    }\n\n    get_adjusted_int_length() {\n        // This is needed when the header is wider than numeric components and/or their sum.\n        return Math.max(this.max_int_length, this.max_total_length - this.max_fractional_length);\n    }\n\n    update_from_field(multiline_field_segments, is_first_record) {\n        if (multiline_field_segments.length > 1) {\n            // We don't allow multiline fields to be numeric for simplicity.\n            this.mark_non_numeric();\n        }\n        for (let field_segment of multiline_field_segments) {\n            this.max_total_length = Math.max(this.max_total_length, field_segment.length);\n            if (this.enable_double_width_alignment) {\n                this.only_ascii = this.only_ascii && is_ascii(field_segment);\n                let visual_field_length = this.only_ascii ? field_segment.length : wcwidth(field_segment);\n                this.has_wide_chars = this.has_wide_chars || visual_field_length != field_segment.length;\n                this.max_total_length = Math.max(this.max_total_length, visual_field_length);\n            }\n            if (!this.can_be_numeric) {\n                continue;\n            }\n            // TODO improve number_regex and subsequent logic to work with numeric fields with leading/trailing spaces for virtual alignment.\n            let match_result = number_regex.exec(field_segment);\n            if (match_result === null) {\n                if (!is_first_record && field_segment.length) { // Checking field_length here allows numeric columns to have some of the fields empty.\n                    // We only mark the column as non-numeric if we know that this is not a header line.\n                    this.mark_non_numeric();\n                }\n                continue;\n            }\n            let cur_integer_part_length = match_result[1].length;\n            this.max_int_length = Math.max(this.max_int_length, cur_integer_part_length);\n            let cur_fractional_part_length = match_result[2] === undefined ? 0 : match_result[2].length;\n            this.max_fractional_length = Math.max(this.max_fractional_length, cur_fractional_part_length);\n        }\n    }\n\n    evaluate_align_field(field, is_first_record, is_first_in_line, is_last_in_line, post_delim_readability_gap_length) {\n        // Align field, use Math.max() to avoid negative delta_length which can happen theorethically due to async doc edit.\n        let visual_field_length = this.has_wide_chars ? wcwidth(field) : field.length;\n        let readability_gap = is_first_in_line ? 0 : post_delim_readability_gap_length;\n        if (!this.is_numeric()) {\n            let delta_length = Math.max(this.max_total_length - visual_field_length, 0);\n            let trailing_length = is_last_in_line ? 0 : delta_length;\n            return [readability_gap, trailing_length];\n        }\n        if (is_first_record) {\n            if (number_regex.exec(field) === null) {\n                // The line must be a header - align it using max_width rule.\n                let delta_length = Math.max(this.get_adjusted_total_length() - visual_field_length, 0);\n                let trailing_length = is_last_in_line ? 0 : delta_length;\n                return [readability_gap, trailing_length];\n            }\n        }\n        let dot_pos = field.indexOf('.');\n        let cur_integer_part_length = dot_pos == -1 ? field.length : dot_pos;\n        // Here `cur_fractional_part_length` includes the leading dot too.\n        let cur_fractional_part_length = dot_pos == -1 ? 0 : field.length - dot_pos;\n        let integer_delta_length = Math.max(this.get_adjusted_int_length() - cur_integer_part_length, 0);\n        let fractional_delta_length = Math.max(this.max_fractional_length - cur_fractional_part_length);\n        let trailing_length = is_last_in_line ? 0 : fractional_delta_length;\n        return [integer_delta_length + readability_gap, trailing_length];\n    }\n\n}\n\n\nfunction update_column_stats_from_record(record_fields, is_first_record, all_columns_stats, enable_double_width_alignment) {\n    for (let fnum = 0; fnum < record_fields.length; fnum++) {\n        if (all_columns_stats.length <= fnum) {\n            all_columns_stats.push(new ColumnStat(enable_double_width_alignment));\n        }\n        all_columns_stats[fnum].update_from_field(record_fields[fnum], is_first_record);\n    }\n}\n\n\nfunction get_trimmed_rfc_record_fields_from_record(record) {\n    let record_fields = [];\n    for (let fnum = 0; fnum < record.length; fnum++) {\n        let field_segments = record[fnum].split('\\n');\n        field_segments = field_segments.map(v => v.trim());\n        record_fields.push(field_segments);\n    }\n    return record_fields;\n}\n\n\nfunction calculate_column_offsets(column_stats, delim_length, post_delim_readability_gap_length=1) {\n    let result = [];\n    if (!column_stats.length) {\n        return result;\n    }\n    result.push(0);\n    for (let i = 1; i < column_stats.length; i++) {\n        let previous_length = column_stats[i - 1].get_adjusted_total_length();\n        let previous_offset = result[i - 1];\n        result.push(previous_offset + previous_length + delim_length + post_delim_readability_gap_length);\n    }\n    assert(result.length == column_stats.length);\n    return result;\n}\n\n\nfunction calc_column_stats(active_doc, delim, policy, comment_prefix, enable_double_width_alignment) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, first_defective_line + 1, null, null];\n    }\n    let all_columns_stats = [];\n    let is_first_record = true;\n    for (let record of records) {\n        // TODO for optimization we can actually return a new array of record_fields to avoid doing the same thing again in align.\n        let record_fields = get_trimmed_rfc_record_fields_from_record(record);\n        update_column_stats_from_record(record_fields, is_first_record, all_columns_stats, enable_double_width_alignment);\n        is_first_record = false;\n    }\n    return [all_columns_stats, null, records, comments];\n}\n\n\nfunction calc_column_stats_for_fragment(row_infos, header_lnum, enable_double_width_alignment) {\n    // Note: `row_infos` can contain non-consecutive fragments of the document e.g. header and view range below.\n    let all_columns_stats = [];\n    for (let row_info of row_infos) {\n        if (row_info.comment_range !== null) {\n            continue;\n        }\n        let is_assumed_header_record = row_info.record_ranges.length && row_info.record_ranges[0].length && row_info.record_ranges[0][0].start.line == header_lnum;\n        update_column_stats_from_record(row_info.record_fields, is_assumed_header_record, all_columns_stats, enable_double_width_alignment);\n    }\n    return all_columns_stats;\n}\n\n\nfunction reconcile_whole_doc_and_local_column_stats(whole_doc_column_stats, local_column_stats) {\n    let max_num_fields = Math.max(whole_doc_column_stats.length, local_column_stats.length);\n    for (let i = 0; i < max_num_fields; i++) {\n        if (i >= whole_doc_column_stats.length) {\n            break;\n        }\n        if (i >= local_column_stats.length) {\n            local_column_stats.push(whole_doc_column_stats[i]);\n            continue;\n        }\n        local_column_stats[i].reconcile(whole_doc_column_stats[i]);\n    }\n}\n\n\nfunction evaluate_rfc_align_field(field, is_first_record, column_stat, column_offset, is_field_segment, is_first_in_line, is_last_in_line, post_delim_readability_gap_length=1) {\n    let [num_before, num_after] = column_stat.evaluate_align_field(field, is_first_record, is_first_in_line, is_last_in_line, post_delim_readability_gap_length);\n    if (is_field_segment) {\n        num_before += column_offset;\n    }\n    return [num_before, num_after];\n}\n\n\nfunction rfc_align_field(field, is_first_record, column_stat, column_offset, is_field_segment, is_first_in_line, is_last_in_line) {\n    let [num_before, num_after] = evaluate_rfc_align_field(field, is_first_record, column_stat, column_offset,  is_field_segment, is_first_in_line, is_last_in_line);\n    return ' '.repeat(num_before) + field + ' '.repeat(num_after);\n}\n\n\nfunction calc_max_column_widths(records) {\n    if (!records.length) {\n        return [];\n    }\n    let column_widths = [];\n    for (let row = 0; row < records.length; row++) {\n        for (let col = 0; col < records[row].length; col++) {\n            if (column_widths.length <= col) {\n                column_widths.push(0);\n            }\n            column_widths[col] = Math.max(column_widths[col], records[row][col].length);\n        }\n    }\n    return column_widths;\n}\n\n\nfunction generate_markdown_lines(records) {\n    for (let row = 0; row < records.length; row++) {\n        for (let col = 0; col < records[row].length; col++) {\n            // Escape pipe char.\n            records[row][col] = records[row][col].replaceAll('|', '\\\\|');\n        }\n    }\n    let max_column_widths = calc_max_column_widths(records);\n    let markdown_table_cells = [];\n    for (let row = 0; row < records.length; row++) {\n        let markdown_row_cells = [];\n        for (let col = 0; col < records[row].length; col++) {\n            // Here we ensure that `delta_length` is positive just in case: the substraction result can't become negative.\n            let delta_length = Math.max(0, max_column_widths[col] - records[row][col].length);\n            let aligned_cell = records[row][col] + ' '.repeat(delta_length);\n            markdown_row_cells.push(aligned_cell);\n        }\n        markdown_table_cells.push(markdown_row_cells);\n    }\n    let markdown_lines = markdown_table_cells.map(v => '| ' + v.join(' | ') + ' |');\n    let header_separator_line = '| ' + (max_column_widths.map(v => '-'.repeat(v))).join(' | ') + ' |';\n    markdown_lines.splice(1, 0, header_separator_line);\n    return markdown_lines;\n}\n\n\nclass RecordCommentMerger {\n    constructor(records, comments) {\n        this.records = records;\n        this.comments = comments;\n        this.nr = 0;\n        this.next_comment = 0;\n    }\n\n    get_next() {\n        // Returns tuple (record, comment).\n        if (this.has_comments_left() && (!this.has_records_left() || this.comments[this.next_comment].record_num <= this.nr)) {\n            let result = [null, this.comments[this.next_comment].comment_text];\n            this.next_comment += 1;\n            return result;\n        }\n        if (this.has_records_left()) {\n            let result = [this.records[this.nr], null];\n            this.nr += 1;\n            return result;\n        }\n        return [null, null];\n    }\n\n    has_comments_left() {\n        return this.next_comment < this.comments.length;\n    }\n\n    has_records_left() {\n        return this.nr < this.records.length;\n    }\n\n    has_entries_left() {\n        return this.has_comments_left() || this.has_records_left();\n    }\n}\n\n\nfunction generate_inlay_hints(vscode, visible_range, header_lnum, table_ranges, all_columns_stats, delim_length, alignment_char, enable_vertical_grid, post_delim_readability_gap_length) {\n    // NOTE: `table_ranges` can contain non-consecutive fragments of the document e.g. header and view range below.\n    assert(alignment_char.length == 1);\n    let column_offsets = calculate_column_offsets(all_columns_stats, delim_length, post_delim_readability_gap_length);\n    let inlay_hints = [];\n    // Setting hint display margin too high could prevent lower hint labels from diplaying. There is a non-configurable VSCode limit apparently, see also https://github.com/mechatroner/vscode_rainbow_csv/issues/205\n    // We set higher limit below because it is the bottom lines that would be non-aligned due to the max inlay hint limit reached. Actually we might not need the bottom limit at all.\n    // Plus the more typical scroll direction is from top to bottom.\n    let leading_aligned_margin = 30;\n    let trailing_aligned_margin = 30;\n    let vscode_max_num_inline_hints = 1500;\n    if ((leading_aligned_margin + visible_range.end.line - visible_range.start.line + trailing_aligned_margin) * all_columns_stats.length > vscode_max_num_inline_hints) {\n        leading_aligned_margin = 5;\n    }\n    let hint_display_start_line = visible_range.start.line - leading_aligned_margin;\n    let hint_display_end_line = visible_range.end.line + trailing_aligned_margin;\n    for (let row_info of table_ranges) {\n        if (row_info.comment_range !== null) {\n            continue;\n        }\n        let is_assumed_header_record = row_info.record_ranges.length && row_info.record_ranges[0].length && row_info.record_ranges[0][0].start.line === header_lnum;\n        if (row_info.record_fields.length != row_info.record_ranges.length) {\n            break; // Should never happen.\n        }\n        for (let fnum = 0; fnum < row_info.record_fields.length; fnum++) {\n            if (fnum >= all_columns_stats.length) {\n                break; // Should never happen.\n            }\n            let is_last_field = fnum + 1 == row_info.record_fields.length;\n            let field_segments = row_info.record_fields[fnum];\n            let field_segments_ranges = row_info.record_ranges[fnum];\n            if (field_segments.length != field_segments_ranges.length) {\n                break; // Should never happen.\n            }\n            for (let i = 0; i < field_segments.length; i++) {\n                let field_segment_range = field_segments_ranges[i];\n                let is_field_segment = i > 0;\n                let is_last_in_line = is_last_field || i + 1 < field_segments.length;\n                let is_first_in_line = (fnum == 0) || is_field_segment;\n                let [num_before, num_after] = evaluate_rfc_align_field(field_segments[i], is_assumed_header_record, all_columns_stats[fnum], column_offsets[fnum], is_field_segment, is_first_in_line, is_last_in_line, post_delim_readability_gap_length);\n                if (num_before > 0) {\n                    let hint_label = '';\n                    if (!enable_vertical_grid || is_field_segment) {\n                        hint_label += alignment_char.repeat(num_before);\n                    } else {\n                        // TODO find a way to \"draw\" vertical grid by extending hints for multiline rfc fields. Add a screenshot to README when implemented.\n                        hint_label = '\\u2588';\n                        hint_label += alignment_char.repeat(num_before - 1);\n                    }\n                    let hint_line = field_segment_range.start.line;\n                    if ((hint_line === header_lnum) || (hint_line >= hint_display_start_line && hint_line <= hint_display_end_line)) {\n                        inlay_hints.push(new vscode.InlayHint(field_segment_range.start, hint_label));\n                    }\n                }\n                if (num_after > 0) {\n                    let hint_label = alignment_char.repeat(num_after);\n                    let hint_line = field_segment_range.end.line;\n                    if ((hint_line === header_lnum) || (hint_line >= hint_display_start_line && hint_line <= hint_display_end_line)) {\n                        inlay_hints.push(new vscode.InlayHint(field_segment_range.end, hint_label));\n                    }\n                }\n            }\n        }\n    }\n    return inlay_hints;\n}\n\n\nfunction align_columns(records, comments, column_stats, delim) {\n    // Unlike shrink_columns, here we don't compute `has_edit` flag because it is\n    // 1: Algorithmically complicated (especially for multiline fields) and we also can't just compare fields lengths like in shrink.\n    // 2: The alignment procedure is opinionated and \"Already aligned\" report has little value.\n    // Because of this in case of executing \"Align\" command consecutively N times one would have to run undo N times too.\n    // Here records do not contain delim and column_stats were calculated without taking the delim length into account.\n    let column_offsets = calculate_column_offsets(column_stats, delim.length);\n    let result_lines = [];\n    let is_first_record = true;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record === null) {\n            result_lines.push(comment);\n            continue;\n        }\n        let aligned_fields = [];\n        let record_fields = get_trimmed_rfc_record_fields_from_record(record);\n        for (let fnum = 0; fnum < record_fields.length; fnum++) {\n            if (fnum >= column_stats.length) // Safeguard against async doc edit, should never happen.\n                break;\n            let is_last_field = fnum + 1 == record_fields.length;\n            let field_segments = record_fields[fnum];\n            for (let i = 0; i < field_segments.length; i++) {\n                let is_field_segment = i > 0;\n                if (is_field_segment) {\n                    result_lines.push(aligned_fields.join(delim));\n                    aligned_fields = [];\n                }\n                let is_last_in_line = is_last_field || i + 1 < field_segments.length;\n                let is_first_in_line = (fnum == 0) || is_field_segment;\n                let aligned_field = rfc_align_field(field_segments[i], is_first_record, column_stats[fnum], column_offsets[fnum], is_field_segment, is_first_in_line, is_last_in_line);\n                aligned_fields.push(aligned_field);\n            }\n        }\n        is_first_record = false;\n        result_lines.push(aligned_fields.join(delim));\n    }\n    return result_lines;\n}\n\n\nfunction shrink_columns(active_doc, delim, policy, comment_prefix) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, first_defective_line + 1];\n    }\n    let result_lines = [];\n    let has_edit = false;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record === null) {\n            result_lines.push(comment);\n            continue;\n        }\n        let aligned_fields = [];\n        for (let fnum = 0; fnum < record.length; fnum++) {\n            let field = record[fnum];\n            let field_lines = field.split('\\n');\n            for (let i = 0; i < field_lines.length; i++) {\n                if (i > 0) {\n                    result_lines.push(aligned_fields.join(delim));\n                    aligned_fields = [];\n                }\n                let aligned_field = field_lines[i].trim();\n                if (aligned_field.length != field_lines[i].length) {\n                    // Unlike in align function here we can just compare resulting length to decide if change has occured.\n                    has_edit = true;\n                }\n                aligned_fields.push(aligned_field);\n            }\n        }\n        result_lines.push(aligned_fields.join(delim));\n    }\n    if (!has_edit)\n        return [null, null];\n    return [result_lines.join('\\n'), null];\n}\n\n\nfunction make_table_name_key(file_path) {\n    return 'rbql_table_name:' + file_path;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction find_table_path(vscode_global_state, main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_path = vscode_global_state ? vscode_global_state.get(make_table_name_key(table_id)) : null;\n    if (table_path && fs.existsSync(table_path)) {\n        return table_path;\n    }\n    return null;\n}\n\n\nasync function read_header(table_path, encoding) {\n    if (encoding == 'latin-1')\n        encoding = 'binary';\n    let readline = require('readline');\n    let input_reader = readline.createInterface({ input: fs.createReadStream(table_path, {encoding: encoding}) });\n    let closed = false;\n    let promise_resolve = null;\n    let promise_reject = null;\n    let output_promise = new Promise(function(resolve, reject) {\n        promise_resolve = resolve;\n        promise_reject = reject;\n    });\n    input_reader.on('line', line => {\n        if (!closed) {\n            closed = true;\n            input_reader.close();\n            promise_resolve(line);\n        }\n    });\n    input_reader.on('error', error => {\n        promise_reject(error);\n    });\n    return output_promise;\n}\n\n\nfunction get_header_line(document, comment_prefix) {\n    const num_lines = document.lineCount;\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        const line_text = document.lineAt(lnum).text;\n        if (!comment_prefix || !line_text.startsWith(comment_prefix)) {\n            return [lnum, line_text];\n        }\n    }\n    return [null, null];\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1 + 1} -> ${num_fields_1} fields, record ${record_num_2 + 1} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RbqlIOHandlingError extends Error {}\n\nclass VSCodeRecordIterator extends rbql.RBQLInputIterator {\n    constructor(document, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a', trim_whitespaces=false) {\n        // We could have done a hack here actually: convert the document to stream/buffer and then use the standard reader.\n        super();\n        this.has_header = has_header;\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.NR = 0; // Record number.\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields).\n        let fail_on_warning = policy == 'quoted_rfc';\n        let [_num_records_parsed, _comments] = [null, null];\n        [this.records, _num_records_parsed, this.fields_info, this.first_defective_line, this._first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, fail_on_warning, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false, /*detect_trailing_spaces=*/false, /*min_num_fields_for_autodetection=*/-1, trim_whitespaces);\n        if (fail_on_warning && this.first_defective_line !== null) {\n            throw new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.records.length}, line ${this.first_defective_line}`);\n        }\n        this.first_record = this.records.length ? this.records[0] : [];\n        this.next_record_index = 0;\n    }\n\n    stop() {\n    }\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.has_header) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    }\n\n    async get_header() {\n        return this.has_header ? this.first_record : null;\n    }\n\n    do_get_record() {\n        if (this.next_record_index >= this.records.length) {\n            return null;\n        }\n        let record = this.records[this.next_record_index];\n        this.next_record_index += 1;\n        return record;\n    }\n\n    async get_record() {\n        if (this.NR == 0 && this.has_header) {\n            this.do_get_record(); // Skip the header record.\n        }\n        this.NR += 1;\n        let record = this.do_get_record();\n        return record;\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.fields_info.size > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    }\n}\n\n\nclass VSCodeWriter extends rbql.RBQLOutputWriter {\n    constructor(delim, policy) {\n        super();\n        this.delim = delim;\n        this.policy = policy;\n        this.header_len = null;\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.output_lines = [];\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.output_lines.push(this.polymorphic_join(fields));\n        return true;\n    };\n\n    async finish() {\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n}\n\nclass VSCodeTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(_table_id) {\n        throw new RbqlIOHandlingError(\"JOIN queries are currently not supported in vscode.dev web version.\");\n    }\n\n    get_warnings() {\n        return [];\n    };\n}\n\nasync function rbql_query_web(query_text, input_document, input_delim, input_policy, output_delim, output_policy, output_warnings, with_headers, comment_prefix=null, trim_whitespaces=false) {\n    let user_init_code = ''; // TODO find a way to have init code.\n    let join_tables_registry = new VSCodeTableRegistry(); // TODO find a way to have join registry.\n    let input_iterator = new VSCodeRecordIterator(input_document, input_delim, input_policy, with_headers, comment_prefix, /*table_name=*/'input', /*variable_prefix=*/'a', trim_whitespaces);\n    let output_writer = new VSCodeWriter(output_delim, output_policy);\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    return output_writer.output_lines;\n}\n\n\nclass VSCodeFileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(vscode_global_state, input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.vscode_global_state = vscode_global_state;\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.vscode_global_state, this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new rbql_csv.CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function rbql_query_node(vscode_global_state, query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers, comment_prefix, user_init_code, options) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!rbql_csv.is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!rbql_csv.is_ascii(input_delim) || !rbql_csv.is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = rbql_csv.read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new VSCodeFileSystemCSVRegistry(vscode_global_state, input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new rbql_csv.CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix, 'input', 'a', options['trim_whitespaces']);\n    let output_writer = new rbql_csv.CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nfunction make_multiline_row_info(vscode, delim_length, include_delim_length_in_ranges, newline_marker, fields, start_line, expected_end_line_for_control) {\n    // Semantic ranges in VSCode can't span multiple lines, so we use this workaround.\n    let record_ranges = [];\n    let record_fields = [];\n    let lnum_current = start_line;\n    let pos_in_editor_line = 0;\n    let next_pos_in_editor_line = 0;\n    for (let i = 0; i < fields.length; i++) {\n        let pos_in_multiline_field = 0;\n        // Group tokens belonging to the same logical field.\n        let multiline_field_singleline_ranges = [];\n        let multiline_field_singleline_components = [];\n        while (true) {\n            let newline_marker_pos = fields[i].indexOf(newline_marker, pos_in_multiline_field);\n            if (newline_marker_pos == -1)\n                break;\n            multiline_field_singleline_components.push(fields[i].substring(pos_in_multiline_field, newline_marker_pos));\n            multiline_field_singleline_ranges.push(new vscode.Range(lnum_current, pos_in_editor_line, lnum_current, pos_in_editor_line + newline_marker_pos - pos_in_multiline_field));\n            lnum_current += 1;\n            pos_in_editor_line = 0;\n            next_pos_in_editor_line = 0;\n            pos_in_multiline_field = newline_marker_pos + newline_marker.length;\n        }\n        next_pos_in_editor_line += fields[i].length - pos_in_multiline_field;\n        let current_range_end = next_pos_in_editor_line;\n        if (i + 1 < fields.length) {\n            next_pos_in_editor_line += delim_length;\n            if (include_delim_length_in_ranges) {\n                current_range_end = next_pos_in_editor_line;\n            }\n        }\n        // Note that `multiline_field_singleline_components` NEVER include the delim, while `multiline_field_singleline_ranges` COULD include the delim.\n        multiline_field_singleline_components.push(fields[i].substring(pos_in_multiline_field));\n        multiline_field_singleline_ranges.push(new vscode.Range(lnum_current, pos_in_editor_line, lnum_current, current_range_end));\n        record_fields.push(multiline_field_singleline_components);\n        record_ranges.push(multiline_field_singleline_ranges);\n        // From semantic tokenization perspective the end of token doesn't include the last character of vscode.Range i.e. it treats the range as [) interval, unlike the Range.contains() function which treats ranges as [] intervals.\n        pos_in_editor_line = next_pos_in_editor_line;\n    }\n    if (lnum_current != expected_end_line_for_control) {\n        return null;\n    }\n    return new RowInfo(record_ranges, record_fields, /*comment_prefix=*/null);\n}\n\n\nfunction is_opening_rfc_line(line_text, delim) {\n    // The line is oppening if by adding a character (to avoid accidental double double quote) and single double quote at the end we can make it parsable without warning!\n    // Some lines can be simultaneously opening and closing, e.g. `\",a1,a2` or `a1,a2,\"`\n    let [_record, warning] = csv_utils.split_quoted_str(line_text + 'x\"', delim);\n    return !warning;\n}\n\n\nclass RowInfo {\n    // TODO consider adding parsing_error_range.\n    constructor(record_ranges, record_fields, comment_range) {\n        this.record_ranges = record_ranges;\n        this.record_fields = record_fields;\n        this.comment_range = comment_range;\n    }\n}\n\n\nfunction extend_range_by_margin(vscode, doc, range, margin) {\n    let begin_line = Math.max(0, range.start.line - margin);\n    let end_line_inclusive = Math.min(doc.lineCount - 1, range.end.line + margin);\n    return new vscode.Range(begin_line, range.start.character, end_line_inclusive, range.end.character);\n}\n\n\nfunction parse_document_range_rfc(vscode, doc, delim, include_delim_length_in_ranges, comment_prefix, range) {\n    let begin_line = Math.max(0, range.start.line);\n    let end_line = Math.min(doc.lineCount, range.end.line + 1);\n    let table_ranges = [];\n    let line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n    // The first or the second line in range with an odd number of double quotes is a start line, after finding it we can use the standard parsing algorithm.\n    for (let lnum = begin_line; lnum < end_line; lnum++) {\n        let line_text = doc.lineAt(lnum).text;\n        if (lnum + 1 == doc.lineCount && !line_text)\n            break;\n        let inside_multiline_record_before = line_aggregator.is_inside_multiline_record();\n        let start_line = lnum - line_aggregator.get_num_lines_in_record();\n        line_aggregator.add_line(line_text);\n        let inside_multiline_record_after = line_aggregator.is_inside_multiline_record();\n        if (!inside_multiline_record_before && inside_multiline_record_after) {\n            // Must be an odd-num line, check if this is an openning line - otherwise reset ranges.\n            if (!is_opening_rfc_line(line_text, delim)) {\n                table_ranges = [];\n                line_aggregator.reset();\n            }\n        }\n        if (line_aggregator.has_comment_line) {\n            let comment_range = new vscode.Range(lnum, 0, lnum, line_text.length);\n            table_ranges.push(new RowInfo(/*record_ranges=*/null, /*record_fields=*/null, comment_range));\n            line_aggregator.reset();\n        } else if (line_aggregator.has_full_record) {\n            const newline_marker = '\\r\\n'; // Use '\\r\\n' here to guarantee that this sequence is not present anywhere in the lines themselves. We also compare expected_end_line_for_control at the end.\n            let combined_line = line_aggregator.get_full_line(newline_marker);\n            line_aggregator.reset();\n            let [fields, warning] = csv_utils.smart_split(combined_line, delim, QUOTED_POLICY, /*preserve_quotes_and_whitespaces=*/true);\n            if (!warning) {\n                let row_info = make_multiline_row_info(vscode, delim.length, include_delim_length_in_ranges, newline_marker, fields, start_line, /*expected_end_line_for_control=*/lnum);\n                if (row_info !== null) {\n                    // If row_info is null it means that `expected_end_line_for_control` doesn't match and something went very wrong with the newline_marker join workaround.\n                    table_ranges.push(row_info);\n                }\n            }\n        }\n    }\n    return table_ranges;\n}\n\n\nfunction parse_document_range_single_line(vscode, doc, delim, include_delim_length_in_ranges, policy, comment_prefix, range) {\n    let table_ranges = [];\n    let begin_line = Math.max(0, range.start.line);\n    let end_line = Math.min(doc.lineCount, range.end.line + 1);\n    for (let lnum = begin_line; lnum < end_line; lnum++) {\n        let record_ranges = [];\n        let record_fields = [];\n        let line_text = doc.lineAt(lnum).text;\n        if (lnum + 1 == doc.lineCount && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            let comment_range = new vscode.Range(lnum, 0, lnum, line_text.length);\n            table_ranges.push(new RowInfo(/*record_ranges=*/null, /*record_fields=*/null, comment_range));\n            continue;\n        }\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, /*preserve_quotes_and_whitespaces=*/true);\n        if (warning) {\n            // Just skip the faulty line. It is OK to do for all existing use cases of this function.\n            continue;\n        }\n        let cpos = 0;\n        let next_cpos = 0;\n        for (let i = 0; i < fields.length; i++) {\n            next_cpos += fields[i].length;\n            let current_range_end = next_cpos;\n            if (i + 1 < fields.length) {\n                next_cpos += delim.length;\n                if (include_delim_length_in_ranges) {\n                    current_range_end = next_cpos;\n                }\n            }\n            // Note that `record_fields` NEVER include the delim, while `record_ranges` COULD include the delim.\n            record_fields.push([fields[i]]);\n            record_ranges.push([new vscode.Range(lnum, cpos, lnum, current_range_end)]);\n            // From semantic tokenization perspective the end of token doesn't include the last character of vscode.Range i.e. it treats the range as [) interval, unlike the Range.contains() function which treats ranges as [] intervals.\n            cpos = next_cpos;\n        }\n        table_ranges.push(new RowInfo(record_ranges, record_fields, /*comment_range=*/null));\n    }\n    return table_ranges;\n}\n\n\nfunction parse_document_range(vscode, doc, delim, include_delim_length_in_ranges, policy, comment_prefix, range) {\n    // A single field can contain multiple ranges if it spans multiple lines.\n    // A generic example for an rfc file:\n    // [\n    //     record_ranges: [[field_1_range_1, field_1_range_2, ... ,field_1_range_n], ... [field_n_range_1]]\n    //     ...\n    //     record_ranges: [[field_1_range_1], ..., [field_n_range_1]]\n    // ]\n    // There is no warning returned because on parsing failure it would just return a partial range.\n    if (policy == QUOTED_RFC_POLICY) {\n        return parse_document_range_rfc(vscode, doc, delim, include_delim_length_in_ranges, comment_prefix, range);\n    } else {\n        return parse_document_range_single_line(vscode, doc, delim, include_delim_length_in_ranges, policy, comment_prefix, range);\n    }\n}\n\n\nfunction get_field_by_line_position(fields, delim_length, query_pos) {\n    if (!fields.length)\n        return null;\n    var col_num = 0;\n    var cpos = fields[col_num].length + delim_length;\n    while (query_pos > cpos && col_num + 1 < fields.length) {\n        col_num += 1;\n        cpos = cpos + fields[col_num].length + delim_length;\n    }\n    return col_num;\n}\n\n\nfunction get_cursor_position_info_rfc(vscode, document, delim, comment_prefix, position) {\n    let range = new vscode.Range(position.line, 0, position.line, 0);\n    range = extend_range_by_margin(vscode, document, range, 20);\n    let table_ranges = parse_document_range_rfc(vscode, document, delim, /*include_delim_length_in_ranges=*/true, comment_prefix, range);\n    let last_found_position_info = null; // Use last found instead of first found because cursor position at the border can belong to two ranges simultaneously.\n    for (let row_info of table_ranges) {\n        if (row_info.comment_range !== null) {\n            if (row_info.comment_range.contains(position)) {\n                last_found_position_info = {is_comment: true};\n            }\n        } else {\n            for (let col_num = 0; col_num < row_info.record_ranges.length; col_num++) {\n                // One logical field can map to multiple ranges if it spans multiple lines.\n                for (let record_range of row_info.record_ranges[col_num]) {\n                    if (record_range.contains(position)) {\n                        last_found_position_info = {column_number: col_num, total_columns: row_info.record_ranges.length, split_warning: false};\n                    }\n                }\n            }\n        }\n    }\n    return last_found_position_info;\n}\n\n\nfunction get_cursor_position_info_standard(document, delim, policy, comment_prefix, position) {\n    var lnum = position.line;\n    var cnum = position.character;\n    var line = document.lineAt(lnum).text;\n\n    if (comment_prefix && line.startsWith(comment_prefix))\n        return {is_comment: true};\n\n    let [entries, warning] = csv_utils.smart_split(line, delim, policy, true);\n    var col_num = get_field_by_line_position(entries, delim.length, cnum + 1);\n    if (col_num == null)\n        return null;\n    return {column_number: col_num, total_columns: entries.length, split_warning: warning};\n}\n\n\nfunction get_cursor_position_info(vscode, document, delim, policy, comment_prefix, position) {\n    if (policy === null)\n        return null;\n    if (policy == QUOTED_RFC_POLICY) {\n        return get_cursor_position_info_rfc(vscode, document, delim, comment_prefix, position);\n    } else {\n        return get_cursor_position_info_standard(document, delim, policy, comment_prefix, position);\n    }\n}\n\n\nfunction format_cursor_position_info(cursor_position_info, header, show_column_names, show_comments, max_label_length) {\n    if (cursor_position_info.is_comment) {\n        if (show_comments) {\n            return ['Comment', 'Comment'];\n        } else {\n            return [null, null];\n        }\n    }\n    let short_report = 'Col ' + (cursor_position_info.column_number + 1);\n    let full_report = '[Rainbow CSV] ' + short_report;\n    if (show_column_names && cursor_position_info.column_number < header.length) {\n        let column_label = header[cursor_position_info.column_number].trim();\n        let short_column_label = column_label.substr(0, max_label_length);\n        if (short_column_label != column_label)\n            short_column_label = short_column_label + '...';\n        short_report += ': ' + short_column_label;\n        full_report += ': ' + column_label;\n    }\n    if (cursor_position_info.split_warning) {\n        full_report += '; ERR: Inconsistent double quotes in line';\n    } else if (header.length != cursor_position_info.total_columns) {\n        full_report += `; WARN: Inconsistent num of fields, header: ${header.length}, this line: ${cursor_position_info.total_columns}`;\n    }\n    return [full_report, short_report];\n}\n\n\nfunction sample_records(document, delim, policy, comment_prefix, end_record, preview_window_size, stop_on_warning, cached_table_parse_result) {\n    let records = [];\n    let first_failed_line = null;\n    let vscode_doc_version = null;\n    let [_num_records_parsed, _fields_info, _first_trailing_space_line, _comments] = [null, null, null, null];\n    // Here `preview_window_size` is typically 100.\n    if (end_record < preview_window_size * 5) {\n        // Re-sample the records. Re-sampling top records is fast and it ensures that all manual changes are mirrored into RBQL console.\n        [records, _num_records_parsed, _fields_info, first_failed_line, _first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, stop_on_warning, /*max_records_to_parse=*/end_record, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false);\n    } else {\n        let need_full_doc_parse = true;\n        if (cached_table_parse_result.has(document.fileName)) {\n            [records, first_failed_line, vscode_doc_version] = cached_table_parse_result.get(document.fileName);\n            if (document.version === vscode_doc_version) {\n                need_full_doc_parse = false;\n            }\n        }\n        if (need_full_doc_parse) {\n            let [records, _num_records_parsed, _fields_info, first_failed_line, _first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, stop_on_warning, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false);\n            cached_table_parse_result.set(document.fileName, [records, first_failed_line, document.version]);\n        }\n        [records, first_failed_line, vscode_doc_version] = cached_table_parse_result.get(document.fileName);\n    }\n    return [records, first_failed_line];\n}\n\n\nfunction sample_preview_records_from_context(rbql_context, dst_message, preview_window_size, cached_table_parse_result) {\n    let [document, delim, policy, comment_prefix] = [rbql_context.input_document, rbql_context.delim, rbql_context.policy, rbql_context.comment_prefix];\n    rbql_context.requested_start_record = Math.max(rbql_context.requested_start_record, 0);\n    let stop_on_warning = policy == QUOTED_RFC_POLICY;\n    let [records, first_failed_line] = sample_records(document, delim, policy, comment_prefix, rbql_context.requested_start_record + preview_window_size, preview_window_size, stop_on_warning, cached_table_parse_result);;\n    if (first_failed_line !== null && policy == QUOTED_RFC_POLICY) {\n        dst_message.preview_sampling_error = `Double quotes are not consistent in record ${records.length + 1} which starts at line ${first_failed_line + 1}`;\n        return;\n    }\n    rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, records.length - preview_window_size));\n    let preview_records = records.slice(rbql_context.requested_start_record, rbql_context.requested_start_record + preview_window_size);\n\n    // Here we trim excessively long fields. The only benefit of doing is here instead of UI layer is to minimize the ammount of traffic that we send to UI - the total message size is limited.\n    for (let r = 0; r < preview_records.length; r++) {\n        let cur_record = preview_records[r];\n        for (let c = 0; c < cur_record.length; c++) {\n            if (cur_record[c].length > max_preview_field_length) {\n                cur_record[c] = cur_record[c].substr(0, max_preview_field_length) + '###UI_STRING_TRIM_MARKER###';\n            }\n        }\n    }\n    dst_message.preview_records = preview_records;\n    dst_message.actual_start_record = rbql_context.requested_start_record;\n}\n\nfunction show_lint_status_bar_button(vscode, extension_context, file_path, language_id) {\n\n    const COLOR_PROCESSING = '#A0A0A0';\n    const COLOR_ERROR      = '#f44242';\n    const COLOR_WARNING    = '#ffff28';\n    const COLOR_OK         = '#62f442';\n\n    let lint_cache_key = `${file_path}.${language_id}`;\n\n    if (!extension_context.lint_results.has(lint_cache_key)){\n      return;\n    }\n\n    var lint_report = extension_context.lint_results.get(lint_cache_key);\n\n    if (!extension_context.lint_status_bar_button){\n      extension_context.lint_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    }\n\n    extension_context.lint_status_bar_button.text = 'CSVLint';\n    let lint_report_msg = '';\n    if (lint_report.is_processing) {\n\n        extension_context.lint_status_bar_button.color = COLOR_PROCESSING;\n        extension_context.lint_status_bar_button.text = '$(clock) CSVLint';\n        lint_report_msg = 'Processing';\n\n    } else if (Number.isInteger(lint_report.first_defective_line)) {\n\n        lint_report_msg = `Error. Line ${lint_report.first_defective_line} has formatting error: double quote chars are not consistent`;\n        extension_context.lint_status_bar_button.color = COLOR_ERROR;\n        extension_context.lint_status_bar_button.text = '$(error) CSVLint';\n\n    } else if (lint_report.fields_info && lint_report.fields_info.size > 1) {\n\n        let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(lint_report.fields_info);\n        lint_report_msg = `Error. Number of fields is not consistent: e.g. record ${record_num_1 + 1} has ${num_fields_1} fields, and record ${record_num_2 + 1} has ${num_fields_2} fields`;\n        extension_context.lint_status_bar_button.color = COLOR_ERROR;\n        extension_context.lint_status_bar_button.text = '$(error) CSVLint';\n\n    } else if (Number.isInteger(lint_report.first_trailing_space_line)) {\n\n        lint_report_msg = `Leading/Trailing spaces detected: e.g. at line ${lint_report.first_trailing_space_line + 1}. Run \"Shrink\" command to remove them`;\n        extension_context.lint_status_bar_button.color = COLOR_WARNING;\n        extension_context.lint_status_bar_button.text = '$(alert) CSVLint';\n    } else {\n        assert(lint_report.is_ok);\n        extension_context.lint_status_bar_button.color = COLOR_OK;\n        extension_context.lint_status_bar_button.text = '$(pass) CSVLint';\n        lint_report_msg = 'OK';\n    }\n    extension_context.lint_status_bar_button.tooltip = lint_report_msg + '\\nClick to recheck';\n    extension_context.lint_status_bar_button.command = 'rainbow-csv.CSVLint';\n    extension_context.lint_status_bar_button.show();\n}\n\n\nfunction generate_column_edit_selections(vscode, active_doc, delim, policy, comment_prefix, edit_mode, col_num) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, `Unable to enter column edit mode: quoting error at line ${first_defective_line + 1}`, null];\n    }\n    if (records.length + comments.length != active_doc.lineCount) {\n        // It is possible to support editing of non-multiline columns in such files, but for simplicity we won't do this.\n        return [null, 'Column edit mode is not supported for files with multiline fields', null];\n    }\n    let lnum = 0;\n    let selections = [];\n    let warning_msg = null;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record !== null) {\n            if (col_num >= record.length) {\n                return [null, `Line ${lnum + 1} doesn't have field number ${col_num + 1}`, null];\n            }\n            let char_pos_before = record.slice(0, col_num).join('').length + col_num * delim.length;\n            let char_pos_after = record.slice(0, col_num + 1).join('').length + col_num * delim.length;\n            let line_text = record.join(delim);\n            if (!warning_msg && edit_mode == 'ce_before' && (policy == QUOTED_POLICY || policy == QUOTED_RFC_POLICY) && line_text.substring(char_pos_before - 2, char_pos_before + 2).indexOf('\"') != -1) {\n                warning_msg = `Be careful, cursor at line ${lnum + 1} has a double quote is in proximity.`;\n            }\n            if (!warning_msg && edit_mode == 'ce_after' && (policy == QUOTED_POLICY || policy == QUOTED_RFC_POLICY) && line_text.substring(char_pos_after - 2, char_pos_after + 2).indexOf('\"') != -1) {\n                warning_msg = `Be careful, cursor at line ${lnum + 1} has a double quote is in proximity.`;\n            }\n            if (!warning_msg && edit_mode == 'ce_select' && char_pos_before == char_pos_after) {\n                warning_msg = `Be careful, Field ${col_num + 1} at line ${lnum + 1} is empty.`;\n            }\n            let position_before = new vscode.Position(lnum, char_pos_before);\n            let position_after = new vscode.Position(lnum, char_pos_after);\n            if (edit_mode == 'ce_before') {\n                selections.push(new vscode.Selection(position_before, position_before));\n            }\n            if (edit_mode == 'ce_after') {\n                selections.push(new vscode.Selection(position_after, position_after));\n            }\n            if (edit_mode == 'ce_select') {\n                selections.push(new vscode.Selection(position_before, position_after));\n            }\n        }\n        lnum += 1;\n    }\n    return [selections, null, warning_msg];\n}\n\n\nmodule.exports.make_table_name_key = make_table_name_key;\nmodule.exports.find_table_path = find_table_path;\nmodule.exports.read_header = read_header;\nmodule.exports.rbql_query_web = rbql_query_web;\nmodule.exports.rbql_query_node = rbql_query_node;\nmodule.exports.get_header_line = get_header_line;\nmodule.exports.get_default_js_udf_content = get_default_js_udf_content;\nmodule.exports.get_default_python_udf_content = get_default_python_udf_content;\nmodule.exports.align_columns = align_columns;\nmodule.exports.shrink_columns = shrink_columns;\nmodule.exports.calculate_column_offsets = calculate_column_offsets;\nmodule.exports.calc_column_stats = calc_column_stats;\nmodule.exports.calc_column_stats_for_fragment = calc_column_stats_for_fragment;\nmodule.exports.reconcile_whole_doc_and_local_column_stats = reconcile_whole_doc_and_local_column_stats;\nmodule.exports.rfc_align_field = rfc_align_field;\nmodule.exports.evaluate_rfc_align_field = evaluate_rfc_align_field;\nmodule.exports.assert = assert;\nmodule.exports.get_field_by_line_position = get_field_by_line_position;\nmodule.exports.get_cursor_position_info = get_cursor_position_info;\nmodule.exports.format_cursor_position_info = format_cursor_position_info;\nmodule.exports.parse_document_range = parse_document_range;\nmodule.exports.parse_document_range_single_line = parse_document_range_single_line;\nmodule.exports.parse_document_range_rfc = parse_document_range_rfc; // Only for unit tests.\nmodule.exports.sample_preview_records_from_context = sample_preview_records_from_context;\nmodule.exports.sample_first_two_inconsistent_records = rbql.sample_first_two_inconsistent_records;\nmodule.exports.is_opening_rfc_line = is_opening_rfc_line; // Only for unit tests.\nmodule.exports.show_lint_status_bar_button = show_lint_status_bar_button;\nmodule.exports.get_cursor_position_if_unambiguous = get_cursor_position_if_unambiguous;\nmodule.exports.RecordCommentMerger = RecordCommentMerger;\nmodule.exports.ColumnStat = ColumnStat;\nmodule.exports.generate_column_edit_selections = generate_column_edit_selections;\nmodule.exports.generate_inlay_hints = generate_inlay_hints;\nmodule.exports.extend_range_by_margin = extend_range_by_margin;\nmodule.exports.calc_max_column_widths = calc_max_column_widths; // Only for unit tests.\nmodule.exports.generate_markdown_lines = generate_markdown_lines;\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","module.exports = require(\"vscode\");","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","module.exports = [\n    [ 0x0300, 0x036F ], [ 0x0483, 0x0486 ], [ 0x0488, 0x0489 ],\n    [ 0x0591, 0x05BD ], [ 0x05BF, 0x05BF ], [ 0x05C1, 0x05C2 ],\n    [ 0x05C4, 0x05C5 ], [ 0x05C7, 0x05C7 ], [ 0x0600, 0x0603 ],\n    [ 0x0610, 0x0615 ], [ 0x064B, 0x065E ], [ 0x0670, 0x0670 ],\n    [ 0x06D6, 0x06E4 ], [ 0x06E7, 0x06E8 ], [ 0x06EA, 0x06ED ],\n    [ 0x070F, 0x070F ], [ 0x0711, 0x0711 ], [ 0x0730, 0x074A ],\n    [ 0x07A6, 0x07B0 ], [ 0x07EB, 0x07F3 ], [ 0x0901, 0x0902 ],\n    [ 0x093C, 0x093C ], [ 0x0941, 0x0948 ], [ 0x094D, 0x094D ],\n    [ 0x0951, 0x0954 ], [ 0x0962, 0x0963 ], [ 0x0981, 0x0981 ],\n    [ 0x09BC, 0x09BC ], [ 0x09C1, 0x09C4 ], [ 0x09CD, 0x09CD ],\n    [ 0x09E2, 0x09E3 ], [ 0x0A01, 0x0A02 ], [ 0x0A3C, 0x0A3C ],\n    [ 0x0A41, 0x0A42 ], [ 0x0A47, 0x0A48 ], [ 0x0A4B, 0x0A4D ],\n    [ 0x0A70, 0x0A71 ], [ 0x0A81, 0x0A82 ], [ 0x0ABC, 0x0ABC ],\n    [ 0x0AC1, 0x0AC5 ], [ 0x0AC7, 0x0AC8 ], [ 0x0ACD, 0x0ACD ],\n    [ 0x0AE2, 0x0AE3 ], [ 0x0B01, 0x0B01 ], [ 0x0B3C, 0x0B3C ],\n    [ 0x0B3F, 0x0B3F ], [ 0x0B41, 0x0B43 ], [ 0x0B4D, 0x0B4D ],\n    [ 0x0B56, 0x0B56 ], [ 0x0B82, 0x0B82 ], [ 0x0BC0, 0x0BC0 ],\n    [ 0x0BCD, 0x0BCD ], [ 0x0C3E, 0x0C40 ], [ 0x0C46, 0x0C48 ],\n    [ 0x0C4A, 0x0C4D ], [ 0x0C55, 0x0C56 ], [ 0x0CBC, 0x0CBC ],\n    [ 0x0CBF, 0x0CBF ], [ 0x0CC6, 0x0CC6 ], [ 0x0CCC, 0x0CCD ],\n    [ 0x0CE2, 0x0CE3 ], [ 0x0D41, 0x0D43 ], [ 0x0D4D, 0x0D4D ],\n    [ 0x0DCA, 0x0DCA ], [ 0x0DD2, 0x0DD4 ], [ 0x0DD6, 0x0DD6 ],\n    [ 0x0E31, 0x0E31 ], [ 0x0E34, 0x0E3A ], [ 0x0E47, 0x0E4E ],\n    [ 0x0EB1, 0x0EB1 ], [ 0x0EB4, 0x0EB9 ], [ 0x0EBB, 0x0EBC ],\n    [ 0x0EC8, 0x0ECD ], [ 0x0F18, 0x0F19 ], [ 0x0F35, 0x0F35 ],\n    [ 0x0F37, 0x0F37 ], [ 0x0F39, 0x0F39 ], [ 0x0F71, 0x0F7E ],\n    [ 0x0F80, 0x0F84 ], [ 0x0F86, 0x0F87 ], [ 0x0F90, 0x0F97 ],\n    [ 0x0F99, 0x0FBC ], [ 0x0FC6, 0x0FC6 ], [ 0x102D, 0x1030 ],\n    [ 0x1032, 0x1032 ], [ 0x1036, 0x1037 ], [ 0x1039, 0x1039 ],\n    [ 0x1058, 0x1059 ], [ 0x1160, 0x11FF ], [ 0x135F, 0x135F ],\n    [ 0x1712, 0x1714 ], [ 0x1732, 0x1734 ], [ 0x1752, 0x1753 ],\n    [ 0x1772, 0x1773 ], [ 0x17B4, 0x17B5 ], [ 0x17B7, 0x17BD ],\n    [ 0x17C6, 0x17C6 ], [ 0x17C9, 0x17D3 ], [ 0x17DD, 0x17DD ],\n    [ 0x180B, 0x180D ], [ 0x18A9, 0x18A9 ], [ 0x1920, 0x1922 ],\n    [ 0x1927, 0x1928 ], [ 0x1932, 0x1932 ], [ 0x1939, 0x193B ],\n    [ 0x1A17, 0x1A18 ], [ 0x1B00, 0x1B03 ], [ 0x1B34, 0x1B34 ],\n    [ 0x1B36, 0x1B3A ], [ 0x1B3C, 0x1B3C ], [ 0x1B42, 0x1B42 ],\n    [ 0x1B6B, 0x1B73 ], [ 0x1DC0, 0x1DCA ], [ 0x1DFE, 0x1DFF ],\n    [ 0x200B, 0x200F ], [ 0x202A, 0x202E ], [ 0x2060, 0x2063 ],\n    [ 0x206A, 0x206F ], [ 0x20D0, 0x20EF ], [ 0x302A, 0x302F ],\n    [ 0x3099, 0x309A ], [ 0xA806, 0xA806 ], [ 0xA80B, 0xA80B ],\n    [ 0xA825, 0xA826 ], [ 0xFB1E, 0xFB1E ], [ 0xFE00, 0xFE0F ],\n    [ 0xFE20, 0xFE23 ], [ 0xFEFF, 0xFEFF ], [ 0xFFF9, 0xFFFB ],\n    [ 0x10A01, 0x10A03 ], [ 0x10A05, 0x10A06 ], [ 0x10A0C, 0x10A0F ],\n    [ 0x10A38, 0x10A3A ], [ 0x10A3F, 0x10A3F ], [ 0x1D167, 0x1D169 ],\n    [ 0x1D173, 0x1D182 ], [ 0x1D185, 0x1D18B ], [ 0x1D1AA, 0x1D1AD ],\n    [ 0x1D242, 0x1D244 ], [ 0xE0001, 0xE0001 ], [ 0xE0020, 0xE007F ],\n    [ 0xE0100, 0xE01EF ]\n]\n","'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\n/** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\n/** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\n/** @type {(x: unknown) => x is readonly unknown[]} */\nfunction isArray(x) {\n    return toStr.call(x) === '[object Array]';\n}\n\n/** @type {import('.')._internal} */\nmodule.exports = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (isArray(list)) {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n","'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","\"use strict\"\n\nvar combining = require('./combining')\n\nvar DEFAULTS = {\n  nul: 0,\n  control: 0\n}\n\nmodule.exports = function wcwidth(str) {\n  return wcswidth(str, DEFAULTS)\n}\n\n/*\n *  The following functions define the column width of an ISO 10646\n *  character as follows:\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value\n *    of -1.\n *  - Non-spacing and enclosing combining characters (general category\n *    code Mn or Me in the\n *    Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode\n *    database) and ZERO WIDTH\n *    SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)\n *    have a column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian\n *    Full-width (F) category as\n *    defined in Unicode Technical Report #11 have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and\n *    WGL4 characters, Unicode control characters, etc.) have a column\n *    width of 1.\n *  This implementation assumes that characters are encoded in ISO 10646.\n*/\n\nfunction wcswidth(str, opts) {\n  if (typeof str !== 'string') return wcwidth(str, opts)\n\n  var s = 0\n  for (var i = 0; i < str.length; i++) {\n    var n = wcwidth(str.charCodeAt(i), opts)\n    if (n < 0) return -1\n    s += n\n  }\n\n  return s\n}\n\nfunction wcwidth(ucs, opts) {\n  // test for 8-bit control characters\n  if (ucs === 0) return opts.nul\n  if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return opts.control\n\n  // binary search in table of non-spacing characters\n  if (bisearch(ucs)) return 0\n\n  // if we arrive here, ucs is not a combining or C0/C1 control character\n  return 1 +\n      (ucs >= 0x1100 &&\n       (ucs <= 0x115f ||                       // Hangul Jamo init. consonants\n        ucs == 0x2329 || ucs == 0x232a ||\n        (ucs >= 0x2e80 && ucs <= 0xa4cf &&\n         ucs != 0x303f) ||                     // CJK ... Yi\n        (ucs >= 0xac00 && ucs <= 0xd7a3) ||    // Hangul Syllables\n        (ucs >= 0xf900 && ucs <= 0xfaff) ||    // CJK Compatibility Ideographs\n        (ucs >= 0xfe10 && ucs <= 0xfe19) ||    // Vertical forms\n        (ucs >= 0xfe30 && ucs <= 0xfe6f) ||    // CJK Compatibility Forms\n        (ucs >= 0xff00 && ucs <= 0xff60) ||    // Fullwidth Forms\n        (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n        (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n        (ucs >= 0x30000 && ucs <= 0x3fffd)));\n}\n\nfunction bisearch(ucs) {\n  var min = 0\n  var max = combining.length - 1\n  var mid\n\n  if (ucs < combining[0][0] || ucs > combining[max][1]) return false\n\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2)\n    if (ucs > combining[mid][1]) min = mid + 1\n    else if (ucs < combining[mid][0]) max = mid - 1\n    else return true\n  }\n\n  return false\n}\n","// This file stores only functionality that is required for idle operation of Rainbow CSV i.e. autodetection only.\n// We want to avoid loading/parsing a lot of JS code in cases where we don't have any CSV files to work with.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\nclass RecordTextConsumer {\n    // The only purpose of this class is to avoid code duplication when dealing with leftover lines in line_aggregator (the second `consume` call).\n    constructor(delim, policy, stop_on_warning, collect_records, preserve_quotes_and_whitespaces, detect_trailing_spaces, min_num_fields_for_autodetection, trim_whitespaces) {\n        this.delim = delim;\n        this.policy = policy;\n        this.stop_on_warning = stop_on_warning;\n        this.first_defective_line = null;\n        this.records = collect_records ? [] : null;\n        this.collect_records = collect_records;\n        this.num_records_parsed = 0;\n        this.fields_info = new Map();\n        this.first_trailing_space_line = null;\n        this.detect_trailing_spaces = detect_trailing_spaces;\n        this.preserve_quotes_and_whitespaces = preserve_quotes_and_whitespaces;\n        this.min_num_fields_for_autodetection = min_num_fields_for_autodetection;\n        this.trim_whitespaces = trim_whitespaces;\n    }\n\n    consume(record_text, record_start_line) {\n        let [record, warning] = csv_utils.smart_split(record_text, this.delim, this.policy, this.preserve_quotes_and_whitespaces);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = record_start_line;\n            }\n            if (this.stop_on_warning)\n                return /*can_continue=*/false;\n        }\n        if (this.detect_trailing_spaces && this.first_trailing_space_line === null) {\n            for (let field of record) {\n                if (field.length && (field.charAt(0) == ' ' || field.charAt(field.length - 1) == ' ')) {\n                    this.first_trailing_space_line = record_start_line;\n                }\n            }\n        }\n        if (this.trim_whitespaces) {\n            record = record.map((v) => v.trim());\n        }\n        if (!this.fields_info.has(record.length)) {\n            this.fields_info.set(record.length, this.num_records_parsed);\n            if (this.min_num_fields_for_autodetection != -1) {\n                // Autodetection mode: stop on inconsistent records length and when there is not enough columns (typically less than 2 i.e. 1).\n                if (record.length < this.min_num_fields_for_autodetection)\n                    return /*can_continue=*/false;\n                if (this.fields_info.size > 1)\n                    return /*can_continue=*/false;\n            }\n        }\n        if (this.collect_records) {\n            this.records.push(record);\n        }\n        this.num_records_parsed += 1;\n        return /*can_continue=*/true;\n    }\n}\n\n\nfunction parse_document_records(document, delim, policy, comment_prefix=null, stop_on_warning=false, max_records_to_parse=-1, collect_records=true, preserve_quotes_and_whitespaces=false, detect_trailing_spaces=false, min_num_fields_for_autodetection=-1, trim_whitespaces=false) {\n    // TODO consider switching to a single row_info array format that would have (comment, record_ranges and the record itself) - this would make it more compatible with the incremental parsing functions.\n    let num_lines = document.lineCount;\n    let record_start_line = 0;\n    let line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n    let consumer = new RecordTextConsumer(delim, policy, stop_on_warning, collect_records, preserve_quotes_and_whitespaces, detect_trailing_spaces, min_num_fields_for_autodetection, trim_whitespaces);\n    let comments = []; // An ordered list of {record_no, comment_text} tuples which can be merged with the records later.\n\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        let line_text = document.lineAt(lnum).text;\n        if (lnum + 1 >= num_lines && line_text == \"\") {\n            if (collect_records) {\n                // Treat the last empty line as a comment - this is to prevent align/shrink functions from removing it.\n                comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n            }\n            break; // Skip the last empty line.\n        }\n        let record_text = null;\n        if (policy == 'quoted_rfc') {\n            line_aggregator.add_line(line_text);\n            if (line_aggregator.has_comment_line) {\n                record_start_line = lnum + 1;\n                line_aggregator.reset();\n                if (collect_records) {\n                    comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n                }\n                continue;\n            } else if (line_aggregator.has_full_record) {\n                record_text = line_aggregator.get_full_line('\\n');\n                line_aggregator.reset();\n            } else {\n                continue;\n            }\n        } else {\n            if (comment_prefix && line_text.startsWith(comment_prefix)) {\n                record_start_line = lnum + 1;\n                if (collect_records) {\n                    comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n                }\n                continue;\n            } else {\n                record_text = line_text;\n            }\n        }\n        if (!consumer.consume(record_text, record_start_line)) {\n            return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n        }\n        record_start_line = lnum + 1;\n        if (max_records_to_parse !== -1 && consumer.num_records_parsed >= max_records_to_parse) {\n            return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n        }\n    }\n\n    if (line_aggregator.is_inside_multiline_record()) {\n        assert(policy == 'quoted_rfc');\n        consumer.consume(line_aggregator.get_full_line('\\n'), record_start_line);\n    }\n    return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n}\n\n\nmodule.exports.parse_document_records = parse_document_records;\nmodule.exports.assert = assert;\n","'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n","'use strict';\n\nvar callBound = require('call-bound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\nvar gOPD = require('gopd');\n\n/** @type {import('.')} */\nvar fn;\n\nif (hasToStringTag) {\n\t/** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */\n\tvar $exec = callBound('RegExp.prototype.exec');\n\t/** @type {object} */\n\tvar isRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\t/** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */\n\tvar badStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n\n\t/** @type {import('.')} */\n\t// @ts-expect-error TS can't figure out that the $exec call always throws\n\t// eslint-disable-next-line consistent-return\n\tfn = function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {NonNullable<typeof gOPD>} */ (gOPD)(/** @type {{ lastIndex?: unknown }} */ (value), 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && hasOwn(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t$exec(value, /** @type {string} */ (/** @type {unknown} */ (badStringifier)));\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t};\n} else {\n\t/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\n\tvar $toString = callBound('Object.prototype.toString');\n\t/** @const @type {'[object RegExp]'} */\n\tvar regexClass = '[object RegExp]';\n\n\t/** @type {import('.')} */\n\tfn = function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n}\n\nmodule.exports = fn;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","let field_regular_expression = '\"((?:[^\"]*\"\")*[^\"]*)\"';\nlet field_rgx = new RegExp('^' + field_regular_expression);\nlet field_rgx_external_whitespaces = new RegExp('^ *' + field_regular_expression + ' *');\n\n\n// TODO consider making this file (and rbql.js) both node and browser compatible: https://caolan.org/posts/writing_for_node_and_the_browser.html\n\n\nfunction split_lines(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\nfunction extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result) {\n    var warning = false;\n    let src_cur = src.substring(cidx);\n    let rgx = allow_external_whitespaces ? field_rgx_external_whitespaces : field_rgx;\n    let match_obj = rgx.exec(src_cur);\n    if (match_obj !== null) {\n        let match_end = match_obj[0].length;\n        if (cidx + match_end == src.length || src[cidx + match_end] == dlm) {\n            if (preserve_quotes_and_whitespaces) {\n                result.push(match_obj[0]);\n            } else {\n                result.push(match_obj[1].replace(/\"\"/g, '\"'));\n            }\n            return [cidx + match_end + 1, false];\n        }\n        warning = true;\n    }\n    var uidx = src.indexOf(dlm, cidx);\n    if (uidx == -1)\n        uidx = src.length;\n    var field = src.substring(cidx, uidx);\n    warning = warning || field.indexOf('\"') != -1;\n    result.push(field);\n    return [uidx + 1, warning];\n}\n\n\nfunction split_quoted_str(src, dlm, preserve_quotes_and_whitespaces=false) {\n    // This function is newline-agnostic i.e. it can also split records with multiline fields.\n    if (src.indexOf('\"') == -1) // Optimization for most common case\n        return [src.split(dlm), false];\n    var result = [];\n    var cidx = 0;\n    var warning = false;\n    let allow_external_whitespaces = dlm != ' ';\n    while (cidx < src.length) {\n        var extraction_report = extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result);\n        cidx = extraction_report[0];\n        warning = warning || extraction_report[1];\n    }\n    if (src.charAt(src.length - 1) == dlm)\n        result.push('');\n    return [result, warning];\n}\n\n\nfunction quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction rfc_quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1 || src.indexOf('\\n') != -1 || src.indexOf('\\r') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction unquote_field(field) {\n    let rgx = new RegExp('^' + ' *' + field_regular_expression + ' *$');\n    let match_obj = rgx.exec(field);\n    if (match_obj !== null) {\n        return match_obj[1].replace(/\"\"/g, '\"');\n    }\n    return field;\n}\n\n\nfunction unquote_fields(fields) {\n    return fields.map(unquote_field);\n}\n\n\nfunction split_whitespace_separated_str(src, preserve_whitespaces=false) {\n    var rgxp = preserve_whitespaces ? new RegExp(' *[^ ]+ *', 'g') : new RegExp('[^ ]+', 'g');\n    let result = [];\n    let match_obj = null;\n    while((match_obj = rgxp.exec(src)) !== null) {\n        result.push(match_obj[0]);\n    }\n    if (preserve_whitespaces) {\n        for (let i = 0; i < result.length - 1; i++) {\n            result[i] = result[i].slice(0, -1);\n        }\n    }\n    return result;\n}\n\n\nfunction smart_split(src, dlm, policy, preserve_quotes_and_whitespaces) {\n    if (policy === 'simple')\n        return [src.split(dlm), false];\n    if (policy === 'whitespace')\n        return [split_whitespace_separated_str(src, preserve_quotes_and_whitespaces), false];\n    if (policy === 'monocolumn')\n        return [[src], false];\n    return split_quoted_str(src, dlm, preserve_quotes_and_whitespaces);\n}\n\n\nclass MultilineRecordAggregator {\n    constructor(comment_prefix) {\n        this.comment_prefix = comment_prefix;\n        this.reset();\n    }\n    add_line(line_text) {\n        if (this.has_full_record || this.has_comment_line) {\n            throw new Error('Invalid usage - record aggregator must be reset before adding new lines');\n        }\n        if (this.comment_prefix && this.rfc_line_buffer.length == 0 && line_text.startsWith(this.comment_prefix)) {\n            this.has_comment_line = true;\n            return false;\n        }\n        let match_list = line_text.match(/\"/g);\n        let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n        this.rfc_line_buffer.push(line_text);\n        this.has_full_record = (!has_unbalanced_double_quote && this.rfc_line_buffer.length == 1) || (has_unbalanced_double_quote && this.rfc_line_buffer.length > 1);\n        return this.has_full_record;\n    }\n    is_inside_multiline_record() {\n        return this.rfc_line_buffer.length && !this.has_full_record;\n    }\n    get_full_line(line_separator) {\n        return this.rfc_line_buffer.join(line_separator);\n    }\n    get_num_lines_in_record() {\n        return this.rfc_line_buffer.length;\n    }\n    reset() {\n        this.rfc_line_buffer = [];\n        this.has_full_record = false;\n        this.has_comment_line = false;\n    }\n}\n\n\nmodule.exports.split_quoted_str = split_quoted_str;\nmodule.exports.split_whitespace_separated_str = split_whitespace_separated_str;\nmodule.exports.smart_split = smart_split;\nmodule.exports.quote_field = quote_field;\nmodule.exports.rfc_quote_field = rfc_quote_field;\nmodule.exports.unquote_field = unquote_field;\nmodule.exports.unquote_fields = unquote_fields;\nmodule.exports.split_lines = split_lines;\nmodule.exports.MultilineRecordAggregator = MultilineRecordAggregator;\n","'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar gOPD = require('gopd');\nvar getProto = require('get-proto');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {import('./types').Getter} Getter */\n/** @type {import('./types').Cache} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getProto) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr && getProto) {\n\t\t\tvar proto = getProto(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor && proto) {\n\t\t\t\tvar superProto = getProto(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\tcache[\n\t\t\t\t/** @type {`$${import('.').TypedArrayName}`} */ ('$' + typedArray)\n\t\t\t] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */ (\n\t\t\t\t// @ts-expect-error TODO FIXME\n\t\t\t\tcallBind(fn)\n\t\t\t);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(typedArray, 1));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */(cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(name, 1));\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float16Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst util = require('util');\n\nconst rbql = require('./rbql.js');\nconst csv_utils = require('./csv_utils.js');\n\n\nconst utf_decoding_error = 'Unable to decode input table as UTF-8. Use binary (latin-1) encoding instead';\n\n\nclass RbqlIOHandlingError extends Error {}\nclass AssertionError extends Error {}\n\n\n// TODO performance improvement: replace smart_split() with polymorphic_split()\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction interpret_named_csv_format(format_name) {\n    format_name = format_name.toLowerCase();\n    if (format_name == 'monocolumn')\n        return ['', 'monocolumn'];\n    if (format_name == 'csv')\n        return [',', 'quoted'];\n    if (format_name == 'tsv')\n        return ['\\t', 'simple'];\n    throw new RbqlIOHandlingError(`Unknown format name: \"${format_name}\"`);\n}\n\n\n\nfunction is_ascii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\n\n\nfunction read_user_init_code(rbql_init_source_path) {\n    return fs.readFileSync(rbql_init_source_path, 'utf-8');\n}\n\n\nfunction remove_utf8_bom(line, assumed_source_encoding) {\n    if (assumed_source_encoding == 'binary' && line.length >= 3 && line.charCodeAt(0) === 0xEF && line.charCodeAt(1) === 0xBB && line.charCodeAt(2) === 0xBF) {\n        return line.substring(3);\n    }\n    if (assumed_source_encoding == 'utf-8' && line.length >= 1 && line.charCodeAt(0) === 0xFEFF) {\n        return line.substring(1);\n    }\n    return line;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1} -> ${num_fields_1} fields, record ${record_num_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction try_read_index(index_path) {\n    var content = null;\n    try {\n        content = fs.readFileSync(index_path, 'utf-8');\n    } catch (e) {\n        return [];\n    }\n    var lines = content.split('\\n');\n    var records = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (!lines[i])\n            continue;\n        var record = lines[i].split('\\t');\n        records.push(record);\n    }\n    return records;\n}\n\n\nfunction get_index_record(index_path, key) {\n    var records = try_read_index(index_path);\n    for (var i = 0; i < records.length; i++) {\n        if (records[i].length && records[i][0] == key) {\n            return records[i];\n        }\n    }\n    return null;\n}\n\n\nfunction find_table_path(main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_names_settings_path = path.join(os.homedir(), '.rbql_table_names');\n    var name_record = get_index_record(table_names_settings_path, table_id);\n    if (name_record && name_record.length > 1 && fs.existsSync(name_record[1])) {\n        return name_record[1];\n    }\n    return null;\n}\n\n\nclass RecordQueue {\n    // TODO compare performance with a linked list\n    constructor() {\n        this.push_stack = [];\n        this.pull_stack = [];\n    }\n\n    enqueue(record) {\n        this.push_stack.push(record);\n    }\n\n    dequeue() {\n        if (!this.pull_stack.length) {\n            if (!this.push_stack.length)\n                return null;\n            this.pull_stack = this.push_stack;\n            this.pull_stack.reverse();\n            this.push_stack = [];\n        }\n        return this.pull_stack.pop();\n    }\n}\n\n\nclass CSVRecordIterator extends rbql.RBQLInputIterator {\n    // CSVRecordIterator implements a typical async producer-consumer model with an internal buffer:\n    // get_record() - consumer\n    // stream.on('data') - producer\n    constructor(stream, csv_path, encoding, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a', trim_whitespaces=false) {\n        super();\n        this.stream = stream;\n        this.csv_path = csv_path;\n        assert((this.stream === null) != (this.csv_path === null));\n        this.encoding = encoding;\n        this.delim = delim;\n        this.policy = policy;\n\n        this.has_header = has_header;\n        this.first_record = null;\n        this.first_record_should_be_emitted = !has_header;\n        this.header_preread_complete = false;\n\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.comment_prefix = comment_prefix;\n        this.trim_whitespaces = trim_whitespaces;\n\n        this.decoder = null;\n        if (encoding == 'utf-8' && this.csv_path === null) {\n            // Unfortunately util.TextDecoder has serious flaws:\n            // 1. It doesn't work in Node without ICU: https://nodejs.org/api/util.html#util_new_textdecoder_encoding_options\n            // 2. It is broken in Electron: https://github.com/electron/electron/issues/18733\n\n            // Technically we can implement our own custom streaming text decoder, using the 3 following technologies:\n            // 1. decode-encode validation method from https://stackoverflow.com/a/32279283/2898283\n            // 2. Scanning buffer chunks for non-continuation utf-8 bytes from the end of the buffer:\n            //    src_buffer -> (buffer_before, buffer_after) where buffer_after is very small(a couple of bytes) and buffer_before is large and ends with a non-continuation bytes\n            // 3. Internal buffer to store small tail part from the previous buffer\n            this.decoder = new util.TextDecoder(encoding, {fatal: true, stream: true});\n        }\n\n        this.input_exhausted = false;\n        this.started = false;\n\n        this.utf8_bom_removed = false; // BOM doesn't get automatically removed by the decoder when utf-8 file is treated as latin-1\n        this.first_defective_line = null;\n\n        this.fields_info = new Map();\n        this.NR = 0; // Record number\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields)\n\n        this.line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n\n        this.partially_decoded_line = '';\n        this.partially_decoded_line_ends_with_cr = false;\n\n        // Holds an external \"resolve\" function which is called when everything is fine.\n        this.resolve_current_record = null;\n        // Holds an external \"reject\" function which is called when error has occured.\n        this.reject_current_record = null;\n        // Holds last exception if we don't have any reject callbacks from clients yet.\n        this.current_exception = null;\n\n        this.produced_records_queue = new RecordQueue();\n\n        this.process_line_polymorphic = policy == 'quoted_rfc' ? this.process_partial_rfc_record_line : this.process_record_line_simple;\n    }\n\n\n    handle_query_modifier(modifier) {\n        // For `... WITH (header) ...` syntax\n        if (['header', 'headers'].indexOf(modifier) != -1) {\n            this.has_header = true;\n            this.first_record_should_be_emitted = false;\n        }\n        if (['noheader', 'noheaders'].indexOf(modifier) != -1) {\n            this.has_header = false;\n            this.first_record_should_be_emitted = true;\n        }\n    }\n\n\n    reset_external_callbacks() {\n        // Drop external callbacks simultaneously since promises can only resolve once, see: https://stackoverflow.com/a/18218542/2898283\n        this.reject_current_record = null;\n        this.resolve_current_record = null;\n    }\n\n    try_propagate_exception() {\n        if (this.current_exception && this.reject_current_record) {\n            let reject = this.reject_current_record;\n            let exception = this.current_exception;\n            this.reset_external_callbacks();\n            this.current_exception = null;\n            reject(exception);\n        }\n    }\n\n\n    store_or_propagate_exception(exception) {\n        if (this.current_exception === null)\n            // Ignore subsequent exceptions if we already have an unreported error. This way we prioritize earlier errors over the more recent ones.\n            this.current_exception = exception;\n        this.try_propagate_exception();\n    }\n\n\n    async preread_first_record() {\n        if (this.header_preread_complete)\n            return;\n        this.first_record = await this.get_record();\n        this.header_preread_complete = true; // We must set header_preread_complete to true after calling get_record(), because get_record() uses it internally.\n        if (this.first_record === null) {\n            return;\n        }\n        if (this.stream)\n            this.stream.pause();\n        this.first_record = this.first_record.slice();\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n\n        await this.preread_first_record();\n        if (this.has_header && this.first_record) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    };\n\n    async get_header() {\n        await this.preread_first_record();\n        return this.has_header ? this.first_record : null;\n    }\n\n\n    try_resolve_next_record() {\n        this.try_propagate_exception();\n        if (this.resolve_current_record === null)\n            return;\n\n        let record = null;\n        if (this.first_record_should_be_emitted && this.header_preread_complete) {\n            this.first_record_should_be_emitted = false;\n            record = this.first_record;\n        } else {\n            record = this.produced_records_queue.dequeue();\n        }\n\n        if (record === null && !this.input_exhausted)\n            return;\n        let resolve = this.resolve_current_record;\n        this.reset_external_callbacks();\n        resolve(record);\n    };\n\n\n    async get_record() {\n        if (!this.started)\n            await this.start();\n        if (this.stream && this.stream.isPaused())\n            this.stream.resume();\n\n        let parent_iterator = this;\n        let current_record_promise = new Promise(function(resolve, reject) {\n            parent_iterator.resolve_current_record = resolve;\n            parent_iterator.reject_current_record = reject;\n        });\n        this.try_resolve_next_record();\n        return current_record_promise;\n    };\n\n\n    async get_all_records(num_records=null) {\n        let records = [];\n        while (true) {\n            let record = await this.get_record();\n            if (record === null)\n                break;\n            records.push(record);\n            if (num_records && records.length >= num_records) {\n                this.stop();\n                break;\n            }\n        }\n        return records;\n    };\n\n\n    process_record_line_simple(line) {\n        if (this.comment_prefix && line.startsWith(this.comment_prefix))\n            return; // Just skip the line\n        this.process_record_line(line);\n    }\n\n\n    process_record_line(line) {\n        this.NR += 1;\n        var [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, false);\n        if (this.trim_whitespaces) {\n            record = record.map((v) => v.trim());\n        }\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`));\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.has(num_fields))\n            this.fields_info.set(num_fields, this.NR);\n        this.produced_records_queue.enqueue(record);\n        this.try_resolve_next_record();\n    };\n\n\n    process_partial_rfc_record_line(line) {\n        this.line_aggregator.add_line(line);\n        if (this.line_aggregator.has_comment_line) {\n            this.line_aggregator.reset();\n        } else if (this.line_aggregator.has_full_record) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n            this.line_aggregator.reset();\n        }\n    };\n\n\n    process_line(line) {\n        this.NL += 1;\n        if (this.NL === 1) {\n            var clean_line = remove_utf8_bom(line, this.encoding);\n            if (clean_line != line) {\n                line = clean_line;\n                this.utf8_bom_removed = true;\n            }\n        }\n        this.process_line_polymorphic(line);\n    };\n\n\n    process_data_stream_chunk(data_chunk) {\n        let decoded_string = null;\n        if (this.decoder) {\n            try {\n                decoded_string = this.decoder.decode(data_chunk);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                } else {\n                    this.store_or_propagate_exception(e);\n                }\n                return;\n            }\n        } else {\n            decoded_string = data_chunk.toString(this.encoding);\n        }\n        let line_starts_with_lf = decoded_string.length && decoded_string[0] == '\\n';\n        let first_line_index = line_starts_with_lf && this.partially_decoded_line_ends_with_cr ? 1 : 0;\n        this.partially_decoded_line_ends_with_cr = decoded_string.length && decoded_string[decoded_string.length - 1] == '\\r';\n        let lines = csv_utils.split_lines(decoded_string);\n        lines[0] = this.partially_decoded_line + lines[0];\n        assert(first_line_index == 0 || lines[0].length == 0);\n        this.partially_decoded_line = lines.pop();\n        for (let i = first_line_index; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n    };\n\n\n    process_data_bulk(data_blob) {\n        let decoded_string = data_blob.toString(this.encoding);\n        if (this.encoding == 'utf-8') {\n            // Using hacky comparison method from here: https://stackoverflow.com/a/32279283/2898283\n            // TODO get rid of this once TextDecoder is really fixed or when alternative method of reliable decoding appears\n            let control_buffer = Buffer.from(decoded_string, 'utf-8');\n            if (Buffer.compare(data_blob, control_buffer) != 0) {\n                this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                return;\n            }\n        }\n        let lines = csv_utils.split_lines(decoded_string);\n        if (lines.length && lines[lines.length - 1].length == 0)\n            lines.pop();\n        for (let i = 0; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n        if (this.line_aggregator.is_inside_multiline_record()) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n        }\n        this.input_exhausted = true;\n        this.try_resolve_next_record(); // Should be a NOOP here?\n    }\n\n\n    process_data_stream_end() {\n        this.input_exhausted = true;\n        if (this.partially_decoded_line.length) {\n            let last_line = this.partially_decoded_line;\n            this.partially_decoded_line = '';\n            this.process_line(last_line);\n        }\n        if (this.line_aggregator.is_inside_multiline_record()) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n        }\n        this.try_resolve_next_record();\n    };\n\n\n    stop() {\n        if (this.stream)\n            this.stream.destroy(); // TODO consider using pause() instead\n    };\n\n\n    async start() {\n        if (this.started)\n            return;\n        this.started = true;\n        if (this.stream) {\n            this.stream.on('data', (data_chunk) => { this.process_data_stream_chunk(data_chunk); });\n            this.stream.on('end', () => { this.process_data_stream_end(); });\n        } else {\n            let parent_iterator = this;\n            return new Promise(function(resolve, reject) {\n                fs.readFile(parent_iterator.csv_path, (err, data_blob) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        parent_iterator.process_data_bulk(data_blob);\n                        resolve();\n                    }\n                });\n            });\n        }\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.utf8_bom_removed)\n            result.push(`UTF-8 Byte Order Mark (BOM) was found and skipped in ${this.table_name} table`);\n        if (this.fields_info.size > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    };\n}\n\n\nclass CSVWriter extends rbql.RBQLOutputWriter {\n    constructor(stream, close_stream_on_finish, encoding, delim, policy, line_separator='\\n') {\n        super();\n        this.stream = stream;\n        this.encoding = encoding;\n        if (encoding)\n            this.stream.setDefaultEncoding(encoding);\n        this.stream.on('error', (error_obj) => { this.store_first_error(error_obj); })\n        this.delim = delim;\n        this.policy = policy;\n        this.line_separator = line_separator;\n        this.sub_array_delim = delim == '|' ? ';' : '|';\n\n        this.close_stream_on_finish = close_stream_on_finish;\n\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.header_len = null;\n        this.first_error = null;\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n\n    store_first_error(error_obj) {\n        // Store only first error because it is typically more important than the subsequent ones.\n        if (this.first_error === null)\n            this.first_error = error_obj;\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    async write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.stream.write(this.polymorphic_join(fields));\n        this.stream.write(this.line_separator);\n        let writer_error = this.first_error;\n        return new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            } else {\n                resolve(true);\n            }\n        });\n    };\n\n\n    _write_all(table) {\n        for (let i = 0; i < table.length; i++) {\n            this.write(table[i]);\n        }\n    };\n\n\n    async finish() {\n        let close_stream_on_finish = this.close_stream_on_finish;\n        let output_stream = this.stream;\n        let output_encoding = this.encoding;\n        let writer_error = this.first_error;\n        let finish_promise = new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            }\n            if (close_stream_on_finish) {\n                output_stream.end('', output_encoding, () => { resolve(); });\n            } else {\n                setTimeout(() => { resolve(); }, 0);\n            }\n        });\n        return finish_promise;\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n\n}\n\n\nclass FileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        let trim_whitespaces = this.options && this.options['trim_whitespaces'] ? true : false;\n        this.record_iterator = new CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b', trim_whitespaces);\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function query_csv(query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let trim_whitespaces = options && options['trim_whitespaces'] ? true : false;\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!is_ascii(input_delim) || !is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new FileSystemCSVRegistry(input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix, 'input', 'a', trim_whitespaces);\n    let output_writer = new CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.is_ascii = is_ascii;\nmodule.exports.CSVRecordIterator = CSVRecordIterator;\nmodule.exports.CSVWriter = CSVWriter;\nmodule.exports.FileSystemCSVRegistry = FileSystemCSVRegistry;\nmodule.exports.interpret_named_csv_format = interpret_named_csv_format;\nmodule.exports.read_user_init_code = read_user_init_code;\nmodule.exports.query_csv = query_csv;\nmodule.exports.RecordQueue = RecordQueue;\nmodule.exports.exception_to_error_info = rbql.exception_to_error_info;\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bound');\n\nvar $toString = callBound('Object.prototype.toString');\n\n/** @type {import('.')} */\nvar isStandardArguments = function isArguments(value) {\n\tif (\n\t\thasToStringTag\n\t\t&& value\n\t\t&& typeof value === 'object'\n\t\t&& Symbol.toStringTag in value\n\t) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\n/** @type {import('.')} */\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null\n\t\t&& typeof value === 'object'\n\t\t&& 'length' in value\n\t\t&& typeof value.length === 'number'\n\t\t&& value.length >= 0\n\t\t&& $toString(value) !== '[object Array]'\n\t\t&& 'callee' in value\n\t\t&& $toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\n// @ts-expect-error TODO make this not error\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\n/** @type {import('.')} */\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\nvar callBound = require('call-bound');\nvar safeRegexTest = require('safe-regex-test');\nvar isFnRegex = safeRegexTest(/^\\s*(?:function)?\\*/);\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = require('get-proto');\n\nvar toStr = callBound('Object.prototype.toString');\nvar fnToStr = callBound('Function.prototype.toString');\n\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\n/** @type {undefined | false | null | GeneratorFunctionConstructor} */\nvar GeneratorFunction;\n\n/** @type {import('.')} */\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex(fnToStr(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t? /** @type {GeneratorFunctionConstructor} */ (getProto(generatorFunc))\n\t\t\t: false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","(function(exports){\n// The magic line above is to make the module both browser and Node compatible, see https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\n\n// This module works with records only. It is CSV-agnostic.\n// Do not add CSV-related logic or variables/functions/objects like \"delim\", \"separator\" etc\n\n\nclass RbqlParsingError extends Error {}\nclass RbqlRuntimeError extends Error {}\nclass AssertionError extends Error {}\nclass RbqlIOHandlingError extends Error {}\n\n\nclass InternalBadFieldError extends Error {\n    constructor(bad_idx, ...params) {\n        super(...params);\n        this.bad_idx = bad_idx;\n    }\n}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction replace_all(src, search, replacement) {\n    return src.split(search).join(replacement);\n}\n\n\nclass RBQLContext {\n    constructor(query_text, input_iterator, output_writer, user_init_code) {\n        this.query_text = query_text;\n        this.input_iterator = input_iterator;\n        this.writer = output_writer;\n        this.user_init_code = user_init_code;\n\n        this.unnest_list = null;\n        this.top_count = null;\n\n        this.like_regex_cache = new Map();\n\n        this.sort_key_expression = null;\n\n        this.aggregation_stage = 0;\n        this.aggregation_key_expression = null;\n        this.functional_aggregators = [];\n\n        this.join_map_impl = null;\n        this.join_map = null;\n        this.lhs_join_var_expression = null;\n\n        this.where_expression = null;\n\n        this.select_expression = null;\n\n        this.update_expressions = null;\n\n        this.variables_init_code = null;\n    }\n}\n\nvar query_context = null; // Needs to be global for MIN(), MAX(), etc functions. TODO find a way to make it local.\n\n\nconst wrong_aggregation_usage_error = 'Usage of RBQL aggregation functions inside JavaScript expressions is not allowed, see the docs';\nconst RBQL_VERSION = '0.27.0';\n\n\nfunction check_if_brackets_match(opening_bracket, closing_bracket) {\n    return (opening_bracket == '[' && closing_bracket == ']') || (opening_bracket == '(' && closing_bracket == ')') || (opening_bracket == '{' && closing_bracket == '}');\n}\n\n\nfunction parse_root_bracket_level_text_spans(select_expression) {\n    let text_spans = []; // parts of text separated by commas at the root parenthesis level\n    let last_pos = 0;\n    let bracket_stack = [];\n    for (let i = 0; i < select_expression.length; i++) {\n        let cur_char = select_expression[i];\n        if (cur_char == ',' && bracket_stack.length == 0) {\n            text_spans.push(select_expression.substring(last_pos, i));\n            last_pos = i + 1;\n        } else if (['[', '{', '('].indexOf(cur_char) != -1) {\n            bracket_stack.push(cur_char);\n        } else if ([']', '}', ')'].indexOf(cur_char) != -1) {\n            if (bracket_stack.length && check_if_brackets_match(bracket_stack[bracket_stack.length - 1], cur_char)) {\n                bracket_stack.pop();\n            } else {\n                throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching opening bracket for closing \"${cur_char}\"`);\n            }\n        }\n    }\n    if (bracket_stack.length) {\n        throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching closing bracket for opening \"${bracket_stack[0]}\"`);\n    }\n    text_spans.push(select_expression.substring(last_pos, select_expression.length));\n    text_spans = text_spans.map(span => span.trim());\n    return text_spans;\n}\n\n\nfunction unquote_string(quoted_str) {\n    // It's possible to use eval here to unqoute the quoted_column_name, but it would be a little barbaric, let's do it manually instead\n    if (!quoted_str || quoted_str.length < 2)\n        return null;\n    if (quoted_str[0] == \"'\" && quoted_str[quoted_str.length - 1] == \"'\") {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\");\n    } else if (quoted_str[0] == '\"' && quoted_str[quoted_str.length - 1] == '\"') {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n        return null;\n    }\n}\n\n\nfunction column_info_from_text_span(text_span, string_literals) {\n    // This function is a rough equivalent of \"column_info_from_node()\" function in python version of RBQL\n    text_span = text_span.trim();\n    let rbql_star_marker = '__RBQL_INTERNAL_STAR';\n    let simple_var_match = /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(text_span);\n    let attribute_match = /^([ab])\\.([_a-zA-Z][_a-zA-Z0-9]*)$/.exec(text_span);\n    let subscript_int_match = /^([ab])\\[([0-9]+)\\]$/.exec(text_span);\n    let subscript_str_match = /^([ab])\\[___RBQL_STRING_LITERAL([0-9]+)___\\]$/.exec(text_span);\n    let as_alias_match = /^(.*) (as|AS) +([a-zA-Z][a-zA-Z0-9_]*) *$/.exec(text_span);\n    if (as_alias_match !== null) {\n        return {table_name: null, column_index: null, column_name: null, is_star: false, alias_name: as_alias_match[3]};\n    }\n    if (simple_var_match !== null) {\n        if (text_span == rbql_star_marker)\n            return {table_name: null, column_index: null, column_name: null, is_star: true, alias_name: null};\n        if (text_span.startsWith('___RBQL_STRING_LITERAL'))\n            return null;\n        let match = /^([ab])([0-9]+)$/.exec(text_span);\n        if (match !== null) {\n            return {table_name: match[1], column_index: parseInt(match[2]) - 1, column_name: null, is_star: false, alias_name: null};\n        }\n        // Some examples for this branch: NR, NF\n        return {table_name: null, column_index: null, column_name: text_span, is_star: false, alias_name: null};\n    } else if (attribute_match !== null) {\n        let table_name = attribute_match[1];\n        let column_name = attribute_match[2];\n        if (column_name == rbql_star_marker) {\n            return {table_name: table_name, column_index: null, column_name: null, is_star: true, alias_name: null};\n        }\n        return {table_name: null, column_index: null, column_name: column_name, is_star: false, alias_name: null};\n    } else if (subscript_int_match != null) {\n        let table_name = subscript_int_match[1];\n        let column_index = parseInt(subscript_int_match[2]) - 1;\n        return {table_name: table_name, column_index: column_index, column_name: null, is_star: false, alias_name: null};\n    } else if (subscript_str_match != null) {\n        let table_name = subscript_str_match[1];\n        let replaced_string_literal_id = subscript_str_match[2];\n        if (replaced_string_literal_id < string_literals.length) {\n            let quoted_column_name = string_literals[replaced_string_literal_id];\n            let unquoted_column_name = unquote_string(quoted_column_name);\n            if (unquoted_column_name !== null && unquoted_column_name !== undefined) {\n                return {table_name: null, column_index: null, column_name: unquoted_column_name, is_star: false, alias_name: null};\n            }\n        }\n    }\n    return null;\n}\n\n\nfunction adhoc_parse_select_expression_to_column_infos(select_expression, string_literals) {\n    // It is acceptable for the algorithm to provide null column name when it could be theorethically possible to deduce the name.\n    // I.e. this algorithm guarantees precision but doesn't guarantee completeness in all theorethically possible queries.\n    // Although the algorithm should be complete in all practical scenarios, i.e. it should be hard to come up with the query that doesn't produce complete set of column names.\n    // The null column name just means that the output column will be named as col{i}, so the failure to detect the proper column name can be tolerated.\n    // Specifically this function guarantees the following:\n    // 1. The number of column_infos is correct and will match the number of fields in each record in the output - otherwise the exception should be thrown\n    // 2. If column_info at pos j is not null, it is guaranteed to correctly represent that column name in the output\n    let text_spans = parse_root_bracket_level_text_spans(select_expression);\n    let column_infos = text_spans.map(ts => column_info_from_text_span(ts, string_literals));\n    return column_infos;\n}\n\n\nfunction stable_compare(a, b) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n}\n\n\nfunction safe_get(record, idx) {\n    return idx < record.length ? record[idx] : null;\n}\n\n\nfunction safe_join_get(record, idx) {\n    if (idx < record.length) {\n        return record[idx];\n    }\n    throw new InternalBadFieldError(idx);\n}\n\n\nfunction safe_set(record, idx, value) {\n    if (idx < record.length) {\n        record[idx] = value;\n    } else {\n        throw new InternalBadFieldError(idx);\n    }\n}\n\n\nfunction regexp_escape(text) {\n    // From here: https://stackoverflow.com/a/6969486/2898283\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');  // $& means the whole matched text\n}\n\n\nfunction like_to_regex(pattern) {\n    let p = 0;\n    let i = 0;\n    let converted = '';\n    while (i < pattern.length) {\n        if (pattern.charAt(i) == '_' || pattern.charAt(i) == '%') {\n            converted += regexp_escape(pattern.substring(p, i));\n            p = i + 1;\n            if (pattern.charAt(i) == '_') {\n                converted += '.';\n            } else {\n                converted += '.*';\n            }\n        }\n        i += 1;\n    }\n    converted += regexp_escape(pattern.substring(p, i));\n    return '^' + converted + '$';\n}\n\n\nfunction like(text, pattern) {\n    let matcher = query_context.like_regex_cache.get(pattern);\n    if (matcher === undefined) {\n        matcher = new RegExp(like_to_regex(pattern));\n        query_context.like_regex_cache.set(pattern, matcher);\n    }\n    return matcher.test(text);\n}\nconst LIKE = like;\n\n\nclass RBQLAggregationToken {\n    constructor(marker_id, value) {\n        this.marker_id = marker_id;\n        this.value = value;\n    }\n\n    toString() {\n        throw new RbqlParsingError(wrong_aggregation_usage_error);\n    }\n}\n\n\nclass UnnestMarker {}\n\n\nfunction UNNEST(vals) {\n    if (query_context.unnest_list !== null) {\n        // Technically we can support multiple UNNEST's but the implementation/algorithm is more complex and just doesn't worth it\n        throw new RbqlParsingError('Only one UNNEST is allowed per query');\n    }\n    query_context.unnest_list = vals;\n    return new UnnestMarker();\n}\nconst unnest = UNNEST;\nconst Unnest = UNNEST;\nconst UNFOLD = UNNEST; // \"UNFOLD\" is deprecated, just for backward compatibility\n\n\nfunction parse_number(val) {\n    // We can do a more pedantic number test like `/^ *-{0,1}[0-9]+\\.{0,1}[0-9]* *$/.test(val)`, but  user will probably use just Number(val) or parseInt/parseFloat\n    let result = Number(val);\n    if (isNaN(result)) {\n        throw new RbqlRuntimeError(`Unable to convert value \"${val}\" to a number. MIN, MAX, SUM, AVG, MEDIAN and VARIANCE aggregate functions convert their string arguments to numeric values`);\n    }\n    return result;\n}\n\n\nclass AnyValueAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass MinAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.min(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass MaxAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.max(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass SumAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, cur_aggr + val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass AvgAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_cnt = cur_aggr[1];\n            this.stats.set(key, [cur_sum + val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_cnt = cur_aggr[1];\n        var avg = cur_sum / cur_cnt;\n        return avg;\n    }\n}\n\n\nclass VarianceAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, val * val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_sum_sq = cur_aggr[1];\n            var cur_cnt = cur_aggr[2];\n            this.stats.set(key, [cur_sum + val, cur_sum_sq + val * val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_sum_sq = cur_aggr[1];\n        var cur_cnt = cur_aggr[2];\n        var avg_val = cur_sum / cur_cnt;\n        var variance = cur_sum_sq / cur_cnt - avg_val * avg_val;\n        return variance;\n    }\n}\n\n\nclass MedianAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        cur_aggr.sort(function(a, b) { return a - b; });\n        var m = Math.floor(cur_aggr.length / 2);\n        if (cur_aggr.length % 2) {\n            return cur_aggr[m];\n        } else {\n            return (cur_aggr[m - 1] + cur_aggr[m]) / 2.0;\n        }\n    }\n}\n\n\nclass CountAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, 1);\n        } else {\n            this.stats.set(key, cur_aggr + 1);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass ArrayAggAggregator {\n    constructor(post_proc=null) {\n        this.post_proc = post_proc;\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        let cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        let cur_aggr = this.stats.get(key);\n        if (this.post_proc === null)\n            return cur_aggr;\n        return this.post_proc(cur_aggr);\n    }\n}\n\n\nclass ConstGroupVerifier {\n    constructor(output_index) {\n        this.output_index = output_index;\n        this.const_values = new Map();\n    }\n\n    increment(key, value) {\n        var old_value = this.const_values.get(key);\n        if (old_value === undefined) {\n            this.const_values.set(key, value);\n        } else if (old_value != value) {\n            throw new RbqlRuntimeError(`Invalid aggregate expression: non-constant values in output column ${this.output_index + 1}. E.g. \"${old_value}\" and \"${value}\"`);\n        }\n    }\n\n    get_final(key) {\n        return this.const_values.get(key);\n    }\n}\n\n\nfunction init_aggregator(generator_name, val, post_proc=null) {\n    query_context.aggregation_stage = 1;\n    var res = new RBQLAggregationToken(query_context.functional_aggregators.length, val);\n    if (post_proc === null) {\n        query_context.functional_aggregators.push(new generator_name());\n    } else {\n        query_context.functional_aggregators.push(new generator_name(post_proc));\n    }\n    return res;\n}\n\nfunction ANY_VALUE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AnyValueAggregator, val) : val;\n}\nconst any_value = ANY_VALUE;\nconst Any_value = ANY_VALUE;\n\nfunction MIN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MinAggregator, val) : val;\n}\nconst min = MIN;\nconst Min = MIN;\n\nfunction MAX(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MaxAggregator, val) : val;\n}\nconst max = MAX;\nconst Max = MAX;\n\nfunction COUNT(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(CountAggregator, 1) : 1;\n}\nconst count = COUNT;\nconst Count = COUNT;\n\nfunction SUM(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(SumAggregator, val) : val;\n}\nconst sum = SUM;\nconst Sum = SUM;\n\nfunction AVG(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AvgAggregator, val) : val;\n}\nconst avg = AVG;\nconst Avg = AVG;\n\nfunction VARIANCE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(VarianceAggregator, val) : val;\n}\nconst variance = VARIANCE;\nconst Variance = VARIANCE;\n\nfunction MEDIAN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MedianAggregator, val) : val;\n}\nconst median = MEDIAN;\nconst Median = MEDIAN;\n\nfunction ARRAY_AGG(val, post_proc=null) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(ArrayAggAggregator, val, post_proc) : val;\n}\nconst array_agg = ARRAY_AGG;\nconst FOLD = ARRAY_AGG; // \"FOLD\" is deprecated, just for backward compatibility\n\n\nfunction add_to_set(dst_set, value) {\n    var len_before = dst_set.size;\n    dst_set.add(value);\n    return len_before != dst_set.size;\n}\n\n\nclass TopWriter {\n    constructor(subwriter, top_count) {\n        this.subwriter = subwriter;\n        this.NW = 0;\n        this.top_count = top_count;\n    }\n\n    async write(record) {\n        if (this.top_count !== null && this.NW >= this.top_count)\n            return false;\n        await this.subwriter.write(record);\n        this.NW += 1;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.seen = new Set();\n    }\n\n    async write(record) {\n        if (!add_to_set(this.seen, JSON.stringify(record)))\n            return true;\n        if (!await this.subwriter.write(record))\n            return false;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqCountWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.records = new Map();\n    }\n\n    async write(record) {\n        var key = JSON.stringify(record);\n        var old_val = this.records.get(key);\n        if (old_val) {\n            old_val[0] += 1;\n        } else {\n            this.records.set(key, [1, record]);\n        }\n        return true;\n    }\n\n    async finish() {\n        for (var [key, value] of this.records) {\n            let [count, record] = value;\n            record.unshift(count);\n            if (!await this.subwriter.write(record))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass SortedWriter {\n    constructor(subwriter, reverse_sort) {\n        this.subwriter = subwriter;\n        this.reverse_sort = reverse_sort;\n        this.unsorted_entries = [];\n    }\n\n    async write(stable_entry) {\n        this.unsorted_entries.push(stable_entry);\n        return true;\n    }\n\n    async finish() {\n        var unsorted_entries = this.unsorted_entries;\n        unsorted_entries.sort(stable_compare);\n        if (this.reverse_sort)\n            unsorted_entries.reverse();\n        for (var i = 0; i < unsorted_entries.length; i++) {\n            var entry = unsorted_entries[i];\n            if (!await this.subwriter.write(entry[entry.length - 1]))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass AggregateWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.aggregators = [];\n        this.aggregation_keys = new Set();\n    }\n\n    async finish() {\n        var all_keys = Array.from(this.aggregation_keys);\n        all_keys.sort();\n        for (var i = 0; i < all_keys.length; i++) {\n            var key = all_keys[i];\n            var out_fields = [];\n            for (var ag of this.aggregators) {\n                out_fields.push(ag.get_final(key));\n            }\n            if (!await this.subwriter.write(out_fields))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass InnerJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        return this.join_map.get_join_records(lhs_key);\n    }\n}\n\n\nclass LeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n        this.null_record = [[null, join_map.max_record_len, Array(join_map.max_record_len).fill(null)]];\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length == 0) {\n            return this.null_record;\n        }\n        return result;\n    }\n}\n\n\nclass StrictLeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length != 1) {\n            throw new RbqlRuntimeError('In \"STRICT LEFT JOIN\" each key in A must have exactly one match in B. Bad A key: \"' + lhs_key + '\"');\n        }\n        return result;\n    }\n}\n\n\nfunction select_except(src, except_fields) {\n    let result = [];\n    for (let i = 0; i < src.length; i++) {\n        if (except_fields.indexOf(i) == -1)\n            result.push(src[i]);\n    }\n    return result;\n}\n\n\nasync function select_simple(sort_key, NR, out_fields) {\n    if (query_context.sort_key_expression !== null) {\n        var sort_entry = sort_key.concat([NR, out_fields]);\n        if (!await query_context.writer.write(sort_entry))\n            return false;\n    } else {\n        if (!await query_context.writer.write(out_fields))\n            return false;\n    }\n    return true;\n}\n\n\nfunction select_aggregated(key, transparent_values) {\n    if (key !== null) {\n        key = JSON.stringify(key);\n    }\n    if (query_context.aggregation_stage === 1) {\n        if (!(query_context.writer instanceof TopWriter)) {\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        }\n        query_context.writer = new AggregateWriter(query_context.writer);\n        let num_aggregators_found = 0;\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            if (trans_value instanceof RBQLAggregationToken) {\n                query_context.writer.aggregators.push(query_context.functional_aggregators[trans_value.marker_id]);\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value.value);\n                num_aggregators_found += 1;\n            } else {\n                query_context.writer.aggregators.push(new ConstGroupVerifier(query_context.writer.aggregators.length));\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value);\n            }\n        }\n        if (num_aggregators_found != query_context.functional_aggregators.length) {\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        }\n        query_context.aggregation_stage = 2;\n    } else {\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            query_context.writer.aggregators[i].increment(key, trans_value);\n        }\n    }\n    query_context.writer.aggregation_keys.add(key);\n}\n\n\nasync function select_unnested(sort_key, NR, folded_fields) {\n    let out_fields = folded_fields.slice();\n    let unnest_pos = folded_fields.findIndex(val => val instanceof UnnestMarker);\n    for (var i = 0; i < query_context.unnest_list.length; i++) {\n        out_fields[unnest_pos] = query_context.unnest_list[i];\n        if (!await select_simple(sort_key, NR, out_fields.slice()))\n            return false;\n    }\n    return true;\n}\n\n\nconst PROCESS_SELECT_COMMON = `\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    let out_fields = __RBQLMP__select_expression;\n    if (query_context.aggregation_stage > 0) {\n        let key = __RBQLMP__aggregation_key_expression;\n        select_aggregated(key, out_fields);\n    } else {\n        let sort_key = [__RBQLMP__sort_key_expression];\n        if (query_context.unnest_list !== null) {\n            if (!await select_unnested(sort_key, NR, out_fields))\n                stop_flag = true;\n        } else {\n            if (!await select_simple(sort_key, NR, out_fields))\n                stop_flag = true;\n        }\n    }\n}\n`;\n\n\nconst PROCESS_SELECT_SIMPLE = `\nlet star_fields = record_a;\n__CODE__\n`;\n\n\nconst PROCESS_SELECT_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nfor (let join_match of join_matches) {\n    let [bNR, bNF, record_b] = join_match;\n    let star_fields = record_a.concat(record_b);\n    __CODE__\n    if (stop_flag)\n        break;\n}\n`;\n\n\nconst PROCESS_UPDATE_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nif (join_matches.length > 1)\n    throw new RbqlRuntimeError('More than one record in UPDATE query matched a key from the input table in the join table');\nlet record_b = null;\nlet bNR = null;\nlet bNF = null;\nif (join_matches.length == 1)\n    [bNR, bNF, record_b] = join_matches[0];\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (join_matches.length == 1 && (__RBQLMP__where_expression)) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst PROCESS_UPDATE_SIMPLE = `\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst MAIN_LOOP_BODY = `\n__USER_INIT_CODE__\n\nlet NU = 0;\nlet NR = 0;\n\nlet stop_flag = false;\nwhile (!stop_flag) {\n    let record_a = await query_context.input_iterator.get_record();\n    if (record_a === null)\n        break;\n    NR += 1;\n    let NF = record_a.length;\n    query_context.unnest_list = null; // TODO optimize, don't need to set this every iteration\n    try {\n        __CODE__\n    } catch (e) {\n        if (e.constructor.name === 'InternalBadFieldError') {\n            throw new RbqlRuntimeError(\\`No \"a\\${e.bad_idx + 1}\" field at record \\${NR}\\`);\n        } else if (e.constructor.name === 'RbqlParsingError') {\n            throw(e);\n        } else {\n            throw new RbqlRuntimeError(\\`At record \\${NR}, Details: \\${e.message}\\`);\n        }\n    }\n}\n`;\n\n\nfunction embed_expression(parent_code, child_placeholder, child_expression) {\n    return replace_all(parent_code, child_placeholder, child_expression);\n}\n\n\nfunction embed_code(parent_code, child_placeholder, child_code) {\n    let parent_lines = parent_code.split('\\n');\n    let child_lines = child_code.split('\\n');\n    for (let i = 0; i < parent_lines.length; i++) {\n        let pos = parent_lines[i].indexOf(child_placeholder);\n        if (pos == -1)\n            continue;\n        assert(pos % 4 == 0);\n        let placeholder_indentation = parent_lines[i].substring(0, pos);\n        child_lines = child_lines.map(l => placeholder_indentation + l);\n        let result_lines = parent_lines.slice(0, i).concat(child_lines).concat(parent_lines.slice(i + 1));\n        return result_lines.join('\\n') + '\\n';\n    }\n    assert(false);\n}\n\n\nfunction generate_main_loop_code(query_context) {\n    let is_select_query = query_context.select_expression !== null;\n    let is_join_query = query_context.join_map !== null;\n    let where_expression = query_context.where_expression === null ? 'true' : query_context.where_expression;\n    let aggregation_key_expression = query_context.aggregation_key_expression === null ? 'null' : query_context.aggregation_key_expression;\n    let sort_key_expression = query_context.sort_key_expression === null ? 'null' : query_context.sort_key_expression;\n    let js_code = embed_code(MAIN_LOOP_BODY, '__USER_INIT_CODE__', query_context.user_init_code);\n    if (is_select_query) {\n        if (is_join_query) {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_JOIN), '__CODE__', PROCESS_SELECT_COMMON);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_SIMPLE), '__CODE__', PROCESS_SELECT_COMMON);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_expression(js_code, '__RBQLMP__select_expression', query_context.select_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__aggregation_key_expression', aggregation_key_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__sort_key_expression', sort_key_expression);\n    } else {\n        if (is_join_query) {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_JOIN);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_SIMPLE);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_code(js_code, '__RBQLMP__update_expressions', query_context.update_expressions);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n    }\n    return \"(async () => {\" + js_code + \"})()\";\n}\n\n\nasync function compile_and_run(query_context) {\n    let main_loop_body = generate_main_loop_code(query_context);\n    try {\n        let main_loop_promise = eval(main_loop_body);\n        await main_loop_promise;\n    } catch (e) {\n        if (e instanceof SyntaxError) {\n            // SyntaxError's from eval() function do not contain detailed explanation of what has caused the syntax error, so to guess what was wrong we can only use the original query\n            // v8 issue to fix eval: https://bugs.chromium.org/p/v8/issues/detail?id=2589\n            let lower_case_query = query_context.query_text.toLowerCase();\n            if (lower_case_query.indexOf(' having ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"HAVING\\\" keyword\");\n            if (lower_case_query.indexOf(' like ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"LIKE\\\" operator, use like() function instead e.g. ... WHERE like(a1, 'foo%bar') ... \"); // UT JSON\n            if (lower_case_query.indexOf(' from ') != -1)\n                throw new SyntaxError(e.message + \"\\nTip: If input table is defined by the environment, RBQL query should not have \\\"FROM\\\" keyword\"); // UT JSON\n            if (e && e.message && String(e.message).toLowerCase().indexOf('unexpected identifier') != -1) {\n                if (lower_case_query.indexOf(' and ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'and' keyword in your query?\\nJavaScript backend doesn't support 'and' keyword, use '&&' operator instead!\");\n                if (lower_case_query.indexOf(' or ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'or' keyword in your query?\\nJavaScript backend doesn't support 'or' keyword, use '||' operator instead!\");\n            }\n        }\n        if (e && e.message && e.message.indexOf('Received an instance of RBQLAggregationToken') != -1)\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        throw e;\n    }\n}\n\n\nconst GROUP_BY = 'GROUP BY';\nconst UPDATE = 'UPDATE';\nconst SELECT = 'SELECT';\nconst JOIN = 'JOIN';\nconst INNER_JOIN = 'INNER JOIN';\nconst LEFT_JOIN = 'LEFT JOIN';\nconst LEFT_OUTER_JOIN = 'LEFT OUTER JOIN';\nconst STRICT_LEFT_JOIN = 'STRICT LEFT JOIN';\nconst ORDER_BY = 'ORDER BY';\nconst WHERE = 'WHERE';\nconst LIMIT = 'LIMIT';\nconst EXCEPT = 'EXCEPT';\nconst WITH = 'WITH';\n\n\nfunction get_ambiguous_error_msg(variable_name) {\n    return `Ambiguous variable name: \"${variable_name}\" is present both in input and in join tables`;\n}\n\n\nfunction get_all_matches(regexp, text) {\n    var result = [];\n    let match_obj = null;\n    while((match_obj = regexp.exec(text)) !== null) {\n        result.push(match_obj);\n    }\n    return result;\n}\n\n\nfunction str_strip(src) {\n    return src.replace(/^ +| +$/g, '');\n}\n\n\nfunction strip_comments(cline) {\n    cline = cline.trim();\n    if (cline.startsWith('//'))\n        return '';\n    return cline;\n}\n\n\nfunction combine_string_literals(backend_expression, string_literals) {\n    for (var i = 0; i < string_literals.length; i++) {\n        backend_expression = replace_all(backend_expression, `___RBQL_STRING_LITERAL${i}___`, string_literals[i]);\n    }\n    return backend_expression;\n}\n\n\nfunction parse_basic_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}([1-9][0-9]*)(?:$|(?=[^_a-zA-Z0-9]))`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[prefix + String(field_num)] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction parse_array_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[([1-9][0-9]*)\\\\]`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[`${prefix}[${field_num}]`] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction js_string_escape_column_name(column_name, quote_char) {\n    column_name = column_name.replace(/\\\\/g, '\\\\\\\\');\n    column_name = column_name.replace(/\\n/g, '\\\\n');\n    column_name = column_name.replace(/\\r/g, '\\\\r');\n    column_name = column_name.replace(/\\t/g, '\\\\t');\n    if (quote_char === \"'\")\n        return column_name.replace(/'/g, \"\\\\'\");\n    if (quote_char === '\"')\n        return column_name.replace(/\"/g, '\\\\\"');\n    assert(quote_char === \"`\");\n    return column_name.replace(/`/g, \"\\\\`\");\n}\n\n\nfunction query_probably_has_dictionary_variable(query_text, column_name) {\n    let rgx = new RegExp('[-a-zA-Z0-9_:;+=!.,()%^#@&* ]+', 'g');\n    let continuous_name_segments = get_all_matches(rgx, column_name);\n    for (let continuous_segment of continuous_name_segments) {\n        if (query_text.indexOf(continuous_segment) == -1)\n            return false;\n    }\n    return true;\n}\n\n\nfunction parse_dictionary_variables(query_text, prefix, column_names, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    // FIXME to prevent typos in attribute names either use query-based variable parsing which can properly handle back-tick strings or wrap \"a\" and \"b\" variables with ES6 Proxies https://stackoverflow.com/a/25658975/2898283\n    assert(prefix === 'a' || prefix === 'b');\n    let dict_test_rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[`);\n    if (query_text.search(dict_test_rgx) == -1)\n        return;\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if (query_probably_has_dictionary_variable(query_text, column_name)) {\n            let escaped_column_name = js_string_escape_column_name(column_name, '\"');\n            dst_variables_map[`${prefix}[\"${escaped_column_name}\"]`] = {initialize: true, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"'\");\n            dst_variables_map[`${prefix}['${escaped_column_name}']`] = {initialize: false, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"`\");\n            dst_variables_map[`${prefix}[\\`${escaped_column_name}\\`]`] = {initialize: false, index: i};\n        }\n    }\n}\n\n\nfunction parse_attribute_variables(query_text, prefix, column_names, column_names_source, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    assert(prefix === 'a' || prefix === 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\.([_a-zA-Z][_a-zA-Z0-9]*)`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    let column_names_from_query = matches.map(v => v[1]);\n    for (let column_name of column_names_from_query) {\n        let zero_based_idx = column_names.indexOf(column_name);\n        if (zero_based_idx != -1) {\n            dst_variables_map[`${prefix}.${column_name}`] = {initialize: true, index: zero_based_idx};\n        } else {\n            throw new RbqlParsingError(`Unable to find column \"${column_name}\" in ${prefix == 'a' ? 'input' : 'join'} ${column_names_source}`);\n        }\n    }\n}\n\n\nfunction map_variables_directly(query_text, column_names, dst_variables_map) {\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if ( /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(column_name) === null)\n            throw new RbqlIOHandlingError(`Unable to use column name \"${column_name}\" as RBQL/JS variable`);\n        if (query_text.indexOf(column_name) != -1)\n            dst_variables_map[column_name] = {initialize: true, index: i};\n    }\n}\n\n\nfunction ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names) {\n    let join_column_names_set = new Set(join_column_names);\n    for (let column_name of input_column_names) {\n        if (join_column_names_set.has(column_name) && query_text.indexOf(column_name) != -1) // False positive is tolerable here\n            throw new RbqlParsingError(get_ambiguous_error_msg(column_name));\n    }\n}\n\n\nfunction parse_join_expression(src) {\n    src = str_strip(src);\n    const invalid_join_syntax_error = 'Invalid join syntax. Valid syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    let rgx = /^ *([^ ]+) +on +/i;\n    let match = rgx.exec(src);\n    if (match === null)\n        throw new RbqlParsingError(invalid_join_syntax_error);\n    let table_id = match[1];\n    src = src.substr(match[0].length);\n\n    let variable_pairs = [];\n    var pair_rgx = /^([^ =]+) *==? *([^ =]+)/;\n    var and_rgx = /^ +(and|&&) +/i;\n    while (true) {\n        match = pair_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        variable_pairs.push([match[1], match[2]]);\n        src = src.substr(match[0].length);\n        if (!src.length)\n            break;\n        match = and_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        src = src.substr(match[0].length);\n    }\n    return [table_id, variable_pairs];\n}\n\n\nfunction resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals) {\n    let lhs_variables = [];\n    let rhs_indices = [];\n    const valid_join_syntax_msg = 'Valid JOIN syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    for (let variable_pair of variable_pairs) {\n        let [join_var_1, join_var_2] = variable_pair;\n        join_var_1 = combine_string_literals(join_var_1, string_literals);\n        join_var_2 = combine_string_literals(join_var_2, string_literals);\n        if (input_variables_map.hasOwnProperty(join_var_1) && join_variables_map.hasOwnProperty(join_var_1))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_1));\n        if (input_variables_map.hasOwnProperty(join_var_2) && join_variables_map.hasOwnProperty(join_var_2))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_2));\n        if (input_variables_map.hasOwnProperty(join_var_2))\n            [join_var_1, join_var_2] = [join_var_2, join_var_1];\n\n        let [lhs_key_index, rhs_key_index] = [null, null];\n        if (['NR', 'a.NR', 'aNR'].indexOf(join_var_1) != -1) {\n            lhs_key_index = -1;\n        } else if (input_variables_map.hasOwnProperty(join_var_1)) {\n            lhs_key_index = input_variables_map[join_var_1].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Input table does not have field \"${join_var_1}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        if (['b.NR', 'bNR'].indexOf(join_var_2) != -1) {\n            rhs_key_index = -1;\n        } else if (join_variables_map.hasOwnProperty(join_var_2)) {\n            rhs_key_index = join_variables_map[join_var_2].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Join table does not have field \"${join_var_2}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        let lhs_join_var_expression = lhs_key_index == -1 ? 'NR' : `safe_join_get(record_a, ${lhs_key_index})`;\n        rhs_indices.push(rhs_key_index);\n        lhs_variables.push(lhs_join_var_expression);\n    }\n    return [lhs_variables, rhs_indices];\n}\n\n\nfunction generate_common_init_code(query_text, variable_prefix) {\n    assert(variable_prefix == 'a' || variable_prefix == 'b');\n    let result = [];\n    result.push(`${variable_prefix} = new Object();`);\n    let base_var = variable_prefix == 'a' ? 'NR' : 'bNR';\n    let attr_var = `${variable_prefix}.NR`;\n    if (query_text.indexOf(attr_var) != -1)\n        result.push(`${attr_var} = ${base_var};`);\n    if (variable_prefix == 'a' && query_text.indexOf('aNR') != -1)\n        result.push('aNR = NR;');\n    return result;\n}\n\n\nfunction generate_init_statements(query_text, variables_map, join_variables_map, indent) {\n    let code_lines = generate_common_init_code(query_text, 'a');\n    let simple_var_name_rgx = /^[_0-9a-zA-Z]+$/;\n    for (const [variable_name, var_info] of Object.entries(variables_map)) {\n        if (var_info.initialize) {\n            let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n            code_lines.push(`${variable_declaration_keyword}${variable_name} = safe_get(record_a, ${var_info.index});`);\n        }\n    }\n    if (join_variables_map) {\n        code_lines = code_lines.concat(generate_common_init_code(query_text, 'b'));\n        for (const [variable_name, var_info] of Object.entries(join_variables_map)) {\n            if (var_info.initialize) {\n                let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n                code_lines.push(`${variable_declaration_keyword}${variable_name} = record_b === null ? null : safe_get(record_b, ${var_info.index});`);\n            }\n        }\n    }\n    for (let i = 1; i < code_lines.length; i++) {\n        code_lines[i] = indent + code_lines[i];\n    }\n    return code_lines.join('\\n');\n}\n\n\nfunction replace_star_count(aggregate_expression) {\n    var rgx = /(?:(?<=^)|(?<=,)) *COUNT\\( *\\* *\\)/ig;\n    var result = aggregate_expression.replace(rgx, ' COUNT(1)');\n    return str_strip(result);\n}\n\n\nfunction replace_star_vars(rbql_expression) {\n    let star_rgx = /(?:^|,) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = ']).concat(' + {'*': 'star_fields', 'a.*': 'record_a', 'b.*': 'record_b'}[star_expression] + ').concat([';\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length + 1; // Adding one to skip the lookahead comma\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction replace_star_vars_for_header_parsing(rbql_expression) {\n    let star_rgx = /(?:(?<=^)|(?<=,)) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = {'*': '__RBQL_INTERNAL_STAR', 'a.*': 'a.__RBQL_INTERNAL_STAR', 'b.*': 'b.__RBQL_INTERNAL_STAR'}[star_expression];\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length;\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction translate_update_expression(update_expression, input_variables_map, string_literals, indent) {\n    let first_assignment = str_strip(update_expression.split('=')[0]);\n    let first_assignment_error = `Unable to parse \"UPDATE\" expression: the expression must start with assignment, but \"${first_assignment}\" does not look like an assignable field name`;\n\n    let assignment_looking_rgx = /(?:^|,) *(a[.#a-zA-Z0-9\\[\\]_]*) *=(?=[^=])/g;\n    let update_expressions = [];\n    let pos = 0;\n    while (true) {\n        let match = assignment_looking_rgx.exec(update_expression);\n        if (update_expressions.length == 0 && (match === null || match.index != 0)) {\n            throw new RbqlParsingError(first_assignment_error);\n        }\n        if (match === null) {\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substr(pos)) + ');';\n            break;\n        }\n        if (update_expressions.length)\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substring(pos, match.index)) + ');';\n        let dst_var_name = combine_string_literals(str_strip(match[1]), string_literals);\n        if (!input_variables_map.hasOwnProperty(dst_var_name))\n            throw new RbqlParsingError(`Unable to parse \"UPDATE\" expression: Unknown field name: \"${dst_var_name}\"`);\n        let var_index = input_variables_map[dst_var_name].index;\n        let current_indent = update_expressions.length ? indent : '';\n        update_expressions.push(`${current_indent}safe_set(up_fields, ${var_index}, `);\n        pos = match.index + match[0].length;\n    }\n    return combine_string_literals(update_expressions.join('\\n'), string_literals);\n}\n\n\nfunction translate_select_expression(select_expression) {\n    let as_alias_replacement_regexp = / +(AS|as) +([a-zA-Z][a-zA-Z0-9_]*) *(?=$|,)/g;\n    let expression_without_counting_stars = replace_star_count(select_expression);\n    let expression_without_as_column_alias = expression_without_counting_stars.replace(as_alias_replacement_regexp, '');\n    let translated = str_strip(replace_star_vars(expression_without_as_column_alias));\n    let translated_for_header = str_strip(replace_star_vars_for_header_parsing(expression_without_counting_stars));\n    if (!translated.length)\n        throw new RbqlParsingError('\"SELECT\" expression is empty');\n    return [`[].concat([${translated}])`, translated_for_header];\n}\n\n\nfunction separate_string_literals(rbql_expression) {\n    // The regex consists of 3 almost identicall parts, the only difference is quote type\n    var rgx = /('(\\\\(\\\\\\\\)*'|[^'])*')|(\"(\\\\(\\\\\\\\)*\"|[^\"])*\")|(`(\\\\(\\\\\\\\)*`|[^`])*`)/g;\n    var match_obj = null;\n    var format_parts = [];\n    var string_literals = [];\n    var idx_before = 0;\n    while((match_obj = rgx.exec(rbql_expression)) !== null) {\n        var literal_id = string_literals.length;\n        var string_literal = match_obj[0];\n        string_literals.push(string_literal);\n        var start_index = match_obj.index;\n        format_parts.push(rbql_expression.substring(idx_before, start_index));\n        format_parts.push(`___RBQL_STRING_LITERAL${literal_id}___`);\n        idx_before = rgx.lastIndex;\n    }\n    format_parts.push(rbql_expression.substring(idx_before));\n    var format_expression = format_parts.join('');\n    format_expression = format_expression.replace(/\\t/g, ' ');\n    return [format_expression, string_literals];\n}\n\n\nfunction locate_statements(rbql_expression) {\n    let statement_groups = [];\n    statement_groups.push([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN]);\n    statement_groups.push([SELECT]);\n    statement_groups.push([ORDER_BY]);\n    statement_groups.push([WHERE]);\n    statement_groups.push([UPDATE]);\n    statement_groups.push([GROUP_BY]);\n    statement_groups.push([LIMIT]);\n    statement_groups.push([EXCEPT]);\n    var result = [];\n    for (var ig = 0; ig < statement_groups.length; ig++) {\n        for (var is = 0; is < statement_groups[ig].length; is++) {\n            var statement = statement_groups[ig][is];\n            var rgxp = new RegExp('(?:^| )' + replace_all(statement, ' ', ' *') + '(?= )', 'ig');\n            var matches = get_all_matches(rgxp, rbql_expression);\n            if (!matches.length)\n                continue;\n            if (matches.length > 1)\n                throw new RbqlParsingError(`More than one \"${statement}\" statements found`);\n            assert(matches.length == 1);\n            var match = matches[0];\n            var match_str = match[0];\n            result.push([match.index, match.index + match_str.length, statement]);\n            break; // Break to avoid matching a sub-statement from the same group e.g. \"INNER JOIN\" -> \"JOIN\"\n        }\n    }\n    result.sort(function(a, b) { return a[0] - b[0]; });\n    return result;\n}\n\n\nfunction separate_actions(rbql_expression) {\n    rbql_expression = str_strip(rbql_expression);\n    var result = {};\n    let with_match = /^(.*)  *[Ww][Ii][Tt][Hh] *\\(([a-z]{4,20})\\) *$/.exec(rbql_expression);\n    if (with_match !== null) {\n        rbql_expression = with_match[1];\n        result[WITH] = with_match[2];\n    }\n    var ordered_statements = locate_statements(rbql_expression);\n    for (var i = 0; i < ordered_statements.length; i++) {\n        var statement_start = ordered_statements[i][0];\n        var span_start = ordered_statements[i][1];\n        var statement = ordered_statements[i][2];\n        var span_end = i + 1 < ordered_statements.length ? ordered_statements[i + 1][0] : rbql_expression.length;\n        assert(statement_start < span_start);\n        assert(span_start <= span_end);\n        var span = rbql_expression.substring(span_start, span_end);\n        var statement_params = {};\n        if ([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN].indexOf(statement) != -1) {\n            statement_params['join_subtype'] = statement;\n            statement = JOIN;\n        }\n\n        if (statement == UPDATE) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('UPDATE keyword must be at the beginning of the query');\n            span = span.replace(/^ *SET/i, '');\n        }\n\n        if (statement == ORDER_BY) {\n            span = span.replace(/ ASC *$/i, '');\n            var new_span = span.replace(/ DESC *$/i, '');\n            if (new_span != span) {\n                span = new_span;\n                statement_params['reverse'] = true;\n            } else {\n                statement_params['reverse'] = false;\n            }\n        }\n\n        if (statement == SELECT) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('SELECT keyword must be at the beginning of the query');\n            let match = /^ *TOP *([0-9]+) /i.exec(span);\n            if (match !== null) {\n                statement_params['top'] = parseInt(match[1]);\n                span = span.substr(match.index + match[0].length);\n            }\n            match = /^ *DISTINCT *(COUNT)? /i.exec(span);\n            if (match !== null) {\n                statement_params['distinct'] = true;\n                if (match[1]) {\n                    statement_params['distinct_count'] = true;\n                }\n                span = span.substr(match.index + match[0].length);\n            }\n        }\n        statement_params['text'] = str_strip(span);\n        result[statement] = statement_params;\n    }\n    if (!result.hasOwnProperty(SELECT) && !result.hasOwnProperty(UPDATE)) {\n        throw new RbqlParsingError('Query must contain either SELECT or UPDATE statement');\n    }\n    assert(result.hasOwnProperty(SELECT) != result.hasOwnProperty(UPDATE));\n    return result;\n}\n\n\nfunction find_top(rb_actions) {\n    if (rb_actions.hasOwnProperty(LIMIT)) {\n        var rgx = /^[0-9]+$/;\n        if (rgx.exec(rb_actions[LIMIT]['text']) === null) {\n            throw new RbqlParsingError('LIMIT keyword must be followed by an integer');\n        }\n        var result = parseInt(rb_actions[LIMIT]['text']);\n        return result;\n    }\n    var select_action = rb_actions[SELECT];\n    if (select_action && select_action.hasOwnProperty('top')) {\n        return select_action['top'];\n    }\n    return null;\n}\n\n\nfunction translate_except_expression(except_expression, input_variables_map, string_literals, input_header) {\n    let skip_vars = except_expression.split(',');\n    skip_vars = skip_vars.map(str_strip);\n    let skip_indices = [];\n    for (let var_name of skip_vars) {\n        var_name = combine_string_literals(var_name, string_literals);\n        if (!input_variables_map.hasOwnProperty(var_name))\n            throw new RbqlParsingError(`Unknown field in EXCEPT expression: \"${var_name}\"`);\n        skip_indices.push(input_variables_map[var_name].index);\n    }\n    skip_indices = skip_indices.sort((a, b) => a - b);\n    let output_header = input_header === null ? null : select_except(input_header, skip_indices);\n    let indices_str = skip_indices.join(',');\n    return [output_header, `select_except(record_a, [${indices_str}])`];\n}\n\n\nclass HashJoinMap {\n    constructor(record_iterator, key_indices) {\n        this.max_record_len = 0;\n        this.hash_map = new Map();\n        this.record_iterator = record_iterator;\n        this.nr = 0;\n        if (key_indices.length == 1) {\n            this.key_index = key_indices[0];\n            this.key_indices = null;\n            this.polymorphic_get_key = this.get_single_key;\n        } else {\n            this.key_index = null;\n            this.key_indices = key_indices;\n            this.polymorphic_get_key = this.get_multi_key;\n        }\n    }\n\n    get_single_key(nr, fields) {\n        if (this.key_index >= fields.length)\n            throw new RbqlRuntimeError(`No field with index ${this.key_index + 1} at record ${this.nr} in \"B\" table`);\n        return this.key_index === -1 ? this.nr : fields[this.key_index];\n    };\n\n    get_multi_key(nr, fields) {\n        let result = [];\n        for (let ki of this.key_indices) {\n            if (ki >= fields.length)\n                throw new RbqlRuntimeError(`No field with index ${ki + 1} at record ${this.nr} in \"B\" table`);\n            result.push(ki === -1 ? this.nr : fields[ki]);\n        }\n        return JSON.stringify(result);\n    };\n\n    async build() {\n        while (true) {\n            let fields = await this.record_iterator.get_record();\n            if (fields === null)\n                break;\n            this.nr += 1;\n            let nf = fields.length;\n            this.max_record_len = Math.max(this.max_record_len, nf);\n            let key = this.polymorphic_get_key(this.nr, fields);\n            let key_records = this.hash_map.get(key);\n            if (key_records === undefined) {\n                this.hash_map.set(key, [[this.nr, nf, fields]]);\n            } else {\n                key_records.push([this.nr, nf, fields]);\n            }\n        }\n    };\n\n    get_join_records(key) {\n        let result = this.hash_map.get(key);\n        if (result === undefined)\n            return [];\n        return result;\n    };\n\n    get_warnings() {\n        return this.record_iterator.get_warnings();\n    };\n}\n\n\nfunction cleanup_query(query_text) {\n    return query_text.split('\\n').map(strip_comments).filter(line => line.length).join(' ').replace(/;+$/g, '');\n}\n\n\nfunction remove_redundant_table_name(query_text) {\n    query_text = str_strip(query_text.replace(/ +from +a(?: +|$)/gi, ' '));\n    query_text = str_strip(query_text.replace(/^ *update +a +set /gi, 'update '));\n    return query_text;\n}\n\n\nfunction select_output_header(input_header, join_header, query_column_infos) {\n    if (input_header === null) {\n        assert(join_header === null);\n    }\n    let query_has_star = false;\n    let query_has_column_alias = false;\n    for (let qci of query_column_infos) {\n        query_has_star = query_has_star || (qci !== null && qci.is_star);\n        query_has_column_alias = query_has_column_alias || (qci !== null && qci.alias_name !== null);\n    }\n    if (input_header === null) {\n        if (query_has_star && query_has_column_alias) {\n            throw new RbqlParsingError('Using both * (star) and AS alias in the same query is not allowed for input tables without header');\n        }\n        if (!query_has_column_alias) {\n            // Input table has no header and query has no aliases therefore the output table will be without header.\n            return null;\n        }\n        input_header = [];\n        join_header = [];\n    }\n    if (join_header === null) {\n        // This means there is no JOIN table.\n        join_header = [];\n    }\n    let output_header = [];\n    for (let qci of query_column_infos) {\n        // TODO refactor this and python version: extract this code into a function instead to always return something\n        if (qci === null) {\n            output_header.push('col' + (output_header.length + 1));\n        } else if (qci.is_star) {\n            if (qci.table_name === null) {\n                output_header = output_header.concat(input_header).concat(join_header);\n            } else if (qci.table_name === 'a') {\n                output_header = output_header.concat(input_header);\n            } else if (qci.table_name === 'b') {\n                output_header = output_header.concat(join_header);\n            }\n        } else if (qci.column_name !== null) {\n            output_header.push(qci.column_name);\n        } else if (qci.alias_name !== null) {\n            output_header.push(qci.alias_name);\n        } else if (qci.column_index !== null) {\n            if (qci.table_name == 'a' && qci.column_index < input_header.length) {\n                output_header.push(input_header[qci.column_index]);\n            } else if (qci.table_name == 'b' && qci.column_index < join_header.length) {\n                output_header.push(join_header[qci.column_index]);\n            } else {\n                output_header.push('col' + (output_header.length + 1));\n            }\n        } else { // Should never happen\n            output_header.push('col' + (output_header.length + 1));\n        }\n    }\n    return output_header;\n}\n\n\nfunction sample_first_two_inconsistent_records(inconsistent_records_info) {\n    let entries = Array.from(inconsistent_records_info.entries());\n    entries.sort(function(a, b) { return a[1] - b[1]; });\n    assert(entries.length > 1);\n    let [num_fields_1, record_num_1] = entries[0];\n    let [num_fields_2, record_num_2] = entries[1];\n    return [record_num_1, num_fields_1, record_num_2, num_fields_2];\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1} -> ${num_fields_1} fields, record ${record_num_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RBQLInputIterator {\n    constructor(){}\n    stop() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_variables_map(query_text) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_record() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    handle_query_modifier() {\n        return; // Reimplement if you need to handle a boolean query modifier that can be used like this: `SELECT * WITH (modifiername)`\n    }\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    }\n    async get_header() {\n        return null; // Reimplement if your class can provide input header\n    }\n}\n\n\nclass RBQLOutputWriter {\n    constructor(){}\n\n    async write(fields) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    async finish() {\n        // Reimplement if your class needs to do something on finish e.g. cleanup\n    };\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n\n    set_header() {\n        return; // Reimplement if your class can handle output headers in a meaningful way\n    }\n}\n\n\nclass RBQLTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(table_id) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n}\n\n\nclass TableIterator extends RBQLInputIterator {\n    constructor(table, column_names=null, normalize_column_names=true, variable_prefix='a') {\n        super();\n        this.table = table;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n        this.variable_prefix = variable_prefix;\n        this.nr = 0;\n        this.fields_info = new Map();\n        this.stopped = false;\n    }\n\n\n    stop() {\n        this.stopped = true;\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.column_names !== null) {\n            if (this.table.length && this.column_names.length != this.table[0].length)\n                throw new RbqlIOHandlingError('List of column names and table records have different lengths');\n            if (this.normalize_column_names) {\n                parse_dictionary_variables(query_text, this.variable_prefix, this.column_names, variable_map);\n                parse_attribute_variables(query_text, this.variable_prefix, this.column_names, 'column names list', variable_map);\n            } else {\n                map_variables_directly(query_text, this.column_names, variable_map);\n            }\n        }\n        return variable_map;\n    };\n\n\n    async get_record() {\n        if (this.stopped)\n            return null;\n        if (this.nr >= this.table.length)\n            return null;\n        let record = this.table[this.nr];\n        this.nr += 1;\n        let num_fields = record.length;\n        if (!this.fields_info.has(num_fields))\n            this.fields_info.set(num_fields, this.nr);\n        return record;\n    };\n\n    get_warnings() {\n        if (this.fields_info.size > 1)\n            return [make_inconsistent_num_fields_warning('input', this.fields_info)];\n        return [];\n    };\n\n    async get_header() {\n        return this.column_names;\n    }\n}\n\n\nclass TableWriter extends RBQLOutputWriter {\n    constructor(external_table) {\n        super();\n        this.table = external_table;\n        this.header = null;\n    }\n\n    async write(fields) {\n        this.table.push(fields);\n        return true;\n    };\n\n    set_header(header) {\n        this.header = header;\n    }\n}\n\n\nclass SingleTableRegistry extends RBQLTableRegistry {\n    constructor(table, column_names=null, normalize_column_names=true, table_id='b') {\n        super();\n        this.table = table;\n        this.table_id = table_id;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        if (table_id.toLowerCase() !== this.table_id)\n            throw new RbqlIOHandlingError(`Unable to find join table: \"${table_id}\"`);\n        return new TableIterator(this.table, this.column_names, this.normalize_column_names, 'b');\n    };\n}\n\n\nasync function shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context) {\n    query_text = cleanup_query(query_text);\n    var [format_expression, string_literals] = separate_string_literals(query_text);\n    format_expression = remove_redundant_table_name(format_expression);\n\n    var rb_actions = separate_actions(format_expression);\n    if (rb_actions.hasOwnProperty(WITH)) {\n        input_iterator.handle_query_modifier(rb_actions[WITH]);\n    }\n    var input_variables_map = await input_iterator.get_variables_map(query_text);\n\n    if (rb_actions.hasOwnProperty(ORDER_BY) && rb_actions.hasOwnProperty(UPDATE))\n        throw new RbqlParsingError('\"ORDER BY\" is not allowed in \"UPDATE\" queries');\n\n    if (rb_actions.hasOwnProperty(GROUP_BY)) {\n        if (rb_actions.hasOwnProperty(ORDER_BY) || rb_actions.hasOwnProperty(UPDATE))\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        query_context.aggregation_key_expression = '[' + combine_string_literals(rb_actions[GROUP_BY]['text'], string_literals) + ']';\n        query_context.aggregation_stage = 1;\n    }\n\n\n    let input_header = await input_iterator.get_header();\n    let join_variables_map = null;\n    let join_header = null;\n    if (rb_actions.hasOwnProperty(JOIN)) {\n        var [rhs_table_id, variable_pairs] = parse_join_expression(rb_actions[JOIN]['text']);\n        if (join_tables_registry === null)\n            throw new RbqlParsingError('JOIN operations are not supported by the application');\n        let join_record_iterator = join_tables_registry.get_iterator_by_table_id(rhs_table_id);\n        if (!join_record_iterator)\n            throw new RbqlParsingError(`Unable to find join table: \"${rhs_table_id}\"`);\n        if (rb_actions.hasOwnProperty(WITH)) {\n            join_record_iterator.handle_query_modifier(rb_actions[WITH]);\n        }\n        join_variables_map = await join_record_iterator.get_variables_map(query_text);\n        join_header = await join_record_iterator.get_header();\n        if (input_header === null && join_header !== null) {\n            throw new RbqlIOHandlingError('Inconsistent modes: Input table doesn\\'t have a header while the Join table has a header');\n        }\n        if (input_header !== null && join_header === null) {\n            throw new RbqlIOHandlingError('Inconsistent modes: Input table has a header while the Join table doesn\\'t have a header');\n        }\n        let [lhs_variables, rhs_indices] = resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals);\n        let sql_join_type = {'JOIN': InnerJoiner, 'INNER JOIN': InnerJoiner, 'LEFT JOIN': LeftJoiner, 'LEFT OUTER JOIN': LeftJoiner, 'STRICT LEFT JOIN': StrictLeftJoiner}[rb_actions[JOIN]['join_subtype']];\n        query_context.lhs_join_var_expression = lhs_variables.length == 1 ? lhs_variables[0] : 'JSON.stringify([' + lhs_variables.join(',') + '])';\n        query_context.join_map_impl = new HashJoinMap(join_record_iterator, rhs_indices);\n        await query_context.join_map_impl.build();\n        query_context.join_map = new sql_join_type(query_context.join_map_impl);\n    }\n\n    query_context.variables_init_code = combine_string_literals(generate_init_statements(format_expression, input_variables_map, join_variables_map, ' '.repeat(4)), string_literals);\n\n    if (rb_actions.hasOwnProperty(WHERE)) {\n        var where_expression = rb_actions[WHERE]['text'];\n        if (/[^><!=]=[^=]/.exec(where_expression))\n            throw new RbqlParsingError('Assignments \"=\" are not allowed in \"WHERE\" expressions. For equality test use \"==\" or \"===\"');\n        query_context.where_expression = combine_string_literals(where_expression, string_literals);\n    }\n\n    if (rb_actions.hasOwnProperty(UPDATE)) {\n        var update_expression = translate_update_expression(rb_actions[UPDATE]['text'], input_variables_map, string_literals, ' '.repeat(8));\n        query_context.update_expressions = combine_string_literals(update_expression, string_literals);\n        query_context.writer.set_header(input_header);\n    }\n\n    if (rb_actions.hasOwnProperty(SELECT)) {\n        query_context.top_count = find_top(rb_actions);\n        if (rb_actions.hasOwnProperty(EXCEPT)) {\n            if (rb_actions.hasOwnProperty(JOIN)) {\n                throw new RbqlParsingError('EXCEPT and JOIN are not allowed in the same query');\n            }\n            let [output_header, select_expression] = translate_except_expression(rb_actions[EXCEPT]['text'], input_variables_map, string_literals, input_header);\n            query_context.select_expression = select_expression;\n            query_context.writer.set_header(output_header);\n        } else {\n            let [select_expression, select_expression_for_header] = translate_select_expression(rb_actions[SELECT]['text']);\n            query_context.select_expression = combine_string_literals(select_expression, string_literals);\n            let column_infos = adhoc_parse_select_expression_to_column_infos(select_expression_for_header, string_literals);\n            let output_header = select_output_header(input_header, join_header, column_infos);\n            query_context.writer.set_header(output_header);\n        }\n\n        query_context.writer = new TopWriter(query_context.writer, query_context.top_count);\n        if (rb_actions[SELECT].hasOwnProperty('distinct_count')) {\n            query_context.writer = new UniqCountWriter(query_context.writer);\n        } else if (rb_actions[SELECT].hasOwnProperty('distinct')) {\n            query_context.writer = new UniqWriter(query_context.writer);\n        }\n    }\n\n    if (rb_actions.hasOwnProperty(ORDER_BY)) {\n        query_context.sort_key_expression = combine_string_literals(rb_actions[ORDER_BY]['text'], string_literals);\n        let reverse_sort = rb_actions[ORDER_BY]['reverse'];\n        query_context.writer = new SortedWriter(query_context.writer, reverse_sort);\n    }\n}\n\n\nasync function query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry=null, user_init_code='') {\n    query_context = new RBQLContext(query_text, input_iterator, output_writer, user_init_code);\n    await shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context);\n    await compile_and_run(query_context);\n    await query_context.writer.finish();\n    output_warnings.push(...input_iterator.get_warnings());\n    if (query_context.join_map_impl)\n        output_warnings.push(...query_context.join_map_impl.get_warnings());\n    output_warnings.push(...output_writer.get_warnings());\n}\n\n\nasync function query_table(query_text, input_table, output_table, output_warnings, join_table=null, input_column_names=null, join_column_names=null, output_column_names=null, normalize_column_names=true, user_init_code='') {\n    if (!normalize_column_names && input_column_names !== null && join_column_names !== null)\n        ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names);\n    let input_iterator = new TableIterator(input_table, input_column_names, normalize_column_names);\n    let output_writer = new TableWriter(output_table);\n    let join_tables_registry = join_table === null ? null : new SingleTableRegistry(join_table, join_column_names, normalize_column_names);\n    await query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    if (output_column_names !== null) {\n        assert(output_column_names.length == 0, '`output_column_names` param must be an empty list or null');\n        if (output_writer.header !== null) {\n            for (let column_name of output_writer.header) {\n                output_column_names.push(column_name);\n            }\n        }\n    }\n}\n\n\nfunction exception_to_error_info(e) {\n    let exceptions_type_map = {\n        'RbqlRuntimeError': 'query execution',\n        'RbqlParsingError': 'query parsing',\n        'SyntaxError': 'JS syntax error',\n        'RbqlIOHandlingError': 'IO handling'\n    };\n    let error_type = 'unexpected';\n    if (e.constructor && e.constructor.name && exceptions_type_map.hasOwnProperty(e.constructor.name)) {\n        error_type = exceptions_type_map[e.constructor.name];\n    }\n    let error_msg = e.hasOwnProperty('message') ? e.message : String(e);\n    return [error_type, error_msg];\n}\n\n\nexports.query = query;\nexports.query_table = query_table;\nexports.RBQLInputIterator = RBQLInputIterator;\nexports.RBQLOutputWriter = RBQLOutputWriter;\nexports.RBQLTableRegistry = RBQLTableRegistry;\n\nexports.version = RBQL_VERSION;\nexports.TableIterator = TableIterator;\nexports.TableWriter = TableWriter;\nexports.SingleTableRegistry = SingleTableRegistry;\nexports.exception_to_error_info = exception_to_error_info;\n\n\n// The functions below are exported just for unit tests, they are not part of the rbql API\n// TODO exports through the special unit_test proxy e.g. exports.unit_test.parse_basic_variables = parse_basic_variables;\nexports.parse_basic_variables = parse_basic_variables;\nexports.parse_array_variables = parse_array_variables;\nexports.parse_dictionary_variables = parse_dictionary_variables;\nexports.parse_attribute_variables = parse_attribute_variables;\nexports.get_all_matches = get_all_matches;\nexports.strip_comments = strip_comments;\nexports.separate_actions = separate_actions;\nexports.separate_string_literals = separate_string_literals;\nexports.combine_string_literals = combine_string_literals;\nexports.parse_join_expression = parse_join_expression;\nexports.resolve_join_variables = resolve_join_variables;\nexports.translate_update_expression = translate_update_expression;\nexports.translate_select_expression = translate_select_expression;\nexports.translate_except_expression = translate_except_expression;\nexports.like_to_regex = like_to_regex;\nexports.adhoc_parse_select_expression_to_column_infos = adhoc_parse_select_expression_to_column_infos;\nexports.replace_star_count = replace_star_count;\nexports.replace_star_vars_for_header_parsing = replace_star_vars_for_header_parsing;\nexports.select_output_header = select_output_header;\nexports.sample_first_two_inconsistent_records = sample_first_two_inconsistent_records;\n\n}(typeof exports === 'undefined' ? this.rbql = {} : exports));\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\nvar callBound = require('call-bound');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('.')} */\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const vscode = require('vscode');\n\nconst path = require('path');\nconst fs = require('fs');\nconst os = require('os');\nconst child_process = require('child_process');\n\nconst fast_load_utils = require('./fast_load_utils.js');\n\n// See DEV_README.md file for additional info.\n\n// TODO advertise copy to excel as one of the main feature if no bugs reported.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nvar rbql_csv = null; // Using lazy load to improve startup performance.\nfunction ll_rbql_csv() {\n    if (rbql_csv === null)\n        rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\n    return rbql_csv;\n}\n\n\nvar rainbow_utils = null; // Using lazy load to improve startup performance.\nfunction ll_rainbow_utils() {\n    if (rainbow_utils === null) {\n        rainbow_utils = require('./rainbow_utils.js');\n    }\n    return rainbow_utils;\n}\n\n// TODO consider checking `vscode.env.appHost == 'desktop'` instead.\nconst is_web_ext = (os.homedir === undefined); // Runs as web extension in browser.\nvar web_extension_uri = null;\nconst preview_window_size = 100;\nconst scratch_buf_marker = 'vscode_rbql_scratch';\nconst dynamic_csv_highlight_margin = 50; // TODO make configurable\n\nlet whitespace_aligned_files = new Set();\n\nlet alternate_row_background_decoration_type = null;\nlet tracked_field_decoration_types = [];\n\n// TODO consider wrapping this into a class with enable()/disable() methods. The class could also access the global virtual alignment mode.\nlet custom_virtual_alignment_modes = new Map(); // file_name -> VA_EXPLICITLY_ENABLED|VA_EXPLICITLY_DISABLED\nconst VA_EXPLICITLY_ENABLED = \"enabled\";\nconst VA_EXPLICITLY_DISABLED = \"disabled\";\nlet whole_doc_alignment_stats = new Map();\n\nvar result_set_parent_map = new Map();\nvar cached_table_parse_result = new Map(); // TODO store doc timestamp / size to invalidate the entry when the doc changes.\nvar manual_comment_prefix_stoplist = new Set();\n\n// Although these buttons are now available as context menu actions we keep them because they are part of the extension traditions.\nvar rbql_status_bar_button = null;\nvar align_shrink_button = null;\nvar copy_back_button = null;\nvar column_info_button = null;\nvar dynamic_dialect_select_button = null;\n\nvar rbql_context = null;\n\nvar debug_log_output_channel = null;\n\nvar last_rbql_queries = new Map(); // Query history does not replace this structure, it is also used to store partially entered queries for preview window switch.\n\nvar client_html_template = null;\nvar dialect_selection_html_template = null;\n\n// This `global_state` is persistent across VSCode restarts.\nvar global_state = null;\n\nvar rbql_preview_panel = null;\nvar dialect_panel = null;\n\nvar doc_first_edit_subscription = null;\nvar column_info_cursor_subscription = null;\nvar alt_background_cursor_subscription = null;\n\nvar last_closed_rainbow_doc_info = null;\n\nvar _unit_test_last_rbql_report = null; // For unit tests only.\nvar _unit_test_last_warnings = null; // For unit tests only.\n\nlet cursor_timeout_handle_for_column_info = null;\nlet cursor_timeout_handle_for_alt_row_background = null;\n\nlet rainbow_token_event = null;\nlet comment_token_event = null;\nlet row_background_decoration_event = null;\nlet column_tracking_decoration_event = null;\nlet sticky_header_disposable = null;\nlet inlay_hint_disposable = null;\n\nconst PLAINTEXT = 'plaintext';\nconst DYNAMIC_CSV = 'dynamic csv';\n\nconst QUOTED_POLICY = 'quoted';\nconst WHITESPACE_POLICY = 'whitespace';\nconst QUOTED_RFC_POLICY = 'quoted_rfc';\nconst SIMPLE_POLICY = 'simple';\n\n\nlet extension_context = {\n    lint_results: new Map(),\n    lint_status_bar_button: null,\n    dynamic_document_dialects: new Map(),\n    custom_comment_prefixes: new Map(), // TODO consider making custom comment prefixes records persistent.\n    original_language_ids: new Map(),\n    toggle_enabled_rows_backgrounds: new Map(),\n    tracked_columns: new Map(),\n    reenable_rainbow_language_infos: new Map(), // This only needed for \"Rainbow On\" functionality that reverts \"Rainbow Off\" effect.\n    autodetection_stoplist: new Set(),\n    autodetection_temporarily_disabled_for_rbql: false,\n    dynamic_dialect_for_next_request: null,\n    logging_enabled: false,\n    logging_next_context_id: 1,\n    virtual_alignment_mode: 'disabled',\n    double_width_alignment: true,\n    virtual_alignment_char: 'middot',\n    virtual_alignment_vertical_grid: false,\n    comment_prefix: '',\n};\n\nconst dialect_map = {\n    'csv': [',', QUOTED_POLICY],\n    'tsv': ['\\t', SIMPLE_POLICY],\n    'csv (semicolon)': [';', QUOTED_POLICY],\n    'csv (pipe)': ['|', SIMPLE_POLICY],\n    'csv (whitespace)': [' ', WHITESPACE_POLICY],\n    [DYNAMIC_CSV]: [null, null]\n};\n\n\nconst COMMENT_TOKEN = 'comment';\nconst rainbow_token_types = ['rainbow1', 'rainbow2', 'rainbow3', 'rainbow4', 'rainbow5', 'rainbow6', 'rainbow7', 'rainbow8', 'rainbow9', 'rainbow10'];\nconst all_token_types = rainbow_token_types.concat([COMMENT_TOKEN]);\nconst tokens_legend = new vscode.SemanticTokensLegend(all_token_types);\n\n\nfunction is_eligible_scheme(vscode_doc)  {\n    // Make sure that the the doc has a valid scheme.\n    // We don't want to handle virtual docs and docs created by other extensions, see https://code.visualstudio.com/api/extension-guides/virtual-documents#events-and-visibility and https://github.com/mechatroner/vscode_rainbow_csv/issues/123\n    // VScode also opens pairing virtual `.git` documents for git-controlled files that we also want to skip, see https://github.com/microsoft/vscode/issues/22561.\n    // \"vscode-test-web\" scheme is used for browser unit tests.\n    return vscode_doc && vscode_doc.uri && ['file', 'untitled', 'vscode-test-web'].indexOf(vscode_doc.uri.scheme) != -1;\n}\n\n\nfunction is_eligible_doc(vscode_doc) {\n    // For new untitled scratch documents `fileName` would be \"Untitled-1\", \"Untitled-2\", etc, so we won't enter this branch.\n    return vscode_doc && vscode_doc.uri && vscode_doc.fileName && is_eligible_scheme(vscode_doc);\n}\n\n\nfunction is_rainbow_dialect_doc(vscode_doc) {\n    return is_eligible_doc(vscode_doc) && dialect_map.hasOwnProperty(vscode_doc.languageId);\n}\n\n\nfunction make_dialect_info(delim, policy) {\n    return {'delim': delim, 'policy': policy};\n}\n\n\nfunction make_dynamic_dialect_key(file_path) {\n    return 'dynamic_dialect:' + file_path;\n}\n\n\nasync function save_dynamic_info(extension_context, file_path, dialect_info) {\n    await save_to_global_state(make_dynamic_dialect_key(file_path), dialect_info);\n    extension_context.dynamic_document_dialects.set(file_path, dialect_info);\n}\n\n\nasync function remove_dynamic_info(file_path) {\n    await save_to_global_state(make_dynamic_dialect_key(file_path), undefined);\n    extension_context.dynamic_document_dialects.delete(file_path);\n}\n\n\nfunction get_dynamic_info(file_path) {\n    // Filetypes (lang modes) are not preserved across doc reopen but surprisingly preserved across VSCode restarts so we are also storing them in persistent global state.\n    // Persistent dialect info has some minor drawbacks (e.g. performance also restart not completely resetting the state is an issue by itself in some scenarios) and could be reconsidered if more serious issues are found.\n    if (extension_context.dynamic_document_dialects.has(file_path)) {\n        return extension_context.dynamic_document_dialects.get(file_path);\n    }\n    // Failed to get from the session-local dynamic_document_dialects - check if we have it persistently stored from a previous session.\n    let dialect_info = get_from_global_state(make_dynamic_dialect_key(file_path), null);\n    if (dialect_info && dialect_info.hasOwnProperty('delim') && dialect_info.hasOwnProperty('policy')) {\n        extension_context.dynamic_document_dialects.set(file_path, dialect_info);\n        return dialect_info;\n    }\n    return null;\n}\n\n\nfunction safe_lower(src_str) {\n    if (!src_str)\n        return src_str;\n    return src_str.toLowerCase();\n}\n\n\nfunction get_default_policy(separator) {\n    // This function is most likely a temporal workaround, get rid of it when possible.\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator)\n            return dialect_map[language_id][1];\n    }\n    return SIMPLE_POLICY;\n}\n\n\nfunction map_dialect_to_language_id(separator, policy) {\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator && dialect_map[language_id][1] == policy)\n            return language_id;\n    }\n    return DYNAMIC_CSV;\n}\n\n\n// This structure will get properly initialized during the startup.\nlet absolute_path_map = {\n    'rbql_client.js': null,\n    'contrib/textarea-caret-position/index.js': null,\n    'rbql_suggest.js': null,\n    'rbql_logo.svg': null,\n    'rbql_client.html': null,\n    'dialect_select.html': null,\n    'dialect_select.js': null,\n    'rbql mock/rbql_mock.py': null,\n    'rbql_core/vscode_rbql.py': null\n};\n\n\nfunction show_single_line_error(error_msg) {\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    // Do not \"await\" error messages because the promise gets resolved only on error dismissal.\n    active_window.showErrorMessage(error_msg);\n}\n\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nasync function report_progress(progress, status_message) {\n    progress.report({message: status_message});\n    // Push the current stack to the JS callback queue to allow UI update.\n    await sleep(0);\n}\n\n\nfunction get_from_global_state(key, default_value) {\n    // Load KV pair from the \"global state\" which is persistent across VSCode restarts.\n    if (global_state) {\n        var value = global_state.get(key);\n        if (value !== null && value !== undefined)\n            return value;\n    }\n    return default_value;\n}\n\n\nasync function save_to_global_state(key, value) {\n    // Save KV pair to the \"global state\" which is persistent across VSCode restarts.\n    if (global_state && key) {\n        await global_state.update(key, value);\n        return true;\n    }\n    return false;\n}\n\n\nasync function replace_doc_content(active_editor, active_doc, new_content) {\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    await active_editor.edit(edit => edit.replace(full_range, new_content));\n}\n\n\nfunction make_header_key(file_path) {\n    return 'rbql_header_info:' + file_path;\n}\n\n\nfunction make_with_headers_key(file_path) {\n    return 'rbql_with_headers:' + file_path;\n}\n\n\nfunction get_from_config(param_name, default_value, config=null) {\n    if (!config) {\n        config = vscode.workspace.getConfiguration('rainbow_csv');\n    }\n    return config ? config.get(param_name) : default_value;\n}\n\nclass TrackedColumns {\n    // TODO move to rainbow_utils.js and add unit tests\n    constructor() {\n        this.column_to_decoration_id = new Map();\n    }\n\n    is_tracked(column_num) {\n        return this.column_to_decoration_id.has(column_num);\n    }\n\n    get_tracked_columns() {\n        return Array.from(this.column_to_decoration_id.keys());\n    }\n\n    toggle_tracking(column_num) {\n        if (this.column_to_decoration_id.has(column_num)) {\n            this.column_to_decoration_id.delete(column_num);\n        } else {\n            if (this.num_tracked() >= tracked_field_decoration_types.length) {\n                return false;\n            }\n            let existing_decoration_ids = Array.from(this.column_to_decoration_id.values());\n            let new_id = 0;\n            while (existing_decoration_ids.includes(new_id)) {\n                new_id += 1;\n            }\n            this.column_to_decoration_id.set(column_num, new_id);\n        }\n        return true;\n    }\n\n    get_decoration_type(column_num) {\n        if (!this.column_to_decoration_id.has(column_num)) {\n            return null;\n        }\n        return tracked_field_decoration_types[this.column_to_decoration_id.get(column_num)];\n\n    }\n\n    num_tracked() {\n        return this.column_to_decoration_id.size;\n    }\n\n    empty() {\n        return this.column_to_decoration_id.size == 0;\n    }\n\n}\n\nclass StackContextLogWrapper {\n    // Use class instead of pure function to avoid passing context name and checking if logging is enabled in the config in each call.\n    constructor(context_name, caller_context_id=null) {\n        this.context_name = context_name;\n        this.logging_enabled = extension_context.logging_enabled;\n        this.context_id = caller_context_id === null ? extension_context.logging_next_context_id : caller_context_id;\n        extension_context.logging_next_context_id += 1;\n    }\n\n    log_doc_event(event_name, vscode_doc=null) {\n        if (!this.logging_enabled)\n            return;\n        try {\n            let full_event = `CID:${this.context_id}, ${this.context_name}:${event_name}`;\n            if (vscode_doc) {\n                full_event = `${full_event}, doc_lang:${vscode_doc.languageId}`;\n                if (vscode_doc.uri) {\n                    let str_uri = vscode_doc.uri.toString(/*skipEncoding=*/true);\n                    full_event = `${full_event}, doc_uri:${str_uri}`;\n                }\n            } else {\n                full_event = `${full_event}, no_doc:1`;\n            }\n            // Use \"info\" level because logging is flag-guarded by the extension-level setting.\n            debug_log_output_channel.info(full_event);\n        } catch (_error) {\n            console.error(`Rainbow CSV: Unexpected log failure. ${this.context_name}:${this.event_name}`);\n            return;\n        }\n    }\n\n    log_simple_event(event_name) {\n        if (!this.logging_enabled)\n            return;\n        try {\n            let full_event = `CID:${this.context_id}, ${this.context_name}:${event_name}`;\n            debug_log_output_channel.info(full_event);\n        } catch (_error) {\n            console.error(`Rainbow CSV: Unexpected log failure. ${this.context_name}:${this.event_name}`);\n            return;\n        }\n    }\n}\n\n\nfunction get_header_from_document(document, delim, policy, comment_prefix) {\n    let [header_lnum, header_text] = ll_rainbow_utils().get_header_line(document, comment_prefix);\n    if (!header_text) {\n        return [null, null];\n    }\n    return [header_lnum, csv_utils.smart_split(header_text, delim, policy, /*preserve_quotes_and_whitespaces=*/false)[0]];\n}\n\n\nfunction get_header(document, delim, policy, comment_prefix) {\n    var file_path = document.fileName;\n    if (file_path) {\n        let header_info = get_from_global_state(make_header_key(file_path), null);\n        if (header_info !== null && header_info.header !== null) {\n            return [header_info.header_line_num, header_info.header];\n        }\n    }\n    return get_header_from_document(document, delim, policy, comment_prefix);\n}\n\n\nfunction get_dialect(document) {\n    let language_id = document.languageId;\n    let delim = null;\n    let policy = null;\n\n    let comment_prefix = '';\n    if (extension_context.custom_comment_prefixes.has(document.fileName)) {\n        comment_prefix = extension_context.custom_comment_prefixes.get(document.fileName);\n    } else {\n        comment_prefix = extension_context.comment_prefix;\n    }\n    if (language_id != DYNAMIC_CSV && dialect_map.hasOwnProperty(language_id)) {\n        [delim, policy] = dialect_map[language_id];\n        return [delim, policy, comment_prefix];\n    }\n    let dialect_info = null;\n    if (language_id == DYNAMIC_CSV) {\n        dialect_info = get_dynamic_info(document.fileName);\n    }\n    if (dialect_info) {\n        return [dialect_info.delim, dialect_info.policy, comment_prefix];\n    }\n    // The language id can be `dynamic csv` here e.g. if user just now manually selected the \"Dynamic CSV\" filetype.\n    return [null, null, null];\n}\n\n\nfunction enable_rainbow_ui(active_doc) {\n    if (dynamic_dialect_select_button) {\n        dynamic_dialect_select_button.hide();\n    }\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, active_doc.fileName, active_doc.languageId);\n    show_rbql_status_bar_button();\n    show_align_shrink_button(active_doc.fileName);\n    show_rbql_copy_to_source_button(active_doc.fileName);\n    let cursor_position_info_enabled = get_from_config('enable_cursor_position_info', false);\n    if (cursor_position_info_enabled) {\n        show_column_info_button(); // This function finds active_doc internally, but the possible inconsistency is harmless.\n        column_info_cursor_subscription = vscode.window.onDidChangeTextEditorSelection(handle_cursor_movement_for_column_info);\n    }\n    if (row_background_enabled(active_doc.fileName)) {\n        alt_background_cursor_subscription = vscode.window.onDidChangeTextEditorSelection(handle_cursor_movement_for_alt_row_background);\n    }\n}\n\n\nclass StickyHeaderProvider {\n    // We don't utilize typescript `implement` interface keyword, because TS doesn't seem to be exporting interfaces to JS (unlike classes).\n    constructor() {\n    }\n    async provideDocumentSymbols(document) {\n        // This can trigger multiple times for the same doc because otherwise this won't work in case of e.g. header edit.\n        let [delim, policy, comment_prefix] = get_dialect(document);\n        if (!policy) {\n            return null;\n        }\n        let header_lnum = get_header(document, delim, policy, comment_prefix)[0];\n        if (header_lnum === null /* - this can happen for user-provided \"virtual\" header */ || header_lnum >= document.lineCount - 1) {\n            return null;\n        }\n        let full_range = new vscode.Range(header_lnum, 0, document.lineCount - 1, 65535);\n        full_range = document.validateRange(full_range); // Just in case, should be always NOOP.\n        let header_range = new vscode.Range(header_lnum, 0, header_lnum, 65535);\n        if (!full_range.contains(header_range)) {\n            return; // Should never happen.\n        }\n        let symbol_kind = vscode.SymbolKind.File; // It is vscode.SymbolKind.File because it shows a nice \"File\" icon in the upper navigational panel. Another nice option is \"Class\".\n        let header_symbol = new vscode.DocumentSymbol('data', '', symbol_kind, full_range, header_range);\n        return [header_symbol];\n    }\n}\n\n\nfunction get_all_rainbow_lang_selector() {\n    let document_selector = [];\n    for (let language_id in dialect_map) {\n        if (dialect_map.hasOwnProperty(language_id)) {\n            document_selector.push({language: language_id});\n        }\n    }\n    return document_selector;\n}\n\n\nfunction reconfigure_sticky_header_provider(force=false) {\n    // Sticky header is enabled in VSCode by default already.\n    // TODO consider overriding the global config option dynamically for the current language id and workspace only, but if you do this make sure that right click -> disable on the header still disables it.\n    let enable_sticky_header = get_from_config('enable_sticky_header', false);\n    if (!enable_sticky_header) {\n        if (sticky_header_disposable !== null) {\n            sticky_header_disposable.dispose();\n            sticky_header_disposable = null;\n        }\n        return;\n    }\n    if (sticky_header_disposable !== null && force) {\n        sticky_header_disposable.dispose();\n        sticky_header_disposable = null;\n    }\n    if (sticky_header_disposable !== null) {\n        // Sticky header provider already exists, nothing to do.\n        return;\n    }\n    let header_symbol_provider = new StickyHeaderProvider();\n    sticky_header_disposable = vscode.languages.registerDocumentSymbolProvider(get_all_rainbow_lang_selector(), header_symbol_provider);\n}\n\n\nfunction reenable_inlay_hints_provider() {\n    // Dispose previous provider to refresh stale hints, including enabling them when disabled or disabling when enabled.\n    if (inlay_hint_disposable !== null) {\n        inlay_hint_disposable.dispose();\n    }\n    let inlay_hints_provider = new InlayHintProvider();\n    inlay_hint_disposable = vscode.languages.registerInlayHintsProvider(get_all_rainbow_lang_selector(), inlay_hints_provider);\n}\n\n\nasync function configure_inlay_hints_alignment(language_id, log_wrapper) {\n    // We have 3 invocation contexts here:\n    // 1. VA is \"disabled\" but the function was called via the command palette command directly.\n    // 2. VA is \"manual\" and the function was called either by the command palette or the \"Align\" button (essentially the same).\n    // 3. VA is \"always\" and the function was called on file open.\n    if (language_id == 'tsv') {\n        let active_editor = get_active_editor();\n        if (active_editor) {\n            if (active_editor.options.tabSize != 1) {\n                active_editor.options.tabSize = 1;\n                log_wrapper.log_doc_event(`Updated editor tab size to single (1) space for this doc`);\n            }\n        }\n    }\n\n    try {\n        let config = vscode.workspace.getConfiguration('editor', {languageId: language_id});\n        // Adjusting these settings as `configurationDefaults` in package.json doesn't work reliably, so we set it here dynamically.\n        // Note that there is User and Workspace-level configs options in the File->Preferences->Settings UI - this is important when you are trying to debug the limits.\n        // Adjusting these settings on the workspace level doesn't quite work because VSCode doesn't always have an active workspace, e.g. you can click [Close Workspace] from the main [File] menu to reproduce the problem. So we adjust the settings on global level instead which should always work.\n        let update_global_settings = true;\n        if (config.get('inlayHints.maximumLength') != 0) {\n            // Worklog: The first time I tried this the solution was half-working - we wouldn't see the inlay-hiding \"three dots\", but the alignment was still broken in a weird way. But the problem disappeared on \"restart\".\n            await config.update('inlayHints.maximumLength', 0, /*configurationTarget=*/update_global_settings, /*overrideInLanguage=*/true);\n            log_wrapper.log_doc_event(`Updated inlayHints.maximumLength = 0 for \"${language_id}\"`);\n        }\n        if (config.get('inlayHints.fontFamily') != '') {\n            await config.update('inlayHints.fontFamily', '', /*configurationTarget=*/update_global_settings, /*overrideInLanguage=*/true);\n            log_wrapper.log_doc_event(`Updated inlayHints.fontFamily = '' for \"${language_id}\"`);\n        }\n        if (config.get('inlayHints.fontSize') != '') {\n            await config.update('inlayHints.fontSize', '', /*configurationTarget=*/update_global_settings, /*overrideInLanguage=*/true);\n            log_wrapper.log_doc_event(`Updated inlayHints.fontSize = '' for \"${language_id}\"`);\n        }\n        if (config.get('inlayHints.padding') != '') {\n            await config.update('inlayHints.padding', '', /*configurationTarget=*/update_global_settings, /*overrideInLanguage=*/true);\n            log_wrapper.log_doc_event(`Updated inlayHints.padding = '' for \"${language_id}\"`);\n        }\n        // It would be nice to disable word wrap for the current editor only if aligned (because tables don't wrap) and then enable word wrap again, but there is no way to do this currently.\n        // Permanent disabling of wordWrap for csvs is a bad idea because in non-aligned mode it actually becomes an advantage for Rainbow non-alignment high info density paradigm.\n    } catch (e) {\n        log_wrapper.log_doc_event(\"Failed to update inlay hints user settings: \" + e);\n    }\n}\n\n\nfunction enable_dynamic_semantic_tokenization() {\n    // Some themes can disable semantic highlighting e.g. \"Tokyo Night\" https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night, so we explicitly override the default setting in \"configurationDefaults\" section of package.json.\n    // We also add all other csv dialects to \"configurationDefaults\":\"editor.semanticHighlighting.enabled\" override in order to enable comment line highlighting.\n    // Conflict with some other extensions might also cause semantic highlighting to completely fail (although this could be caused by the theme issue described above), see https://github.com/mechatroner/vscode_rainbow_csv/issues/149.\n    let token_provider = new RainbowTokenProvider();\n    if (rainbow_token_event !== null) {\n        rainbow_token_event.dispose();\n    }\n    let document_selector = { language: DYNAMIC_CSV }; // Use '*' to select all languages if needed.\n    rainbow_token_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(document_selector, token_provider, tokens_legend);\n}\n\n\nfunction row_background_enabled(fileName) {\n    let default_enabled = get_from_config('highlight_rows', false);\n    return extension_context.toggle_enabled_rows_backgrounds.has(fileName) ? extension_context.toggle_enabled_rows_backgrounds.get(fileName) : default_enabled;\n}\n\n\nfunction toggle_row_background() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let [_delim, policy, _comment_prefix] = get_dialect(active_doc);\n    if (policy == QUOTED_RFC_POLICY) {\n        // TODO use correct parsing logic to be able to handle multiline records and correctly highlight them\n        show_single_line_error(\"Alternating row background highlighting is currently unavailable for CSVs with multiline records\");\n        return;\n    }\n    let log_wrapper = new StackContextLogWrapper('toggle_row_background');\n    log_wrapper.log_doc_event('starting', active_doc);\n    let enabled_before = row_background_enabled(active_doc.fileName);\n    let highlighting_enabled = !enabled_before;\n    extension_context.toggle_enabled_rows_backgrounds.set(active_doc.fileName, highlighting_enabled);\n    if (highlighting_enabled) {\n        log_wrapper.log_doc_event('enabled', active_doc);\n    } else {\n        log_wrapper.log_doc_event('disabled', active_doc);\n        // Use empty range array to reset the decorations.\n        active_editor.setDecorations(alternate_row_background_decoration_type, []);\n    }\n\n    // Always re-register the provider to force decorations update on toggle.\n    register_row_background_decorations_provider();\n    if (alt_background_cursor_subscription == null) {\n        alt_background_cursor_subscription = vscode.window.onDidChangeTextEditorSelection(handle_cursor_movement_for_alt_row_background);\n    }\n}\n\n\nfunction register_column_tracking_decorations_provider() {\n    let decorations_provider = new ColumnTrackingDecorationsProvider();\n    if (column_tracking_decoration_event !== null) {\n        column_tracking_decoration_event.dispose();\n    }\n    // There is no way to register ranged decorations provider so we register a fake ranged semantic token provider that doesn't provide any tokens.\n    column_tracking_decoration_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(get_all_rainbow_lang_selector(), decorations_provider, tokens_legend);\n}\n\n\nfunction toggle_column_tracking() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc || !is_rainbow_dialect_doc(active_doc))\n        return;\n    let log_wrapper = new StackContextLogWrapper('toggle_column_tracking');\n    log_wrapper.log_doc_event('starting', active_doc);\n\n    let position = ll_rainbow_utils().get_cursor_position_if_unambiguous(active_editor);\n    if (!position) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    let cursor_position_info = ll_rainbow_utils().get_cursor_position_info(vscode, active_doc, delim, policy, comment_prefix, position);\n    if (!cursor_position_info)\n        return;\n    if (cursor_position_info.is_comment) {\n        vscode.window.showErrorMessage('Unable to track comments');\n        return;\n    }\n\n    let fileName = active_doc.fileName;\n    let trackings = extension_context.tracked_columns.has(fileName) ? extension_context.tracked_columns.get(fileName) : new TrackedColumns();\n    if (trackings.is_tracked(cursor_position_info.column_number)) {\n        let decoration_type = trackings.get_decoration_type(cursor_position_info.column_number);\n        // Use empty range array to reset the decorations.\n        active_editor.setDecorations(decoration_type, []);\n        log_wrapper.log_doc_event('disabling column tracking', active_doc);\n    } else {\n        log_wrapper.log_doc_event('enabling column tracking', active_doc);\n    }\n    if (!trackings.toggle_tracking(cursor_position_info.column_number)) {\n        vscode.window.showErrorMessage(`Unable to track more than ${trackings.num_tracked()} columns`);\n        return;\n    }\n    extension_context.tracked_columns.set(fileName, trackings);\n    // Always re-register the column tracking decorations provider to refresh the decorations so that toggle effect is immediately visible\n    register_column_tracking_decorations_provider();\n}\n\n\nfunction register_row_background_decorations_provider() {\n    let decorations_provider = new RowBackgroundDecorationsProvider();\n    if (row_background_decoration_event !== null) {\n        row_background_decoration_event.dispose();\n    }\n    // There is no way to register ranged decorations provider so we register a fake ranged semantic token provider that doesn't provide any tokens.\n    row_background_decoration_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(get_all_rainbow_lang_selector(), decorations_provider, tokens_legend);\n}\n\n\nfunction register_comment_tokenization_handler() {\n    let token_provider = new CommentTokenProvider();\n    if (comment_token_event !== null) {\n        comment_token_event.dispose();\n    }\n    let document_selector = [];\n    for (let language_id in dialect_map) {\n        if (dialect_map.hasOwnProperty(language_id) && language_id != DYNAMIC_CSV) {\n            // We skip DYNAMIC_CSV here because its provider already handles comment lines.\n            document_selector.push({language: language_id});\n        }\n    }\n    comment_token_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(document_selector, token_provider, tokens_legend);\n}\n\n\nfunction get_selected_separator(active_editor, active_doc) {\n    if (!active_editor || !active_doc)\n        return '';\n    let selection = active_editor.selection;\n    if (!selection) {\n        return '';\n    }\n    if (selection.start.line != selection.end.line) {\n        return '';\n    }\n    let separator = active_doc.lineAt(selection.start.line).text.substring(selection.start.character, selection.end.character);\n    return separator;\n}\n\n\nasync function choose_dynamic_separator(integration_test_options=null) {\n    let log_wrapper = new StackContextLogWrapper('choose_dynamic_separator');\n    log_wrapper.log_doc_event('starting', active_doc);\n    let active_editor = get_active_editor();\n    if (!active_editor) {\n        return;\n    }\n    var active_doc = get_active_doc(active_editor);\n    if (!is_eligible_doc(active_doc)) {\n        return;\n    }\n    let selected_separator = get_selected_separator(active_editor, active_doc);\n    if (!dialect_selection_html_template) {\n        dialect_selection_html_template = await load_resource_file_universal('dialect_select.html');\n    }\n    dialect_panel = vscode.window.createWebviewPanel('rainbow-dialect-select', 'Choose CSV Dialect', vscode.ViewColumn.Beside, {enableScripts: true});\n    dialect_panel.webview.html = adjust_webview_paths(dialect_panel, dialect_selection_html_template, ['dialect_select.js']);\n    dialect_panel.webview.onDidReceiveMessage(function(message) { handle_dialect_selection_message(active_doc, dialect_panel, message, selected_separator, log_wrapper, integration_test_options); });\n}\n\n\nfunction show_choose_dynamic_separator_button() {\n    if (!dynamic_dialect_select_button)\n        dynamic_dialect_select_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    dynamic_dialect_select_button.text = 'Choose Separator...';\n    dynamic_dialect_select_button.tooltip = 'Click to choose Dynamic CSV separator';\n    dynamic_dialect_select_button.command = 'rainbow-csv.RainbowSeparator';\n    dynamic_dialect_select_button.show();\n}\n\n\nasync function enable_rainbow_features_if_csv(active_doc, log_wrapper) {\n    log_wrapper.log_doc_event('start enable-rainbow-features-if-csv', active_doc);\n    if (!is_rainbow_dialect_doc(active_doc)) {\n        log_wrapper.log_simple_event('abort enable-rainbow-features-if-csv: non-rainbow dialect');\n        return;\n    }\n    var language_id = active_doc.languageId;\n    if (language_id == DYNAMIC_CSV && extension_context.dynamic_dialect_for_next_request != null) {\n        await save_dynamic_info(extension_context, active_doc.fileName, extension_context.dynamic_dialect_for_next_request);\n        extension_context.dynamic_dialect_for_next_request = null;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (!delim || !policy) {\n        log_wrapper.log_simple_event('abort enable-rainbow-features-if-csv: missing delim or policy');\n        // Make sure UI elements are disabled except dynamic separator selection button.\n        disable_ui_elements();\n        show_choose_dynamic_separator_button();\n        return;\n    }\n    if (comment_prefix) {\n        // It is currently impoossible to set comment_prefix on document level, so we have to set it on language level instead.\n        // This could potentially cause minor problems in very rare situations.\n        // Applying 'setLanguageConfiguration' doesn't disable static configuration in language-configuration.json.\n        vscode.languages.setLanguageConfiguration(language_id, { comments: { lineComment: comment_prefix } });\n    }\n    if (language_id == DYNAMIC_CSV) {\n        // Re-enable tokenization to explicitly trigger the highlighting. Sometimes this doesn't happen automatically.\n        enable_dynamic_semantic_tokenization();\n    }\n    enable_rainbow_ui(active_doc);\n    if (extension_context.virtual_alignment_mode == 'always') {\n        await configure_inlay_hints_alignment(language_id, log_wrapper);\n        reenable_inlay_hints_provider();\n    }\n    await csv_lint(active_doc, /*is_manual_op=*/false);\n    log_wrapper.log_simple_event('finish enable-rainbow-features-if-csv');\n}\n\n\nfunction disable_ui_elements() {\n    let all_buttons = [extension_context.lint_status_bar_button, rbql_status_bar_button, copy_back_button, align_shrink_button, column_info_button, dynamic_dialect_select_button];\n    for (let i = 0; i < all_buttons.length; i++) {\n        if (all_buttons[i])\n            all_buttons[i].hide();\n    }\n    if (column_info_cursor_subscription) {\n        column_info_cursor_subscription.dispose();\n        column_info_cursor_subscription = null;\n    }\n    if (alt_background_cursor_subscription) {\n        alt_background_cursor_subscription.dispose();\n        alt_background_cursor_subscription = null;\n    }\n}\n\n\nfunction disable_rainbow_features_if_non_csv(active_doc, log_wrapper) {\n    log_wrapper.log_doc_event('start disable-rainbow-features-if-non-csv', active_doc);\n    if (is_rainbow_dialect_doc(active_doc)) {\n        log_wrapper.log_simple_event('abort disable-rainbow-features-if-non-csv: is rainbow dialect');\n        return;\n    }\n    log_wrapper.log_simple_event('perform disable-rainbow-features-if-non-csv');\n    disable_ui_elements();\n}\n\n\nfunction get_active_editor() {\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    var active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return null;\n    return active_editor;\n}\n\n\nfunction get_active_doc(active_editor=null) {\n    if (!active_editor)\n        active_editor = get_active_editor();\n    if (!active_editor)\n        return null;\n    var active_doc = active_editor.document;\n    if (!active_doc)\n        return null;\n    return active_doc;\n}\n\n\nfunction is_active_doc(vscode_doc) {\n    let active_doc = get_active_doc();\n    return (active_doc && active_doc.uri && vscode_doc && vscode_doc.uri && active_doc.uri.toString() == vscode_doc.uri.toString());\n}\n\n\nfunction virtual_alignment_enabled(virtual_alignment_mode, custom_alignment_mode) {\n    return (custom_alignment_mode == VA_EXPLICITLY_ENABLED) || (virtual_alignment_mode == \"always\" && custom_alignment_mode != VA_EXPLICITLY_DISABLED);\n}\n\n\nfunction config_virtual_alignment_button(align_shrink_button, is_aligned) {\n    if (is_aligned) {\n        align_shrink_button.text = 'Shrink';\n        align_shrink_button.tooltip = 'Click to remove virtual alignment from this file';\n        align_shrink_button.command = 'rainbow-csv.VirtualShrink';\n    } else {\n        align_shrink_button.text = 'Align';\n        align_shrink_button.tooltip = 'Click to virtually align';\n        align_shrink_button.command = 'rainbow-csv.VirtualAlign';\n    }\n}\n\n\nfunction config_whitespace_alignment_button(align_shrink_button, is_aligned) {\n    if (is_aligned) {\n        align_shrink_button.text = 'Shrink';\n        align_shrink_button.tooltip = 'Click to shrink table - trim whitespaces from fields';\n        align_shrink_button.command = 'rainbow-csv.Shrink';\n    } else {\n        align_shrink_button.text = 'Align';\n        align_shrink_button.tooltip = 'Click to align table with extra whitespaces';\n        align_shrink_button.command = 'rainbow-csv.Align';\n    }\n}\n\n\nfunction show_align_shrink_button(file_path) {\n    if (!align_shrink_button)\n        align_shrink_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    if (extension_context.virtual_alignment_mode == 'disabled') {\n        let is_aligned = whitespace_aligned_files.has(file_path);\n        config_whitespace_alignment_button(align_shrink_button, is_aligned);\n    } else {\n        let custom_alignment_mode = custom_virtual_alignment_modes.get(file_path);\n        let is_aligned = virtual_alignment_enabled(extension_context.virtual_alignment_mode, custom_alignment_mode);\n        config_virtual_alignment_button(align_shrink_button, is_aligned);\n    }\n    align_shrink_button.show();\n}\n\n\nfunction do_show_column_info_button(full_report, short_report) {\n    if (!column_info_button)\n        column_info_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 1000);\n    column_info_button.text = short_report;\n    column_info_button.tooltip = full_report;\n    column_info_button.show();\n}\n\n\nfunction make_hover(document, language_id, position, cancellation_token) {\n    if (!get_from_config('enable_tooltip', false)) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(document);\n    let cursor_position_info = ll_rainbow_utils().get_cursor_position_info(vscode, document, delim, policy, comment_prefix, position);\n    if (!cursor_position_info || cancellation_token.isCancellationRequested)\n        return null;\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let header = get_header(document, delim, policy, comment_prefix)[1];\n    if (!header) {\n        return null;\n    }\n    let [_full_text, short_report] = ll_rainbow_utils().format_cursor_position_info(cursor_position_info, header, enable_tooltip_column_names, /*show_comments=*/true, /*max_label_length=*/25);\n    let mds = new vscode.MarkdownString();\n    // Using a special pseudo-language grammar trick for highlighting the hover text using the same color as the column doesn't work anymore due to https://github.com/microsoft/vscode/issues/53723.\n    mds.appendText(short_report);\n    return new vscode.Hover(mds);\n}\n\n\nfunction show_column_info_button() {\n    let active_editor = get_active_editor();\n    if (!active_editor) {\n        return false;\n    }\n    let position = ll_rainbow_utils().get_cursor_position_if_unambiguous(active_editor);\n    if (!position) {\n        return false;\n    }\n    let active_doc = get_active_doc(active_editor);\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    let cursor_position_info = ll_rainbow_utils().get_cursor_position_info(vscode, active_doc, delim, policy, comment_prefix, position);\n    if (!cursor_position_info)\n        return false;\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let header = get_header(active_doc, delim, policy, comment_prefix)[1];\n    if (!header)\n        return false;\n    let [full_report, short_report] = ll_rainbow_utils().format_cursor_position_info(cursor_position_info, header, enable_tooltip_column_names, /*show_comments=*/false, /*max_label_length=*/25);\n    do_show_column_info_button(full_report, short_report);\n    return true;\n}\n\n\nfunction show_rbql_status_bar_button() {\n    if (!rbql_status_bar_button)\n        rbql_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rbql_status_bar_button.text = 'Query';\n    rbql_status_bar_button.tooltip = 'Click to run SQL-like RBQL query';\n    rbql_status_bar_button.command = 'rainbow-csv.RBQL';\n    rbql_status_bar_button.show();\n}\n\n\nfunction show_rbql_copy_to_source_button(file_path) {\n    let parent_table_path = result_set_parent_map.get(safe_lower(file_path));\n    if (!parent_table_path || parent_table_path.indexOf(scratch_buf_marker) != -1)\n        return;\n    let parent_basename = path.basename(parent_table_path);\n    if (!copy_back_button)\n        copy_back_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    copy_back_button.text = 'Copy Back';\n    copy_back_button.tooltip = `Copy to parent table: ${parent_basename}`;\n    copy_back_button.command = 'rainbow-csv.CopyBack';\n    copy_back_button.show();\n}\n\n\nasync function csv_lint(active_doc, is_manual_op) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    if (!is_rainbow_dialect_doc(active_doc)) {\n        return null;\n    }\n    var file_path = active_doc.fileName; // For new untitled scratch documents this would be \"Untitled-1\", \"Untitled-2\", etc...\n    var language_id = active_doc.languageId;\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!is_manual_op) {\n        if (extension_context.lint_results.has(lint_cache_key))\n            return null;\n        if (!get_from_config('enable_auto_csv_lint', false))\n            return null;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null)\n        return null;\n    extension_context.lint_results.set(lint_cache_key, {is_processing: true});\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, file_path, language_id); // Visual feedback.\n    let detect_trailing_spaces = get_from_config('csv_lint_detect_trailing_spaces', false);\n    let [_records, _num_records_parsed, fields_info, first_defective_line, first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/false, /*preserve_quotes_and_whitespaces=*/true, detect_trailing_spaces);\n    let is_ok = (first_defective_line === null && fields_info.size <= 1);\n    let lint_result = {'is_ok': is_ok, 'first_defective_line': first_defective_line, 'fields_info': fields_info, 'first_trailing_space_line': first_trailing_space_line};\n    extension_context.lint_results.set(lint_cache_key, lint_result);\n    if (is_manual_op) {\n        // Need timeout here to give user enough time to notice green -> yellow -> green switch, this is a sort of visual feedback.\n        await sleep(500);\n    }\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, file_path, language_id); // Visual feedback.\n    return lint_result;\n}\n\n\nasync function csv_lint_cmd() {\n    // TODO re-run on each file save with content change.\n    let lint_report_for_unit_tests = await csv_lint(null, /*is_manual_op=*/true);\n    return lint_report_for_unit_tests;\n}\n\n\nasync function run_internal_test_cmd(integration_test_options) {\n    if (integration_test_options && integration_test_options.check_initialization_state) {\n        // This mode is to ensure that the most basic operations do not cause rainbow csv to load extra (potentially heavy) code.\n        // Vim uses the same approach with its plugin/autoload folder layout design.\n        return {initialized: global_state !== null, lazy_loaded: rainbow_utils !== null};\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_report) {\n        return _unit_test_last_rbql_report;\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_warnings) {\n        return {'warnings': _unit_test_last_warnings};\n    }\n    return null;\n}\n\n\nasync function show_warnings(warnings) {\n    _unit_test_last_warnings = [];\n    if (!warnings || !warnings.length)\n        return;\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    for (var i = 0; i < warnings.length; i++) {\n        // Do not \"await\" warning messages because the promise gets resolved only on warning dismissal.\n        active_window.showWarningMessage('RBQL warning: ' + warnings[i]);\n    }\n    _unit_test_last_warnings = warnings;\n}\n\n\nasync function handle_rbql_result_file_node(text_doc, delim, policy, warnings) {\n    try {\n        await vscode.window.showTextDocument(text_doc);\n    } catch (_error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    let language_id = map_dialect_to_language_id(delim, policy);\n    if (language_id && text_doc.languageId != language_id) {\n        // In non-web version we open a new doc without preset filetype, so we need to manually set it.\n        await vscode.languages.setTextDocumentLanguage(text_doc, language_id);\n    }\n    await show_warnings(warnings);\n}\n\n\nasync function handle_rbql_result_file_web(text_doc, warnings) {\n    try {\n        await vscode.window.showTextDocument(text_doc);\n    } catch (_error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    await show_warnings(warnings);\n}\n\n\n\nfunction command_async_wrapper(cmd, args) {\n    return new Promise(function (resolve, reject) {\n        let stdout_data = '';\n        let stderr_data = '';\n        let process = child_process.spawn(cmd, args, {'windowsHide': true});\n        process.stdout.on('data', function(data) {\n            stdout_data += data.toString();\n        });\n        process.stderr.on('data', function(data) {\n            stderr_data += data.toString();\n        });\n        process.on('close', function (code) { // Consider replacing 'close' with 'exit'.\n            resolve({'exit_code': code, 'stdout': stdout_data, 'stderr': stderr_data});\n        });\n        process.on('error', function (err) {\n            reject(err);\n        });\n    });\n}\n\n\nfunction get_dst_table_name(input_path, output_delim) {\n    var table_name = path.basename(input_path);\n    var orig_extension = path.extname(table_name);\n    var delim_ext_map = {'\\t': '.tsv', ',': '.csv'};\n    var dst_extension = '.txt';\n    if (delim_ext_map.hasOwnProperty(output_delim)) {\n        dst_extension = delim_ext_map[output_delim];\n    } else if (orig_extension.length > 1) {\n        dst_extension = orig_extension;\n    }\n    let result_table_name = table_name + dst_extension;\n    if (result_table_name == table_name) { // Just being paranoid to avoid overwriting input table accidentally when output dir configured to be the same as input.\n        result_table_name += '.txt';\n    }\n    return result_table_name;\n}\n\n\nfunction file_path_to_query_key(file_path) {\n    return (file_path && file_path.indexOf(scratch_buf_marker) != -1) ? scratch_buf_marker : file_path;\n}\n\nfunction get_dst_table_dir(input_table_path) {\n    let rbql_output_dir = get_from_config('rbql_output_dir', 'TMP');\n    if (rbql_output_dir == 'TMP') {\n        return os.tmpdir();\n    } else if (rbql_output_dir == 'INPUT') {\n        return path.dirname(input_table_path);\n    } else {\n        // Return custom directory. If the directory does not exist or isn't writable RBQL itself will report more or less clear error.\n        return rbql_output_dir;\n    }\n}\n\n\nasync function run_command_and_parse_output(cmd, args) {\n    let execution_result = null;\n    try {\n        execution_result = await command_async_wrapper(cmd, args);\n    } catch (error) {\n        let error_details = error ? error.name + ': ' + error.message : '';\n        let error_msg = 'Something went wrong. Make sure you have python installed and added to PATH variable in your OS. Or you can use it with JavaScript instead - it should work out of the box\\nDetails:\\n' + error_details;\n        return {error_type: 'Integration', error_msg: error_msg, invocation_error: 1};\n    }\n    let json_report = execution_result.stdout;\n    if (!json_report || execution_result.stderr) {\n        let error_msg = execution_result.stderr || 'empty error';\n        return {error_type: 'Integration', error_msg: error_msg};\n    }\n    try {\n        return JSON.parse(json_report);\n    } catch (_e) {\n        return {error_type: 'Integration', error_msg: 'Unable to parse JSON report'};\n    }\n}\n\n\nasync function run_first_working_interpreter_command_and_parse_output(interpreters_list, args, log_wrapper) {\n    // The main use case of this function is to try 'python3' first and then fall back to 'python' if 'python3' is unavailable for some reason.\n    let execution_result = null;\n    for (let interpreter_cmd of interpreters_list) {\n        log_wrapper.log_simple_event(`Attempting interpreter '${interpreter_cmd}' ...`);\n        execution_result = await run_command_and_parse_output(interpreter_cmd, args);\n        if (!execution_result || !execution_result.hasOwnProperty('invocation_error') || !execution_result.invocation_error) {\n            return execution_result;\n        }\n        log_wrapper.log_simple_event(`Interpreter '${interpreter_cmd}' invocation failed.`);\n    }\n    return execution_result;\n}\n\n\nasync function send_report_to_webview(webview, error_type, error_msg) {\n    let report_msg = {'msg_type': 'rbql_report'};\n    if (error_type)\n        report_msg[\"error_type\"] = error_type;\n    if (error_msg)\n        report_msg[\"error_msg\"] = error_msg;\n    _unit_test_last_rbql_report = report_msg;\n    await webview.postMessage(report_msg);\n}\n\n\nasync function run_rbql_query(webview, input_path, csv_encoding, backend_language, rbql_query, output_dialect, with_headers) {\n    // TODO refactor this function.\n    let log_wrapper = new StackContextLogWrapper('run-rbql-query');\n    log_wrapper.log_simple_event('start');\n    last_rbql_queries.set(file_path_to_query_key(input_path), rbql_query);\n    let interpreters_preference_list = ['python3', 'python'];\n    const test_marker = 'test ';\n\n    let [input_delim, input_policy, comment_prefix] = [rbql_context.delim, rbql_context.policy, rbql_context.comment_prefix];\n    let [output_delim, output_policy] = [input_delim, input_policy];\n    if (output_dialect == 'csv')\n        [output_delim, output_policy] = [',', QUOTED_POLICY];\n    if (output_dialect == 'tsv')\n        [output_delim, output_policy] = ['\\t', SIMPLE_POLICY];\n    rbql_context.output_delim = output_delim;\n    rbql_context.output_policy = output_policy;\n\n    let output_path = is_web_ext ? null : path.join(get_dst_table_dir(input_path), get_dst_table_name(input_path, output_delim));\n    let strip_spaces_from_fields = get_from_config('rbql_strip_spaces', true);\n\n    if (rbql_query.startsWith(test_marker)) {\n        log_wrapper.log_simple_event('test mode');\n        // interpreters_preference_list = ['nopython', 'python3', 'python']; // interpreters_preference_list can be adjusted for testing\n        let args = [absolute_path_map['rbql mock/rbql_mock.py'], rbql_query];\n        let execution_result = await run_first_working_interpreter_command_and_parse_output(interpreters_preference_list, args, log_wrapper);\n        console.log(JSON.stringify(execution_result));\n        if (execution_result.hasOwnProperty('error_type') || execution_result.hasOwnProperty('error_msg')) {\n            await send_report_to_webview(webview, execution_result.error_type, execution_result.error_msg);\n            return;\n        }\n        await send_report_to_webview(webview, null, null);\n        return;\n    }\n    if (backend_language == 'js') {\n        log_wrapper.log_simple_event('using js backend');\n        let warnings = [];\n        let result_doc = null;\n        let target_language_id = map_dialect_to_language_id(output_delim, output_policy);\n        try {\n            if (is_web_ext) {\n                log_wrapper.log_simple_event('using web mode');\n                let result_lines = await ll_rainbow_utils().rbql_query_web(rbql_query, rbql_context.input_document, input_delim, input_policy, output_delim, output_policy, warnings, with_headers, comment_prefix, strip_spaces_from_fields);\n                let output_doc_cfg = {content: result_lines.join('\\n'), language: target_language_id};\n                if (target_language_id == DYNAMIC_CSV) {\n                    extension_context.dynamic_dialect_for_next_request = make_dialect_info(output_delim, output_policy);\n                }\n                extension_context.autodetection_temporarily_disabled_for_rbql = true;\n                result_doc = await vscode.workspace.openTextDocument(output_doc_cfg);\n                await send_report_to_webview(webview, null, null);\n                await handle_rbql_result_file_web(result_doc, warnings);\n                extension_context.dynamic_dialect_for_next_request = null;\n                extension_context.autodetection_temporarily_disabled_for_rbql = false;\n                log_wrapper.log_simple_event('finished OK');\n            } else {\n                log_wrapper.log_simple_event('using electron mode');\n                let csv_options = {'bulk_read': true, 'trim_whitespaces': strip_spaces_from_fields};\n                await ll_rainbow_utils().rbql_query_node(global_state, rbql_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, warnings, with_headers, comment_prefix, /*user_init_code=*/'', csv_options);\n                result_set_parent_map.set(safe_lower(output_path), input_path);\n                if (target_language_id == DYNAMIC_CSV) {\n                    extension_context.dynamic_dialect_for_next_request = make_dialect_info(output_delim, output_policy);\n                }\n                extension_context.autodetection_temporarily_disabled_for_rbql = true;\n                result_doc = await vscode.workspace.openTextDocument(output_path);\n                await send_report_to_webview(webview, null, null);\n                await handle_rbql_result_file_node(result_doc, output_delim, output_policy, warnings);\n                extension_context.dynamic_dialect_for_next_request = null;\n                extension_context.autodetection_temporarily_disabled_for_rbql = false;\n                log_wrapper.log_simple_event('finished OK');\n            }\n        } catch (e) {\n            extension_context.autodetection_temporarily_disabled_for_rbql = false;\n            let [error_type, error_msg] = ll_rbql_csv().exception_to_error_info(e);\n            log_wrapper.log_simple_event('finished with error');\n            await send_report_to_webview(webview, error_type, error_msg);\n            return;\n        }\n    } else {\n        log_wrapper.log_simple_event('using python backend');\n        if (is_web_ext) {\n            await send_report_to_webview(webview, 'Input error', 'Python backend for RBQL is not supported in web version, please use JavaScript backend.');\n            return;\n        }\n        let cmd_safe_query = Buffer.from(rbql_query, \"utf-8\").toString(\"base64\");\n        if (!comment_prefix) {\n            comment_prefix = '';\n        }\n        let args = [absolute_path_map['rbql_core/vscode_rbql.py'], cmd_safe_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, comment_prefix, csv_encoding];\n        if (with_headers)\n            args.push('--with_headers');\n        if (strip_spaces_from_fields)\n            args.push('--strip_spaces');\n        let execution_result = await run_first_working_interpreter_command_and_parse_output(interpreters_preference_list, args, log_wrapper);\n        if (execution_result.hasOwnProperty('error_type') || execution_result.hasOwnProperty('error_msg')) {\n            log_wrapper.log_simple_event('finished with error');\n            await send_report_to_webview(webview, execution_result.error_type, execution_result.error_msg);\n            return;\n        }\n        log_wrapper.log_simple_event('finished OK');\n        await send_report_to_webview(webview, null, null);\n        extension_context.autodetection_stoplist.add(output_path);\n        result_set_parent_map.set(safe_lower(output_path), input_path);\n        extension_context.autodetection_temporarily_disabled_for_rbql = true;\n        let output_doc = null;\n        try {\n            output_doc = await vscode.workspace.openTextDocument(output_path);\n        } finally {\n            extension_context.autodetection_temporarily_disabled_for_rbql = false;\n        }\n        // We need dynamic_dialect_for_next_request here because we can't open the output_doc with DYNAMIC_CSV, it will be switched on doc-ropen.\n        let target_language_id = map_dialect_to_language_id(output_delim, output_policy);\n        if (target_language_id == DYNAMIC_CSV) {\n            extension_context.dynamic_dialect_for_next_request = make_dialect_info(output_delim, output_policy);\n        }\n        await handle_rbql_result_file_node(output_doc, output_delim, output_policy, execution_result.warnings);\n        extension_context.dynamic_dialect_for_next_request = null;\n    }\n}\n\n\nasync function set_header_line() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n\n    let [delim, policy, _comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        show_single_line_error('Unable to set header line: no separator specified');\n        return;\n    }\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to set header line for non-file documents');\n        return;\n    }\n    let selection = active_editor.selection;\n    let header_line = selection.start.line;\n    let raw_header = active_doc.lineAt(header_line).text;\n    let header = csv_utils.smart_split(raw_header, delim, policy, false)[0];\n\n    // The advantage of saving the parsed list of column names is that it would stay consistent even if some lines are added/deleted before the header line (line migration).\n    // The advantage of saving the line number is that it is resilient to modifications of header line itself.\n    // It is also possible to verify consistency of header line and header column names and return null if they are inconsistent and return null.\n    // But discarding the inconsistent header line is probably not very obvious and user-friendly way of handling this.\n    // Showing the inconsistent header is probably better since these column names are only used for UI/readability and a wrong sticky line obviously hints on what happened and how to fix it, while a suddenly disappeared sticky line could be seen as a bug.\n    await save_to_global_state(make_header_key(file_path), {header_line_num: header_line, header: header});\n    // Re-register sticky header provider because otherwise it won't re-generate the symbols unless there were no edits to the file.\n    reconfigure_sticky_header_provider(/*force=*/true);\n}\n\n\nfunction preserve_original_language_id_if_needed(file_path, original_language_id, original_language_ids) {\n    if (!file_path) {\n        return;\n    }\n    if (dialect_map.hasOwnProperty(original_language_id)) {\n        // This is to prevent invalid noop \"dynamic csv\" -> \"dynamic csv\" switch without carying dialect info.\n        // And to simplify state management in general by not storing any rainbow dialects.\n        return;\n    }\n    original_language_ids.set(file_path, original_language_id);\n}\n\n\nasync function set_comment_prefix() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let selection = active_editor.selection;\n    if (!selection) {\n        show_single_line_error(\"Selection is empty\");\n        return;\n    }\n    let comment_prefix = active_doc.lineAt(selection.start.line).text.substring(selection.start.character, selection.end.character);\n    extension_context.custom_comment_prefixes.set(active_doc.fileName, comment_prefix);\n    if (!comment_prefix) {\n        manual_comment_prefix_stoplist.add(active_doc.fileName);\n    } else {\n        manual_comment_prefix_stoplist.delete(active_doc.fileName);\n    }\n    if (comment_prefix) {\n        vscode.languages.setLanguageConfiguration(active_doc.languageId, { comments: { lineComment: comment_prefix } });\n    }\n    if (active_doc.languageId == DYNAMIC_CSV) {\n        // Re-enable tokenization to explicitly trigger the highlighting. Sometimes this doesn't happen automatically.\n        enable_dynamic_semantic_tokenization();\n    } else {\n        // Re-enable comment tokenization to explicitly adjust the comment highlighting (sometimes to disable it if comment prefix is set to an empty string).\n        register_comment_tokenization_handler();\n    }\n}\n\n\nasync function restore_original_language() {\n    let log_wrapper = new StackContextLogWrapper('restore_original_language');\n    let active_doc = get_active_doc();\n    log_wrapper.log_doc_event('starting', active_doc);\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    let original_language_id = PLAINTEXT;\n    if (extension_context.original_language_ids.has(file_path)) {\n        original_language_id = extension_context.original_language_ids.get(file_path);\n    }\n    if (dialect_map.hasOwnProperty(original_language_id) || !dialect_map.hasOwnProperty(active_doc.languageId)) {\n        show_single_line_error(\"Unable to restore original language\");\n        return;\n    }\n\n    if (file_path) {\n        // Preserve rainbow language info, so that the user can later re-enable it for this file.\n        let current_language_info = {language_id: active_doc.languageId};\n        let dynamic_dialect_info = get_dynamic_info(file_path);\n        if (dynamic_dialect_info) {\n            current_language_info.dynamic_dialect_info = dynamic_dialect_info;\n        }\n        extension_context.reenable_rainbow_language_infos.set(file_path, current_language_info);\n        extension_context.autodetection_stoplist.add(file_path);\n    }\n\n    active_doc = await vscode.languages.setTextDocumentLanguage(active_doc, original_language_id);\n    // There is no onDidChangeActiveTextEditor even for language change so we need to explicitly disable rainbow features.\n    disable_rainbow_features_if_non_csv(active_doc, log_wrapper);\n    // The only reason why we might want to clean up dynamic dialect info here is to facilitate triggering dynamic_document_dialect selection UI after manual filetype switch at the later point so that the user could choose a different dynamic dialect without manual selection by cursor / commands.\n    remove_dynamic_info(file_path);\n}\n\n\nasync function reenable_rainbow_language() {\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    if (!extension_context.reenable_rainbow_language_infos.has(file_path)) {\n        // Make sure we have previous rainbow dialect saved.\n        show_single_line_error(\"Unable to re-enable rainbow highlighting automatically, select filetype manually or select a new separator with cursor.\");\n        return;\n    }\n    let rainbow_language_info = extension_context.reenable_rainbow_language_infos.get(file_path);\n    // Delete from the stoplist to revert \"Rainbow Off\" side-effects.\n    extension_context.autodetection_stoplist.delete(file_path);\n    if (rainbow_language_info.hasOwnProperty('dynamic_dialect_info')) {\n        await save_dynamic_info(extension_context, file_path, rainbow_language_info.dynamic_dialect_info);\n    }\n    // Preserve current (non-rainbow) language id to allow switching between \"Rainbow Off\"/\"Rainbow On\".\n    preserve_original_language_id_if_needed(file_path, active_doc.languageId, extension_context.original_language_ids);\n    extension_context.reenable_rainbow_language_infos.delete(file_path);\n    await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_language_info.language_id);\n}\n\n\nasync function set_join_table_name() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to use this document as join table');\n        return;\n    }\n    var title = \"Input table name to use in RBQL JOIN expressions instead of table path\";\n    var input_box_props = {\"prompt\": title, \"value\": 'b'};\n    let table_name = await vscode.window.showInputBox(input_box_props);\n    if (!table_name)\n        return; // User pressed Esc and closed the input box.\n    await save_to_global_state(ll_rainbow_utils().make_table_name_key(table_name), file_path);\n}\n\n\nasync function set_virtual_header() {\n    var active_doc = get_active_doc();\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        show_single_line_error('Unable to set virtual header: no separator specified');\n        return;\n    }\n    var file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to edit column names for non-file documents');\n        return;\n    }\n    var old_header = get_header(active_doc, delim, policy, comment_prefix)[1];\n    var title = \"Adjust column names displayed in hover tooltips. Actual header line and file content won't be affected.\";\n    var old_header_str = old_header ? quoted_join(old_header, delim) : '';\n    var input_box_props = {\"prompt\": title, \"value\": old_header_str};\n    let raw_new_header = await vscode.window.showInputBox(input_box_props);\n    if (!raw_new_header)\n        return; // User pressed Esc and closed the input box.\n    let new_header = csv_utils.smart_split(raw_new_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), {header_line_num: null, header: new_header});\n}\n\n\nasync function column_edit(edit_mode) {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let position = ll_rainbow_utils().get_cursor_position_if_unambiguous(active_editor);\n    if (!position) {\n        show_single_line_error('Unable to enter column edit mode: make sure that no text is selected and only one cursor is active');\n        return;\n    }\n    if (active_doc.lineCount >= 10000) {\n        show_single_line_error('Multicursor column edit works only for files smaller than 10000 lines.');\n        return;\n    }\n    let col_num = (ll_rainbow_utils().get_cursor_position_info(vscode, active_doc, delim, policy, comment_prefix, position)).column_number;\n    let [selections, error_msg, warning_msg] = ll_rainbow_utils().generate_column_edit_selections(vscode, active_doc, delim, policy, comment_prefix, edit_mode, col_num);\n    if (error_msg !== null) {\n        show_single_line_error(error_msg);\n        return;\n    }\n    if (warning_msg) {\n        vscode.window.showWarningMessage(warning_msg);\n    }\n    active_editor.selections = selections;\n    // Call showTextDocument so that the editor will gain focus and the cursors will become active and blinking. This is a critical step here!\n    await vscode.window.showTextDocument(active_doc);\n}\n\n\nasync function virtual_shrink_table() {\n    let active_doc = get_active_doc();\n    if (!active_doc) {\n        return;\n    }\n    custom_virtual_alignment_modes.set(active_doc.fileName, VA_EXPLICITLY_DISABLED);\n    // Call reenable_inlay_hints_provider to immediately get rid of existing inlay hints.\n    reenable_inlay_hints_provider();\n    show_align_shrink_button(active_doc.fileName);\n}\n\n\nasync function whitespace_shrink_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!is_rainbow_dialect_doc(active_doc)) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        await report_progress(progress, 'Preparing');\n        let [shrinked_doc_text, first_failed_line] = ll_rainbow_utils().shrink_columns(active_doc, delim, policy, comment_prefix);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to shrink: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        whitespace_aligned_files.delete(active_doc.fileName);\n        show_align_shrink_button(active_doc.fileName);\n        if (shrinked_doc_text === null) {\n            vscode.window.showWarningMessage('No trailing whitespaces found, skipping');\n            return;\n        }\n        await report_progress(progress, 'Shrinking columns');\n        await replace_doc_content(active_editor, active_doc, shrinked_doc_text);\n    });\n}\n\n\nasync function virtual_align_table() {\n    let log_wrapper = new StackContextLogWrapper('virtual_align_table');\n    let active_doc = get_active_doc();\n    if (!is_rainbow_dialect_doc(active_doc))\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let [whole_doc_column_stats, first_failed_line, _records, _comments] = ll_rainbow_utils().calc_column_stats(active_doc, delim, policy, comment_prefix, extension_context.double_width_alignment);\n    if (first_failed_line === null) {\n        log_wrapper.log_doc_event('Whole doc alignment stats were reset', active_doc);\n        whole_doc_alignment_stats.set(active_doc.fileName, whole_doc_column_stats);\n    } else {\n        log_wrapper.log_doc_event('Failed to reset whole doc alignment stats', active_doc);\n    }\n    // If there is a parsing error, just don't set whole-doc stats in that case the aligner would use local stats, still better than nothing.\n    custom_virtual_alignment_modes.set(active_doc.fileName, VA_EXPLICITLY_ENABLED);\n\n    // Make sure the alignment is enabled - this is needed if it is disabled but was just called manually from the command palette.\n    await configure_inlay_hints_alignment(active_doc.languageId, log_wrapper);\n    reenable_inlay_hints_provider();\n    show_align_shrink_button(active_doc.fileName);\n}\n\n\nasync function content_modifying_align_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!is_rainbow_dialect_doc(active_doc))\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        await report_progress(progress, 'Calculating column statistics');\n        let [column_stats, first_failed_line, records, comments] = ll_rainbow_utils().calc_column_stats(active_doc, delim, policy, comment_prefix, extension_context.double_width_alignment);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to align: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        await report_progress(progress, 'Preparing final alignment');\n        let aligned_lines = ll_rainbow_utils().align_columns(records, comments, column_stats, delim);\n        let aligned_doc_text = aligned_lines.join('\\n');\n\n        await report_progress(progress, 'Aligning columns');\n        await replace_doc_content(active_editor, active_doc, aligned_doc_text);\n        whitespace_aligned_files.add(active_doc.fileName);\n        show_align_shrink_button(active_doc.fileName);\n    });\n}\n\n\nasync function do_copy_back(query_result_doc, active_editor) {\n    let data = query_result_doc.getText();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    await replace_doc_content(active_editor, active_doc, data);\n}\n\n\nasync function copy_back() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    let result_doc = get_active_doc();\n    if (!result_doc)\n        return;\n    let file_path = result_doc.fileName;\n    let parent_table_path = result_set_parent_map.get(safe_lower(file_path));\n    if (!parent_table_path)\n        return;\n    let parent_doc = await vscode.workspace.openTextDocument(parent_table_path);\n    let parent_editor = await vscode.window.showTextDocument(parent_doc);\n    await do_copy_back(result_doc, parent_editor);\n}\n\n\nasync function update_query_history(query) {\n    let history_list = get_from_global_state('rbql_query_history', []);\n    let old_index = history_list.indexOf(query);\n    if (old_index != -1) {\n        history_list.splice(old_index, 1);\n    } else if (history_list.length >= 20) {\n        history_list.splice(0, 1);\n    }\n    history_list.push(query);\n    await save_to_global_state('rbql_query_history', history_list);\n}\n\n\nasync function handle_dialect_selection_message(origin_doc, dialect_webview_panel, message, selected_separator, log_wrapper, integration_test_options) {\n    if (!message) {\n        return;\n    }\n    if (message.msg_type == 'dialect_handshake') {\n        let init_msg = {'msg_type': 'dialect_handshake', 'selected_separator': selected_separator};\n        if (integration_test_options && integration_test_options.integration_test) {\n            init_msg['integration_test'] = true;\n        }\n        await dialect_webview_panel.webview.postMessage(init_msg);\n    }\n\n    if (message.msg_type == 'apply_dialect') {\n        let delim = message.delim;\n        let policy = message.policy;\n        let comment_prefix = message.comment_prefix;\n        if (policy == 'whitespace' && delim != ' ') {\n            show_single_line_error(\"Selected policy can only be used with whitespace separator\");\n            return;\n        }\n        if (policy == 'double_escape' && delim == '\"') {\n            show_single_line_error(\"Double quote separator in incompatible with double quote escape policy\");\n            return;\n        }\n        if (!delim) {\n            show_single_line_error(\"Separator is empty\");\n            return;\n        }\n        if ([SIMPLE_POLICY, QUOTED_RFC_POLICY, QUOTED_POLICY, WHITESPACE_POLICY].indexOf(policy) == -1) {\n            show_single_line_error(\"Selected policy is empty or not supported\");\n            return;\n        }\n        // Dispose/close the webview so that the origin_doc becomes active and rainbow features can be applied immediately.\n        dialect_webview_panel.dispose();\n\n        await save_dynamic_info(extension_context, origin_doc.fileName, make_dialect_info(delim, policy));\n        extension_context.custom_comment_prefixes.set(origin_doc.fileName, comment_prefix);\n        if (origin_doc.languageId == DYNAMIC_CSV && is_active_doc(origin_doc)) {\n            // Filetype was already \"dynamic csv\", just re-highlight the file properly.\n            await enable_rainbow_features_if_csv(origin_doc, log_wrapper);\n        } else {\n            await vscode.languages.setTextDocumentLanguage(origin_doc, DYNAMIC_CSV);\n        }\n    }\n}\n\n\nasync function handle_rbql_client_message(webview, message, integration_test_options=null) {\n    let message_type = message['msg_type'];\n\n    if (message_type == 'handshake') {\n        var backend_language = get_from_global_state('rbql_backend_language', 'js');\n        var encoding = get_from_global_state('rbql_encoding', 'utf-8');\n        var init_msg = {'msg_type': 'handshake', 'backend_language': backend_language, 'encoding': encoding};\n        ll_rainbow_utils().sample_preview_records_from_context(rbql_context, init_msg, preview_window_size, cached_table_parse_result);\n        let path_key = file_path_to_query_key(rbql_context.input_document_path);\n        if (last_rbql_queries.has(path_key))\n            init_msg['last_query'] = last_rbql_queries.get(path_key);\n        let history_list = get_from_global_state('rbql_query_history', []);\n        init_msg['query_history'] = history_list;\n        init_msg['policy'] = rbql_context.policy;\n        init_msg['with_headers'] = rbql_context.with_headers;\n        init_msg['header_for_ui'] = rbql_context.header_for_ui;\n        init_msg['is_web_ext'] = is_web_ext;\n        if (integration_test_options) {\n            init_msg['integration_test_language'] = integration_test_options.rbql_backend;\n            init_msg['integration_test_query'] = integration_test_options.rbql_query;\n            init_msg['integration_test_with_headers'] = integration_test_options.with_headers || false;\n            init_msg['integration_test_delay'] = integration_test_options.integration_test_delay || 2000;\n        }\n        await webview.postMessage(init_msg);\n    }\n\n    if (message_type == 'fetch_table_header') {\n        try {\n            let table_id = message['table_id'];\n            let encoding = message['encoding'];\n\n            let input_table_dir = rbql_context.input_document_path ? path.dirname(rbql_context.input_document_path) : null;\n            let table_path = ll_rainbow_utils().find_table_path(global_state, input_table_dir, table_id);\n            if (!table_path)\n                return;\n            let header_line = await ll_rainbow_utils().read_header(table_path, encoding);\n            if (!header_line) {\n                return;\n            }\n            let [fields, warning] = csv_utils.smart_split(header_line, rbql_context.delim, rbql_context.policy, false);\n            if (!warning) {\n                webview.postMessage({'msg_type': 'fetch_table_header_response', 'header_for_ui': fields});\n            }\n        } catch (e) {\n            console.error('Unable to get join table header: ' + String(e));\n        }\n    }\n\n    if (message_type == 'update_query') {\n        let rbql_query = message['query'];\n        if (!rbql_query)\n            return;\n        if (rbql_context.input_document_path)\n            last_rbql_queries.set(file_path_to_query_key(rbql_context.input_document_path), rbql_query);\n    }\n\n    if (message_type == 'with_headers_change') {\n        rbql_context.with_headers = message['with_headers'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_with_headers_key(rbql_context.input_document_path), rbql_context.with_headers);\n    }\n\n    if (message_type == 'navigate') {\n        var navig_direction = message['direction'];\n        if (navig_direction == 'backward') {\n            rbql_context.requested_start_record -= preview_window_size;\n        } else if (navig_direction == 'forward') {\n            rbql_context.requested_start_record += preview_window_size;\n        } else if (navig_direction == 'begin') {\n            rbql_context.requested_start_record = 0;\n        } else if (navig_direction == 'end') {\n            rbql_context.requested_start_record = rbql_context.input_document.lineCount; // This is just max possible value which is incorrect and will be adjusted later.\n        }\n        let protocol_message = {'msg_type': 'navigate'};\n        ll_rainbow_utils().sample_preview_records_from_context(rbql_context, protocol_message, preview_window_size, cached_table_parse_result);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'run') {\n        let rbql_query = message['query'];\n        let backend_language = message['backend_language'];\n        let encoding = message['encoding'];\n        let output_dialect = message['output_dialect'];\n        let with_headers = message['with_headers'];\n        await update_query_history(rbql_query);\n        await run_rbql_query(webview, rbql_context.input_document_path, encoding, backend_language, rbql_query, output_dialect, with_headers);\n    }\n\n    if (message_type == 'edit_udf') {\n        if (is_web_ext) {\n            await send_report_to_webview(webview, 'Input error', 'UDFs are currently not supported in web version');\n            return;\n        }\n        let backend_language = message['backend_language'];\n        let udf_file_path = null;\n        let default_content = '';\n        if (backend_language == 'js') {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.js');\n            default_content = ll_rainbow_utils().get_default_js_udf_content();\n        } else {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.py');\n            default_content = ll_rainbow_utils().get_default_python_udf_content();\n        }\n        if (!fs.existsSync(udf_file_path)) {\n            fs.writeFileSync(udf_file_path, default_content);\n        }\n        let udf_doc = await vscode.workspace.openTextDocument(udf_file_path);\n        await vscode.window.showTextDocument(udf_doc);\n    }\n\n    if (message_type == 'global_param_change') {\n        await save_to_global_state(message['key'], message['value']);\n    }\n}\n\n\nfunction adjust_webview_paths(preview_panel, client_html, paths_list) {\n    for (const local_path of paths_list) {\n        let adjusted_webview_url = null;\n        if (is_web_ext) {\n            adjusted_webview_url = absolute_path_map[local_path];\n        } else {\n            adjusted_webview_url = preview_panel.webview.asWebviewUri(vscode.Uri.file(absolute_path_map[local_path]));\n        }\n        client_html = client_html.replace(`src=\"${local_path}\"`, `src=\"${adjusted_webview_url}\"`);\n    }\n    return client_html;\n}\n\n\nasync function edit_rbql(integration_test_options=null) {\n    let active_window = vscode.window;\n    if (!active_window)\n        return;\n    let active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let orig_uri = active_doc.uri;\n    if (!orig_uri)\n        return;\n    // For web orig_uri.scheme can have other valid values e.g. `vscode-test-web` when testing the browser integration.\n    if (orig_uri.scheme != 'file' && orig_uri.scheme != 'untitled' && !is_web_ext)\n        return;\n    if (orig_uri.scheme == 'file' && active_doc.isDirty && !is_web_ext) {\n        show_single_line_error(\"Unable to run RBQL: file has unsaved changes\");\n        return;\n    }\n    let input_path = null;\n    if (orig_uri.scheme == 'untitled' && !is_web_ext) {\n        // Scheme 'untitled' means that the document is a scratch buffer that hasn't been saved yet, see https://code.visualstudio.com/api/references/document-selector\n        let data = active_doc.getText();\n        let rnd_suffix = String(Math.floor(Math.random() * 1000000));\n        input_path = path.join(os.tmpdir(), `${scratch_buf_marker}_${rnd_suffix}.txt`);\n        // TODO consider adding username to the input_path and using chmod 600 on it.\n        fs.writeFileSync(input_path, data);\n    } else {\n        input_path = active_doc.fileName;\n    }\n\n    if (!input_path) {\n        show_single_line_error(\"Unable to run RBQL for this file\");\n        return;\n    }\n\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        policy = 'monocolumn';\n        delim = 'monocolumn';\n    }\n    let with_headers_by_default = get_from_config('rbql_with_headers_by_default', false);\n    let with_headers = get_from_global_state(make_with_headers_key(input_path), with_headers_by_default);\n    // TODO Find a way to use `get_header()` instead.\n    let header_for_ui = get_header_from_document(active_doc, delim, policy, comment_prefix)[1];\n    rbql_context = {\n        \"input_document\": active_doc,\n        \"input_document_path\": input_path,\n        \"requested_start_record\": 0,\n        \"delim\": delim,\n        \"policy\": policy,\n        \"comment_prefix\": comment_prefix,\n        \"with_headers\": with_headers,\n        \"header_for_ui\": header_for_ui\n    };\n\n    rbql_preview_panel = vscode.window.createWebviewPanel('rbql-console', 'RBQL Console', vscode.ViewColumn.Active, {enableScripts: true});\n    if (!client_html_template) {\n        client_html_template = await load_resource_file_universal('rbql_client.html');\n    }\n    rbql_preview_panel.webview.html = adjust_webview_paths(rbql_preview_panel, client_html_template, ['contrib/textarea-caret-position/index.js', 'rbql_suggest.js', 'rbql_client.js', 'rbql_logo.svg']);\n    rbql_preview_panel.webview.onDidReceiveMessage(function(message) { handle_rbql_client_message(rbql_preview_panel.webview, message, integration_test_options); });\n}\n\n\nfunction autodetect_dialect(config, active_doc, candidate_separators, comment_prefix) {\n    let candidate_dialects = [];\n    for (let separator of candidate_separators) {\n        let policy = get_default_policy(separator);\n        let dialect_id = map_dialect_to_language_id(separator, policy);\n        if (!dialect_id || !policy)\n            continue;\n        candidate_dialects.push([dialect_id, separator, policy]);\n        if (separator == ',' || separator == ';') {\n            candidate_dialects.push([DYNAMIC_CSV, separator, QUOTED_RFC_POLICY]);\n        }\n    }\n    let detect_trailing_spaces = get_from_config('csv_lint_detect_trailing_spaces', false, config);\n    let min_num_lines = get_from_config('autodetection_min_line_count', 10, config);\n    if (active_doc.lineCount < min_num_lines)\n        return [null, null, null];\n    let [best_dialect, best_separator, best_policy, best_dialect_first_trailing_space_line] = [null, null, null, null];\n    let best_dialect_num_columns = 1;\n    for (let candidate_dialect of candidate_dialects) {\n        let [dialect_id, separator, policy] = candidate_dialect;\n        let [_records, num_records_parsed, fields_info, first_defective_line, first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(active_doc, separator, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/false, /*preserve_quotes_and_whitespaces=*/true, detect_trailing_spaces, /*min_num_fields_for_autodetection=*/best_dialect_num_columns + 1);\n        if (first_defective_line !== null || fields_info.size != 1)\n            continue;\n        if (num_records_parsed < min_num_lines) {\n            // Ensure that min_num_lines also applies to number of parsed records. There could be a discrepancy between number of lines and records due to comment lines and/or multiline rfc records.\n            continue;\n        }\n        let num_columns = Array.from(fields_info.keys())[0];\n        if (num_columns >= best_dialect_num_columns + 1) {\n            best_dialect_num_columns = num_columns;\n            [best_dialect, best_separator, best_policy] = [dialect_id, separator, policy];\n            best_dialect_first_trailing_space_line = first_trailing_space_line;\n        }\n    }\n    return [best_dialect, best_separator, best_policy, best_dialect_first_trailing_space_line];\n}\n\n\nfunction autodetect_dialect_frequency_based(active_doc, candidate_separators, max_num_chars_to_test) {\n    let [best_dialect, best_separator, best_policy] = ['csv', ',', QUOTED_POLICY];\n    let best_dialect_frequency = 0;\n    let data = active_doc.getText();\n    if (!data)\n        return [best_dialect, best_separator, best_policy];\n    for (let separator of candidate_separators) {\n        if (separator == ' ' || separator == '.')\n            continue; // Whitespace and dot have advantage over other separators in this algorithm, so we just skip them.\n        let frequency = 0;\n        for (let j = 0; j < max_num_chars_to_test && j < data.length; j++) {\n            if (data[j] == separator)\n                frequency += 1;\n        }\n        if (frequency > best_dialect_frequency) {\n            let policy = get_default_policy(separator);\n            let dialect_id = map_dialect_to_language_id(separator, policy);\n            [best_dialect, best_separator, best_policy] = [dialect_id, separator, policy];\n            best_dialect_frequency = frequency;\n        }\n    }\n    return [best_dialect, best_separator, best_policy];\n}\n\n\nasync function try_autodetect_and_set_rainbow_filetype(vscode, config, extension_context, active_doc, logging_context_id=null) {\n    // VSCode to some extent is capable of \"remembering\" doc id in the previous invocation, at least when used in debug mode.\n\n    // VSCode may (and will?) forget documentId of a document \"A\" if document \"B\" is opened in the tab where \"A\" was (double VS single click in file browser panel).\n    // see https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode\n    let log_wrapper = new StackContextLogWrapper('autodetection', logging_context_id);\n    log_wrapper.log_doc_event('starting...', active_doc);\n    if (extension_context.autodetection_temporarily_disabled_for_rbql) {\n        log_wrapper.log_simple_event('abort: disabled for rbql');\n        return [active_doc, false];\n    }\n    if (!is_eligible_doc(active_doc)) {\n        log_wrapper.log_simple_event('abort: ineligible doc');\n        return [active_doc, false];\n    }\n    if (!get_from_config('enable_separator_autodetection', false, config)) {\n        log_wrapper.log_simple_event('abort: disabled in config');\n        return [active_doc, false];\n    }\n    var file_path = active_doc.fileName;\n    var original_language_id = active_doc.languageId;\n    if (extension_context.autodetection_stoplist.has(file_path)) {\n        log_wrapper.log_simple_event('abort: doc path in stoplist');\n        return [active_doc, false];\n    }\n    // The check below also prevents double autodetection from handle_doc_open fork in the new_doc with adjusted language id.\n    let is_default_csv = (file_path.endsWith('.csv') || file_path.endsWith('.CSV')) && original_language_id == 'csv';\n    if (original_language_id != PLAINTEXT && !is_default_csv) {\n        log_wrapper.log_simple_event('abort: ineligible original language id');\n        return [active_doc, false];\n    }\n\n    let candidate_separators = get_from_config('autodetect_separators', [], config).map((s) => s === 'TAB' ? '\\t' : s);\n    if (!dialect_map.hasOwnProperty(original_language_id) &&\n        last_closed_rainbow_doc_info &&\n        last_closed_rainbow_doc_info.file_path === file_path &&\n        Math.abs(Date.now() - last_closed_rainbow_doc_info.timestamp) < 1000) {\n        // The same file was recently closed with rainbow dialect and re-opened as another filetype, most likely manual language switch, do not autodetect.\n        // Do not add to autodetection_stoplist because it goes against VSCode approach to discard all language mode state on reopen.\n        // Also adding to autodetection_stoplist would make \"curious doc reopening\" problem worse.\n        // Do not initialize \"Rainbow ON\" because either it was already enabled or user goes through the native UI and therefore showing Rainbow ON is not idiomatic/consistent/relevant.\n        log_wrapper.log_simple_event('abort: recent doc language switch prevention');\n        return [active_doc, false];\n    }\n\n    let comment_prefix_for_autodetection = extension_context.comment_prefix || '#'; // Assume '#' as a comment prefix for autodetection purposes only.\n    log_wrapper.log_simple_event('starting standard dialect autodetection...');\n    let [rainbow_csv_language_id, delim, policy, first_trailing_space_line] = autodetect_dialect(config, active_doc, candidate_separators, comment_prefix_for_autodetection);\n    if (rainbow_csv_language_id) {\n        // Add the file to lint results to avoid re-parsing it with CSV Lint later.\n        extension_context.lint_results.set(`${file_path}.${rainbow_csv_language_id}`, {'is_ok': true, 'first_trailing_space_line': first_trailing_space_line});\n    } else if (!rainbow_csv_language_id && is_default_csv) {\n        // Smart autodetection method has failed, but we need to choose a separator because this is a csv file. Let's just find the most popular one within the first N characters.\n        log_wrapper.log_simple_event('starting frequency-based dialect autodetection...');\n        [rainbow_csv_language_id, delim, policy] = autodetect_dialect_frequency_based(active_doc, candidate_separators, /*max_num_chars_to_test=*/10000);\n    }\n    if (!rainbow_csv_language_id) {\n        log_wrapper.log_simple_event('abort: content-based autodetection did not detect anything');\n        return [active_doc, false];\n    }\n    // Comment prefix used here is global/default so we don't store it in custom comment prefix list.\n    if (rainbow_csv_language_id == DYNAMIC_CSV) {\n        await save_dynamic_info(extension_context, file_path, make_dialect_info(delim, policy));\n    }\n    if (rainbow_csv_language_id == original_language_id) {\n        log_wrapper.log_simple_event('abort: autodetected dialect matches the original one');\n        return [active_doc, false];\n    }\n\n    // We can't add the doc path to autodetection_stoplist here (for autodetect-once semantic)\n    // because the doc could be in preview mode and VSCode won't remember language_id so we might need to autodetect it again later.\n\n    preserve_original_language_id_if_needed(file_path, original_language_id, extension_context.original_language_ids);\n    log_wrapper.log_simple_event(`autodetection successful - switching from ${original_language_id} to ${rainbow_csv_language_id}`);\n    let new_doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    log_wrapper.log_doc_event('after language switch', new_doc);\n    return [new_doc, true];\n}\n\n\nasync function handle_first_edit_for_an_empty_doc(change_event) {\n    if (!change_event)\n        return;\n    if (doc_first_edit_subscription) {\n        doc_first_edit_subscription.dispose();\n        doc_first_edit_subscription = null;\n    }\n    let log_wrapper = new StackContextLogWrapper('handle_first_edit_for_an_empty_doc');\n    log_wrapper.log_doc_event('starting', change_event.document);\n    await try_autodetect_and_set_rainbow_filetype(vscode, vscode.workspace.getConfiguration('rainbow_csv'), extension_context, change_event.document, log_wrapper.context_id);\n}\n\n\nasync function handle_editor_switch(editor) {\n    let log_wrapper = new StackContextLogWrapper('handle_editor_switch');\n    // This event is not triggered when language mode is changed.\n    // We need this handler to hide and show UI elements when user switches between the doc tabs.\n    // When the file is larger than 50MB, editor and active_doc are null/undefined.\n    let active_doc = get_active_doc(editor);\n    log_wrapper.log_doc_event('editor switch', active_doc);\n    // When switching between the open non-preview doc tabs the doc open/close events are (typically) not triggered for the actual files (exception is \"curious doc reopening\" problem, see DEV_README.md)\n    // but open and close events could (and will) be triggered for some virtual files e.g. paired files with .git scheme.\n    disable_rainbow_features_if_non_csv(active_doc, log_wrapper);\n    await enable_rainbow_features_if_csv(active_doc, log_wrapper); // No-op if non-csv.\n}\n\n\nfunction do_handle_cursor_movement_for_column_info() {\n    if (!show_column_info_button() && column_info_button) {\n        column_info_button.hide();\n    }\n}\n\n\nfunction handle_cursor_movement_for_column_info(_cursor_event) {\n    if (cursor_timeout_handle_for_column_info !== null) {\n        clearTimeout(cursor_timeout_handle_for_column_info);\n    }\n    // We need timeout delay here to deduplicate/debounce events from multiple consecutive movements, see https://stackoverflow.com/a/49050990/2898283.\n    cursor_timeout_handle_for_column_info = setTimeout(() => do_handle_cursor_movement_for_column_info(), 10);\n}\n\n\nfunction do_handle_cursor_movement_for_row_background() {\n    let active_editor = get_active_editor();\n    if (active_editor && active_editor.visibleRanges && active_editor.visibleRanges.length) {\n        provide_row_background_decorations(active_editor, active_editor.visibleRanges[0]);\n    }\n}\n\n\nfunction handle_cursor_movement_for_alt_row_background(_cursor_event) {\n    if (cursor_timeout_handle_for_alt_row_background !== null) {\n        clearTimeout(cursor_timeout_handle_for_alt_row_background);\n    }\n    // We need timeout delay here to deduplicate/debounce events from multiple consecutive movements, see https://stackoverflow.com/a/49050990/2898283.\n    cursor_timeout_handle_for_alt_row_background = setTimeout(() => do_handle_cursor_movement_for_row_background(), 10);\n}\n\n\nasync function handle_doc_open(new_doc) {\n    // The onDidOpenTextDocument handler will trigger for already \"opened\" docs too if they are re-opened in the same tab. Example\n    // Document \"A\" opens in tab1 -> triggers onDidOpenTextDocument\n    // Document \"B\" opens in tab1 -> triggers onDidOpenTextDocument  (this could happen if user clicks on document \"B\" in the left file browser panel)\n    // Document \"A\" opens in tab1 -> triggers onDidOpenTextDocument again! The previous languageId is reset.\n    // In other words if user opens a different document in the same tab (single click VS double click in the file browser panel) it may trigger the current document closing and opening of a new doc.\n    // This behavior is called Preview Mode, see https://vscode.one/new-tab-vscode/ and https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode\n\n    let log_wrapper = new StackContextLogWrapper('handle_doc_open');\n    log_wrapper.log_doc_event('opening doc', new_doc);\n\n    if (!is_eligible_doc(new_doc)) {\n        log_wrapper.log_simple_event('abort: ineligible doc');\n        return;\n    }\n\n    // Register a handler for copy-pasting CSV-formated data into an empty doc. Empty docs have lineCount equal 1.\n    if (get_from_config('enable_separator_autodetection', false) && doc_first_edit_subscription === null && new_doc.isUntitled && new_doc.lineCount <= 1) {\n        doc_first_edit_subscription = vscode.workspace.onDidChangeTextDocument(handle_first_edit_for_an_empty_doc);\n        log_wrapper.log_simple_event('creating empty doc subscription');\n        return;\n    }\n    let filetype_changed = false;\n    [new_doc, filetype_changed] = await try_autodetect_and_set_rainbow_filetype(vscode, vscode.workspace.getConfiguration('rainbow_csv'), extension_context, new_doc, log_wrapper.context_id);\n\n    // If autodetection was successful we are essentially forking this handler for the new doc and the code below will be executed twice: here and in the handle_doc_open for the `new_doc`.\n    // There is still some benefit for not having and additional check to prevent this double execution: disable/enable ui calls are idempotent and the code is more robust/reliable this way.\n    log_wrapper.log_doc_event(`after autodetection. filetype changed: ${filetype_changed}`, new_doc);\n    // There might be some redundancy between this code and onDidChangeActiveTextEditor handler, but this actually desired as long as methods are idempotent.\n    // It is much better to do the same thing twice (if it is idempotent) to ensure the required behavior than rely on assumptions about external VSCode mechanisms (aka Defensive Programming).\n    if (is_active_doc(new_doc)) {\n        log_wrapper.log_simple_event('active doc - enabling features');\n        disable_rainbow_features_if_non_csv(new_doc, log_wrapper); // We need this to handle manual switch from csv to txt, this would immediately remove UI elements, that would stay otherwise.\n        await enable_rainbow_features_if_csv(new_doc, log_wrapper); // No-op if non-csv.\n    }\n    log_wrapper.log_simple_event('finishing');\n}\n\n\nasync function handle_doc_close(doc_to_close) {\n    // NOTE: Closing of doc A (csv) followed by opening of the same doc A (non-csv) can also be caused by the \"curious doc reopening\" problem, see DEV_README.md.\n\n    // This is a workaround hack to prevent repeated autodetection on csv -> txt language switch.\n    // In that case a csv file will be closed and shortly after a txt file with the same path will be opened, so we don't want to apply autodetection to it.\n    // This will also trigger when virtual docs (e.g. `.git` pairs) are closed, but it is probably fine to reset last_closed_rainbow_doc_info in that case.\n    let log_wrapper = new StackContextLogWrapper('handle_doc_close');\n    log_wrapper.log_doc_event('closing doc', doc_to_close);\n    if (!is_rainbow_dialect_doc(doc_to_close)) {\n        log_wrapper.log_simple_event('abort: non rainbow doc');\n        last_closed_rainbow_doc_info = null;\n        return;\n    }\n\n    last_closed_rainbow_doc_info = {file_path: doc_to_close.fileName, timestamp: Date.now()};\n\n    if (is_active_doc(doc_to_close)) {\n        log_wrapper.log_simple_event('disabling ui elements');\n        // In order to disable elements we need to check that the closed rainbow doc is in fact active doc to avoid removing UI when a non-focused CSV or non-csv file is being closed.\n        // Inactive CSV closing can happen in the background if user closes with \"x\" top-right corner button another inactive tab with another CSV file.\n        disable_ui_elements();\n    }\n    log_wrapper.log_simple_event('finalizing');\n}\n\n\nasync function restart_extension_config(_config_change_event) {\n    // Here `_config_change_event` allows to check if a specific configuration was affected but another way to do this is just to compare before and after values.\n    let logging_enabled_before = extension_context.logging_enabled;\n    extension_context.logging_enabled = get_from_config('enable_debug_logging', false);\n    if (extension_context.logging_enabled && !logging_enabled_before) {\n        let log_wrapper = new StackContextLogWrapper('config change');\n        log_wrapper.log_simple_event('logging enabled');\n    }\n    reconfigure_sticky_header_provider();\n    if (get_from_config('highlight_rows', false)) {\n        register_row_background_decorations_provider();\n    }\n    extension_context.virtual_alignment_mode = get_from_config('virtual_alignment_mode', 'disabled');\n    extension_context.double_width_alignment = get_from_config('double_width_alignment', true);\n    extension_context.virtual_alignment_char = get_from_config('virtual_alignment_char', 'middot');\n    extension_context.virtual_alignment_vertical_grid = get_from_config('virtual_alignment_vertical_grid', false);\n    extension_context.comment_prefix = get_from_config('comment_prefix', '');\n}\n\n\nfunction quote_field(field, delim) {\n    if (field.indexOf('\"') != -1 || field.indexOf(delim) != -1) {\n        return '\"' + field.replace(/\"/g, '\"\"') + '\"';\n    }\n    return field;\n}\n\n\nfunction quoted_join(fields, delim) {\n    var quoted_fields = fields.map(function(val) { return quote_field(val, delim); });\n    return quoted_fields.join(delim);\n}\n\n\nasync function make_preview(uri, preview_mode) {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var file_path = uri.fsPath;\n    if (!file_path || !fs.existsSync(file_path)) {\n        vscode.window.showErrorMessage('Invalid file');\n        return;\n    }\n\n    var size_limit = 1024000; // ~1MB\n    var file_size_in_bytes = fs.statSync(file_path)['size'];\n    if (file_size_in_bytes <= size_limit) {\n        vscode.window.showWarningMessage('Rainbow CSV: The file is not big enough, showing the full file instead. Use this preview for files larger than 1MB');\n        let full_orig_doc = await vscode.workspace.openTextDocument(file_path);\n        await vscode.window.showTextDocument(full_orig_doc);\n        return;\n    }\n\n    let file_basename = path.basename(file_path);\n    const out_path = path.join(os.tmpdir(), `.rb_csv_preview.${preview_mode}.${file_basename}`);\n\n    fs.open(file_path, 'r', (err, fd) => {\n        if (err) {\n            console.log(err.message);\n            vscode.window.showErrorMessage('Unable to preview file');\n            return;\n        }\n\n        var buffer = Buffer.alloc(size_limit);\n        let read_begin_pos = preview_mode == 'head' ? 0 : Math.max(file_size_in_bytes - size_limit, 0);\n        fs.read(fd, buffer, 0, size_limit, read_begin_pos, function(err, _num) {\n            if (err) {\n                console.log(err.message);\n                vscode.window.showErrorMessage('Unable to preview file');\n                return;\n            }\n\n            const buffer_str = buffer.toString();\n            // TODO handle old mac '\\r' line endings - still used by Mac version of Excel.\n            let content = null;\n            if (preview_mode == 'head') {\n                content = buffer_str.substr(0, buffer_str.lastIndexOf(buffer_str.includes('\\r\\n') ? '\\r\\n' : '\\n'));\n            } else {\n                content = buffer_str.substr(buffer_str.indexOf('\\n') + 1);\n            }\n            fs.writeFileSync(out_path, content);\n            vscode.workspace.openTextDocument(out_path).then(doc => vscode.window.showTextDocument(doc));\n        });\n    });\n}\n\n\nfunction register_csv_hover_info_provider(language_id, context) {\n    let hover_provider = vscode.languages.registerHoverProvider(language_id, {\n        provideHover(document, position, token) {\n            return make_hover(document, language_id, position, token);\n        }\n    });\n    context.subscriptions.push(hover_provider);\n}\n\n\nfunction provide_tracked_column_decorations(active_editor, range) {\n    let document = active_editor.document;\n    if (!document) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(document);\n    if (!policy) {\n        return;\n    }\n    if (!extension_context.tracked_columns.has(document.fileName)) {\n        return;\n    }\n    let tracked_columns = extension_context.tracked_columns.get(document.fileName);\n    if (tracked_columns.empty()) {\n        return;\n    }\n    let tracked_column_ranges = new Map();\n    for (let column_num of tracked_columns.get_tracked_columns()) {\n        tracked_column_ranges.set(column_num, new Array());\n    }\n\n    let parsing_range = ll_rainbow_utils().extend_range_by_margin(vscode, document, range, 50);\n    let row_infos = ll_rainbow_utils().parse_document_range(vscode, document, delim, /*include_delim_length_in_ranges=*/true, policy, comment_prefix, parsing_range);\n    for (let row_info of row_infos) {\n        if (row_info.comment_range !== null) {\n            continue;\n        } else {\n            for (let column_num of tracked_columns.get_tracked_columns()) {\n                for (let record_range of row_info.record_ranges[column_num]) {\n                    // One logical field can map to multiple tokens if it spans multiple lines because VSCode doesn't support multiline tokens.\n                    tracked_column_ranges.get(column_num).push(record_range);\n                }\n            }\n        }\n    }\n\n    for (let column_num of tracked_columns.get_tracked_columns()) {\n        let current_column_ranges = tracked_column_ranges.get(column_num);\n        let tracked_decoration_type = tracked_columns.get_decoration_type(column_num);\n        active_editor.setDecorations(tracked_decoration_type, current_column_ranges);\n    }\n}\n\n\nfunction provide_row_background_decorations(active_editor, range) {\n    let document = active_editor.document;\n    if (!document || !is_rainbow_dialect_doc(document)) {\n        return;\n    }\n    if (!row_background_enabled(document.fileName)) {\n        return;\n    }\n    let [_delim, policy, _comment_prefix] = get_dialect(document);\n    if (policy == QUOTED_RFC_POLICY) {\n        // TODO handle rfc records here, do actual parsing\n        // Currently this early return is needed here too because this provider can trigger for rfc dialects when background decorations are enabled by default.\n        return;\n    }\n    let selection_start_line = -1;\n    let selection_end_line = -1;\n    let selection = active_editor.selection;\n    if (selection && !selection.isEmpty) {\n        selection_start_line = selection.start.line;\n        selection_end_line = selection.end.line;\n    }\n    let decorations_margin = 10;\n    let begin_line = Math.max(0, range.start.line - decorations_margin);\n    let end_line = Math.min(document.lineCount, range.end.line + decorations_margin);\n    let alternating_row_ranges = [];\n    for (let lnum = begin_line; lnum < end_line; lnum++) {\n        if (lnum >= selection_start_line && lnum <= selection_end_line) {\n            continue;\n        }\n        if (lnum % 2 == 1) {\n            let line_text = document.lineAt(lnum).text;\n            alternating_row_ranges.push(new vscode.Range(lnum, 0, lnum, line_text.length));\n        }\n    }\n    active_editor.setDecorations(alternate_row_background_decoration_type, alternating_row_ranges);\n}\n\n\nclass RowBackgroundDecorationsProvider {\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(_document, range, _token) {\n        // This is a \"fake\" semantic tokens provider which actually provides decorations instead of semantic tokens.\n        // TODO Consider using onDidChangeTextEditorVisibleRanges event instead when its behavior is fixed, see: https://github.com/microsoft/vscode/issues/154977\n        let active_editor = get_active_editor();\n        if (active_editor) {\n            provide_row_background_decorations(active_editor, range);\n        }\n        return null;\n    }\n}\n\n\nclass ColumnTrackingDecorationsProvider {\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(_document, range, _token) {\n        // This is a \"fake\" semantic tokens provider which actually provides decorations instead of semantic tokens.\n        // TODO Consider using onDidChangeTextEditorVisibleRanges event instead when its behavior is fixed, see: https://github.com/microsoft/vscode/issues/154977\n        let active_editor = get_active_editor();\n        if (active_editor) {\n            provide_tracked_column_decorations(active_editor, range);\n        }\n        return null;\n    }\n}\n\n\nclass RainbowTokenProvider {\n    // We don't utilize typescript `implement` interface keyword, because TS doesn't seem to be exporting interfaces to JS (unlike classes).\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(document, range, _token) {\n        let [delim, policy, comment_prefix] = get_dialect(document);\n        if (!policy || document.languageId != DYNAMIC_CSV) {\n            return null;\n        }\n\n        let parsing_range = ll_rainbow_utils().extend_range_by_margin(vscode, document, range, 50);\n        let row_infos = ll_rainbow_utils().parse_document_range(vscode, document, delim, /*include_delim_length_in_ranges=*/true, policy, comment_prefix, parsing_range);\n        // Create a new builder to clear the previous tokens.\n        const builder = new vscode.SemanticTokensBuilder(tokens_legend);\n        for (let row_info of row_infos) {\n            if (row_info.comment_range !== null) {\n                builder.push(row_info.comment_range, COMMENT_TOKEN);\n            } else {\n                for (let col_num = 0; col_num < row_info.record_ranges.length; col_num++) {\n                    let token_id = col_num % rainbow_token_types.length;\n                    if (token_id == 0) {\n                        // Do not highlight the first `rainbow1` group altogether, since it has the default color anyway.\n                        // Dynamic highlighting with undefined syntax like `rainbow1` is a little glitchy e.g. in case when re-tokenization occurs these undefined groups may fail to override the previous defined groups.\n                        // Another benefit is that by reducing the number of groups we are speeding things up a little.\n                        continue;\n                    }\n                    for (let record_range of row_info.record_ranges[col_num]) {\n                        // One logical field can map to multiple tokens if it spans multiple lines because VSCode doesn't support multiline tokens.\n                        builder.push(record_range, rainbow_token_types[token_id]);\n                    }\n                }\n            }\n        }\n        return builder.build();\n    }\n}\n\n\nclass CommentTokenProvider {\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(doc, range, _token) {\n        let [_delim, policy, comment_prefix] = get_dialect(doc);\n        if (manual_comment_prefix_stoplist.has(doc.fileName) && !comment_prefix) {\n            // We can't use empty comment prefix (and early return) - in that case the previous highlighting would not go away due to a VSCode quirk, need to make an empty build instead to make sure that all previously highlighted lines were cleared. We also can't create an empty builder and early return it because in that case we won't highlight dynamic csv columns (highlighting would disappear)\n            comment_prefix = '#####COMMENT_PREFIX_THAT_CAN_NOT_OCCURE_IN_A_NORMAL_FILE_AND_EVEN_IF_IT_OCCURES_NOT_A_BIG_DEAL####';\n        }\n        if (!comment_prefix || policy === null || policy == QUOTED_RFC_POLICY) {\n            return null; // Sanity check: with QUOTED_RFC_POLICY we should be using a different tokenizer which also handles comments.\n        }\n        // Create a new builder to clear the previous tokens.\n        const builder = new vscode.SemanticTokensBuilder(tokens_legend);\n        let begin_line = Math.max(0, range.start.line - dynamic_csv_highlight_margin);\n        let end_line = Math.min(doc.lineCount, range.end.line + dynamic_csv_highlight_margin);\n        for (let lnum = begin_line; lnum < end_line; lnum++) {\n            let line_text = doc.lineAt(lnum).text;\n            if (line_text.startsWith(comment_prefix)) {\n                builder.push(new vscode.Range(lnum, 0, lnum, line_text.length), COMMENT_TOKEN);\n            }\n        }\n        return builder.build();\n    }\n}\n\n\nclass InlayHintProvider {\n    constructor() {\n    }\n    async provideInlayHints(document, _range, _cancellation_token) {\n        // Inlay hints should work really fast and in sync mode so we don't need to handle `_cancellation_token`.\n        let visible_range = null;\n        let active_editor = get_active_editor();\n        if (active_editor && active_editor.visibleRanges && active_editor.visibleRanges.length) {\n            // For some reason the `range` method variable can contain much bigger range than the actual visible range (probably a bug).\n            // This bug coupled with an apparently existing undocumented limit on total length of inlay hints across multiple lines prevents some of the bottom visible lines from being aligned.\n            // Some additional background: https://github.com/mechatroner/vscode_rainbow_csv/issues/205.\n            visible_range = active_editor.visibleRanges[0];\n        } else {\n            return;\n        }\n        let custom_alignment_mode = custom_virtual_alignment_modes.get(document.fileName);\n        if (!virtual_alignment_enabled(extension_context.virtual_alignment_mode, custom_alignment_mode)) {\n            return;\n        }\n        let [delim, policy, comment_prefix] = get_dialect(document);\n        if (policy === null) {\n            return [];\n        }\n        let parsing_range = ll_rainbow_utils().extend_range_by_margin(vscode, document, visible_range, 50);\n        let row_infos = ll_rainbow_utils().parse_document_range(vscode, document, delim, /*include_delim_length_in_ranges=*/false, policy, comment_prefix, parsing_range);\n        let header_lnum = get_header(document, delim, policy, comment_prefix)[0];\n        // It is possible for `header_lnum` to be null if the header is virtual.\n        if (header_lnum !== null && header_lnum < parsing_range.start.line) { // We don't check if header is after the range because it is a very weird corner case which doesn't matter for the purpose of virtual alignment anyway and requires additional testing.\n            let header_range = new vscode.Range(header_lnum, 0, header_lnum, 1);\n            let header_row_infos = ll_rainbow_utils().parse_document_range(vscode, document, delim, /*include_delim_length_in_ranges=*/false, policy, comment_prefix, header_range);\n            row_infos = header_row_infos.concat(row_infos);\n        }\n\n        let all_columns_stats = ll_rainbow_utils().calc_column_stats_for_fragment(row_infos, header_lnum, extension_context.double_width_alignment);\n        if (whole_doc_alignment_stats.has(document.fileName)) {\n            ll_rainbow_utils().reconcile_whole_doc_and_local_column_stats(whole_doc_alignment_stats.get(document.fileName), all_columns_stats);\n            // Save updated whole-doc stats.\n            whole_doc_alignment_stats.set(document.fileName, all_columns_stats);\n        }\n        let alignment_char = extension_context.virtual_alignment_char == 'middot' ? '\\u00b7' : ' ';\n        let post_delim_readability_gap_length = 0; // There is a limit on total number of inlay hints spans which is 1500, so we avoid creating too many hints, and there are other benefits, see below:\n        // * Zero-length spans are confusing and make cursor movements jump so the fewer we have them the better as long as the columns are still aligned.\n        // * Better performance with fewer inlay hints\n        let visible_range_hints = ll_rainbow_utils().generate_inlay_hints(vscode, visible_range, header_lnum, row_infos, all_columns_stats, delim.length, alignment_char, extension_context.virtual_alignment_vertical_grid, post_delim_readability_gap_length);\n        return visible_range_hints;\n    }\n}\n\n\nasync function load_resource_file_for_web(extension_uri, resource_path) {\n    let resource_uri = vscode.Uri.joinPath(extension_uri, resource_path);\n    let bytes = await vscode.workspace.fs.readFile(resource_uri);\n    // Using TextDecoder because it should work fine in web extension.\n    return new TextDecoder().decode(bytes);\n}\n\n\nasync function load_resource_file_universal(resource_path) {\n    if (is_web_ext) {\n        let resource_data = await load_resource_file_for_web(web_extension_uri, resource_path);\n        return resource_data;\n    }\n    return fs.readFileSync(absolute_path_map[resource_path], \"utf8\");\n}\n\n\nfunction generate_tracked_field_decoration_types() {\n    let result = [];\n    result.push(vscode.window.createTextEditorDecorationType({borderStyle: 'solid', borderWidth: '1px', borderColor: new vscode.ThemeColor('rainbowtrack1')}));\n    result.push(vscode.window.createTextEditorDecorationType({borderStyle: 'solid', borderWidth: '1px', borderColor: new vscode.ThemeColor('rainbowtrack2')}));\n    result.push(vscode.window.createTextEditorDecorationType({borderStyle: 'solid', borderWidth: '1px', borderColor: new vscode.ThemeColor('rainbowtrack3')}));\n    return result;\n}\n\n\nfunction are_actual_comments(comments) {\n    if (comments.length == 0) {\n        return false;\n    }\n    if (comments.length == 1 && comments[0].comment_text == \"\") {\n        // There is a \"hack\" to add last empty line to the comments array and this is a hacky workaround.\n        return false;\n    }\n    return true;\n}\n\n\n// TODO use the selection-based sampling as in markdown copy.\nasync function do_excel_copy(log_wrapper) {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    if (!is_rainbow_dialect_doc(active_doc)) {\n        return null;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null)\n        return null;\n    log_wrapper.log_doc_event('sampling lines', active_doc);\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false);\n    if (first_defective_line !== null) {\n        // TODO Consider not stopping on warning.\n        show_single_line_error(`Unable to copy - found formatting error at line ${first_defective_line}.`);\n        return;\n    }\n    if (are_actual_comments(comments)) {\n        vscode.window.showWarningMessage('Found CSV comments - They will not be copied.');\n    }\n    log_wrapper.log_doc_event('converting to tsv', active_doc);\n    let tsv_lines = [];\n    for (let r = 0; r < records.length; r++) {\n        // TODO Consider checking there is no tabs in the source fields.\n        let cur_record = records[r];\n        tsv_lines.push(cur_record.join('\\t'));\n    }\n    let tsv_content = tsv_lines.join('\\n');\n    log_wrapper.log_doc_event('writing to the clipboard', active_doc);\n    await vscode.env.clipboard.writeText(tsv_content);\n    log_wrapper.log_doc_event('finishing excel_copy', active_doc);\n    vscode.window.showInformationMessage('Success: You can now Paste (Ctrl+V) into Sheets');\n}\n\n\nasync function excel_copy() {\n    let log_wrapper = new StackContextLogWrapper('excel_copy');\n    log_wrapper.log_doc_event('starting excel_copy');\n    try {\n        await do_excel_copy(log_wrapper);\n    } catch (error) {\n        log_wrapper.log_doc_event(`Something went wrong: ${error}`);\n        show_single_line_error('Unable to copy: Something went wrong');\n    }\n}\n\n\nasync function markdown_copy() {\n    let log_wrapper = new StackContextLogWrapper('markdown_copy');\n    log_wrapper.log_doc_event('starting markdown_copy');\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!is_rainbow_dialect_doc(active_doc))\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n\n    let selection_start_line = 0;\n    let selection_end_line = active_doc.lineCount;\n    let selection = active_editor.selection;\n    if (selection && !selection.isEmpty) {\n        selection_start_line = selection.start.line;\n        selection_end_line = selection.end.line;\n    }\n    let conversion_range = new vscode.Range(selection_start_line, 0, selection_end_line, /*ignored_column=*/0);\n    log_wrapper.log_doc_event('parsing');\n    let row_infos = ll_rainbow_utils().parse_document_range(vscode, active_doc, delim, /*include_delim_length_in_ranges=*/false, policy, comment_prefix, conversion_range);\n    // Here row_infos also includes the fields themselves so all good so far.\n    let records = [];\n    let num_columns = null;\n    for (let row_info of row_infos) {\n        let fields = [];\n        for (let field_segments of row_info.record_fields) {\n            if (field_segments.length != 1) {\n                // TODO Consider optionally joining multiline fragments with `<br>` or another established separator.\n                show_single_line_error('Unable to copy fragment with multiline fields');\n                return;\n            }\n            fields.push(field_segments[0]);\n        }\n        records.push(fields);\n        if (num_columns === null) {\n            num_columns = fields.length;\n        }\n        if (num_columns != fields.length) {\n            show_single_line_error('Unable to copy fragment with variable number of fields in records');\n            return;\n        }\n    }\n    if (records.length < 2) {\n        show_single_line_error('Unable to copy fragment as a markdown table - must have at least 2 records: header and a data row');\n        return;\n    }\n    // It might seem cool to explicitly include the first (header) record if it is not part of the selected fragment, but\n    // one issue with this that in case if the header has different num of fields than the selected fragment it would prevent markdown export and including the header conditionally would be very confusing.\n    // Use and adhoc alignment algorithm, because the one that we use for CSV alignment can't create an aligned header separator withouth a hack.\n    // Another reason is that double_width and numeric alignment features are excessive and could even potentially confuse some markdown parsers.\n    log_wrapper.log_doc_event('aligning columns');\n    let markdown_lines = ll_rainbow_utils().generate_markdown_lines(records);\n    let aligned_doc_text = markdown_lines.join('\\n');\n    log_wrapper.log_doc_event('writing to the clipboard', active_doc);\n    await vscode.env.clipboard.writeText(aligned_doc_text);\n    log_wrapper.log_doc_event('finishing makdown_copy', active_doc);\n    vscode.window.showInformationMessage('Success: You can now Paste the fragment (Ctrl+V) in makdown format');\n}\n\n\nasync function activate(context) {\n    // TODO consider storing `context` itself in a global variable.\n    global_state = context.globalState;\n\n    if (is_web_ext) {\n        web_extension_uri = context.extensionUri;\n    }\n\n    for (let local_path in absolute_path_map) {\n        if (absolute_path_map.hasOwnProperty(local_path)) {\n            if (is_web_ext) {\n                absolute_path_map[local_path] = vscode.Uri.joinPath(context.extensionUri, local_path);\n            } else {\n                absolute_path_map[local_path] = context.asAbsolutePath(local_path);\n            }\n        }\n    }\n\n    var lint_cmd = vscode.commands.registerCommand('rainbow-csv.CSVLint', csv_lint_cmd);\n    var rbql_cmd = vscode.commands.registerCommand('rainbow-csv.RBQL', edit_rbql);\n    var set_header_line_cmd = vscode.commands.registerCommand('rainbow-csv.SetHeaderLine', set_header_line);\n    var set_comment_prefix_cmd = vscode.commands.registerCommand('rainbow-csv.SetCommentPrefix', set_comment_prefix);\n    var edit_column_names_cmd = vscode.commands.registerCommand('rainbow-csv.SetVirtualHeader', set_virtual_header);\n    var set_join_table_name_cmd = vscode.commands.registerCommand('rainbow-csv.SetJoinTableName', set_join_table_name); // WEB_DISABLED\n    var column_edit_before_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditBefore', async function() { await column_edit('ce_before'); });\n    var column_edit_after_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditAfter', async function() { await column_edit('ce_after'); });\n    var column_edit_select_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditSelect', async function() { await column_edit('ce_select'); });\n    var set_separator_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparator', choose_dynamic_separator);\n    var rainbow_off_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorOff', restore_original_language);\n    var rainbow_on_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorOn', reenable_rainbow_language);\n    var sample_head_cmd = vscode.commands.registerCommand('rainbow-csv.SampleHead', async function(uri) { await make_preview(uri, 'head'); }); // WEB_DISABLED\n    var sample_tail_cmd = vscode.commands.registerCommand('rainbow-csv.SampleTail', async function(uri) { await make_preview(uri, 'tail'); }); // WEB_DISABLED\n    var align_cmd = vscode.commands.registerCommand('rainbow-csv.Align', content_modifying_align_table);\n    var virtual_align_cmd = vscode.commands.registerCommand('rainbow-csv.VirtualAlign', virtual_align_table);\n    var shrink_cmd = vscode.commands.registerCommand('rainbow-csv.Shrink', whitespace_shrink_table);\n    var virtual_shrink_cmd = vscode.commands.registerCommand('rainbow-csv.VirtualShrink', virtual_shrink_table);\n    var copy_back_cmd = vscode.commands.registerCommand('rainbow-csv.CopyBack', copy_back); // WEB_DISABLED\n    var toggle_row_background_cmd = vscode.commands.registerCommand('rainbow-csv.ToggleRowBackground', toggle_row_background);\n    var toggle_column_tracking_cmd = vscode.commands.registerCommand('rainbow-csv.ToggleColumnTracking', toggle_column_tracking);\n    var excel_copy_cmd = vscode.commands.registerCommand('rainbow-csv.ExcelCopy', async function() { await excel_copy(); });\n    var markdown_copy_cmd = vscode.commands.registerCommand('rainbow-csv.MarkdownCopy', async function() { await markdown_copy(); });\n    var internal_test_cmd = vscode.commands.registerCommand('rainbow-csv.InternalTest', run_internal_test_cmd);\n\n    // INFO: vscode.workspace and vscode.window lifetime are likely guaranteed to cover the extension lifetime (period between activate() and deactivate()) but I haven't found a confirmation yet.\n    var doc_open_event = vscode.workspace.onDidOpenTextDocument(handle_doc_open);\n    var doc_close_event = vscode.workspace.onDidCloseTextDocument(handle_doc_close);\n    var config_change_event = vscode.workspace.onDidChangeConfiguration(restart_extension_config);\n\n    var switch_event = vscode.window.onDidChangeActiveTextEditor(handle_editor_switch);\n    try {\n        debug_log_output_channel = vscode.window.createOutputChannel('rainbow_csv_debug_channel', {log: true});\n    } catch (_error) {\n        console.error('Rainbow CSV: Failed to create output log channel');\n    }\n\n    restart_extension_config();\n\n    if (get_from_config('enable_tooltip', false)) {\n        for (let language_id in dialect_map) {\n            if (dialect_map.hasOwnProperty(language_id)) {\n                register_csv_hover_info_provider(language_id, context);\n            }\n        }\n    }\n\n    enable_dynamic_semantic_tokenization();\n    if (extension_context.comment_prefix) {\n        register_comment_tokenization_handler();\n    }\n\n    // The only purpose to add the entries to context.subscriptions is to guarantee their disposal during extension deactivation\n    context.subscriptions.push(lint_cmd);\n    context.subscriptions.push(rbql_cmd);\n    context.subscriptions.push(edit_column_names_cmd);\n    context.subscriptions.push(column_edit_before_cmd);\n    context.subscriptions.push(column_edit_after_cmd);\n    context.subscriptions.push(column_edit_select_cmd);\n    context.subscriptions.push(set_separator_cmd);\n    context.subscriptions.push(rainbow_off_cmd);\n    context.subscriptions.push(rainbow_on_cmd);\n    context.subscriptions.push(sample_head_cmd);\n    context.subscriptions.push(sample_tail_cmd);\n    context.subscriptions.push(set_join_table_name_cmd);\n    context.subscriptions.push(align_cmd);\n    context.subscriptions.push(shrink_cmd);\n    context.subscriptions.push(virtual_align_cmd);\n    context.subscriptions.push(virtual_shrink_cmd);\n    context.subscriptions.push(copy_back_cmd);\n    context.subscriptions.push(set_header_line_cmd);\n    context.subscriptions.push(set_comment_prefix_cmd);\n    context.subscriptions.push(toggle_row_background_cmd);\n    context.subscriptions.push(toggle_column_tracking_cmd);\n    context.subscriptions.push(excel_copy_cmd);\n    context.subscriptions.push(markdown_copy_cmd);\n    context.subscriptions.push(internal_test_cmd);\n\n    context.subscriptions.push(doc_open_event);\n    context.subscriptions.push(doc_close_event);\n    context.subscriptions.push(switch_event);\n    context.subscriptions.push(config_change_event);\n\n    // TODO consider making the background color customizable in settings, use \"color\" contribution point to achieve this, although there seem to be no way to actually conveniently customize it.\n    alternate_row_background_decoration_type = vscode.window.createTextEditorDecorationType({backgroundColor: new vscode.ThemeColor('tab.inactiveBackground'), isWholeLine: true});\n    tracked_field_decoration_types = generate_tracked_field_decoration_types();\n\n    // Need this because \"onDidOpenTextDocument()\" doesn't get called for the first open document.\n    // Another issue is when dev debug logging mode is enabled, the first document would be \"Log\" because it is printing something and gets VSCode focus.\n    await sleep(1000);\n    let active_doc = get_active_doc();\n    handle_doc_open(active_doc);\n}\n\n\nfunction deactivate() {\n    // This method is called when extension is deactivated.\n}\n\n\nexports.activate = activate;\nexports.deactivate = deactivate;\n\n// Exports just for unit tests:\nexports.autodetect_dialect_frequency_based = autodetect_dialect_frequency_based;\nexports.try_autodetect_and_set_rainbow_filetype = try_autodetect_and_set_rainbow_filetype;\n"],"names":["$defineProperty","$SyntaxError","$TypeError","gopd","module","exports","obj","property","value","arguments","length","nonEnumerable","nonWritable","nonConfigurable","loose","desc","configurable","enumerable","writable","Function","prototype","call","Math","round","undefined","$Object","$Error","$EvalError","$RangeError","$ReferenceError","$URIError","abs","floor","max","min","pow","sign","$Function","getEvalledConstructor","expressionSyntax","e","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","get","gOPDthrows","hasSymbols","getProto","$ObjectGPO","$ReflectGPO","$apply","$call","needsEval","TypedArray","Uint8Array","INTRINSICS","__proto__","AggregateError","Array","ArrayBuffer","Symbol","iterator","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","Float16Array","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Map","Number","parseFloat","parseInt","Promise","Proxy","Reflect","RegExp","Set","SharedArrayBuffer","String","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","error","errorProto","doEval","name","fn","gen","LEGACY_ALIASES","bind","hasOwn","$concat","concat","$spliceApply","splice","$replace","replace","$strSlice","slice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","allowMissing","alias","intrinsicName","parts","string","first","last","result","match","number","quote","subString","stringToPath","intrinsicBaseName","intrinsic","intrinsicRealName","skipFurtherCaching","i","isOwn","part","setFunctionLength","callBindBasic","applyBind","originalFunction","func","adjustedLength","apply","getOwnPropertyDescriptors","Object","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","push","inspect","join","args","len","str","x","stringify","_","isNull","isObject","deprecate","msg","process","noDeprecation","this","warned","throwDeprecation","Error","traceDeprecation","console","trace","debugs","debugEnvRegex","env","NODE_DEBUG","debugEnv","toUpperCase","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","toString","isDate","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","set","split","line","ar","arg","re","objectToString","d","o","pad","n","debuglog","test","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","defineProperty","promiseResolve","promiseReject","promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","hasPropertyDescriptors","hasArrayLengthDefineBug","os","fs","path","rbql","rbql_csv","csv_utils","fast_load_utils","wcwidth","number_regex","QUOTED_RFC_POLICY","QUOTED_POLICY","AssertionError","assert","condition","message","is_ascii","src_str","ColumnStat","enable_double_width_alignment","can_be_numeric","max_total_length","max_int_length","max_fractional_length","only_ascii","has_wide_chars","mark_non_numeric","is_numeric","reconcile","rhs","get_adjusted_total_length","get_adjusted_int_length","update_from_field","multiline_field_segments","is_first_record","field_segment","visual_field_length","match_result","cur_integer_part_length","cur_fractional_part_length","evaluate_align_field","field","is_first_in_line","is_last_in_line","post_delim_readability_gap_length","readability_gap","delta_length","dot_pos","integer_delta_length","fractional_delta_length","update_column_stats_from_record","record_fields","all_columns_stats","fnum","get_trimmed_rfc_record_fields_from_record","record","field_segments","v","trim","calculate_column_offsets","column_stats","delim_length","previous_length","previous_offset","evaluate_rfc_align_field","column_stat","column_offset","is_field_segment","num_before","num_after","rfc_align_field","repeat","calc_max_column_widths","records","column_widths","row","col","RecordCommentMerger","comments","nr","next_comment","get_next","has_comments_left","has_records_left","record_num","comment_text","has_entries_left","make_table_name_key","file_path","find_table_path","vscode_global_state","main_table_dir","table_id","filepath","candidate_path","charAt","homedir","existsSync","isAbsolute","table_path","RbqlIOHandlingError","VSCodeRecordIterator","RBQLInputIterator","document","delim","policy","has_header","comment_prefix","table_name","variable_prefix","trim_whitespaces","super","NR","NL","fail_on_warning","_num_records_parsed","_comments","fields_info","first_defective_line","_first_trailing_space_line","parse_document_records","first_record","next_record_index","stop","get_variables_map","query_text","variable_map","parse_basic_variables","parse_array_variables","parse_attribute_variables","parse_dictionary_variables","get_header","do_get_record","get_record","get_warnings","size","inconsistent_records_info","record_num_1","num_fields_1","record_num_2","num_fields_2","sample_first_two_inconsistent_records","warn_msg","make_inconsistent_num_fields_warning","VSCodeWriter","RBQLOutputWriter","header_len","null_in_output","delim_in_simple_output","output_lines","polymorphic_join","simple_join","quoted_join","quoted_join_rfc","mono_join","set_header","header","write","fields","quote_field","rfc_quote_field","res","normalize_fields","out_fields","sub_array_delim","finish","VSCodeTableRegistry","get_iterator_by_table_id","_table_id","VSCodeFileSystemCSVRegistry","RBQLTableRegistry","input_file_dir","encoding","options","stream","record_iterator","bulk_input_path","createReadStream","CSVRecordIterator","output_warnings","basename","make_multiline_row_info","vscode","include_delim_length_in_ranges","newline_marker","start_line","expected_end_line_for_control","record_ranges","lnum_current","pos_in_editor_line","next_pos_in_editor_line","pos_in_multiline_field","multiline_field_singleline_ranges","multiline_field_singleline_components","newline_marker_pos","substring","Range","current_range_end","RowInfo","is_opening_rfc_line","line_text","_record","warning","split_quoted_str","comment_range","extend_range_by_margin","doc","range","margin","begin_line","start","end_line_inclusive","lineCount","end","character","parse_document_range_rfc","end_line","table_ranges","line_aggregator","MultilineRecordAggregator","lnum","lineAt","text","inside_multiline_record_before","is_inside_multiline_record","get_num_lines_in_record","add_line","inside_multiline_record_after","reset","has_comment_line","has_full_record","combined_line","get_full_line","smart_split","row_info","parse_document_range_single_line","startsWith","cpos","next_cpos","get_field_by_line_position","query_pos","col_num","read_header","async","input_reader","createInterface","input","closed","promise_resolve","promise_reject","output_promise","on","close","rbql_query_web","input_document","input_delim","input_policy","output_delim","output_policy","with_headers","join_tables_registry","input_iterator","output_writer","query","rbql_query_node","input_path","output_path","csv_encoding","user_init_code","input_stream","stdin","output_stream","close_output_on_finish","stdout","createWriteStream","default_init_source_path","read_user_init_code","dirname","CSVWriter","get_header_line","num_lines","get_default_js_udf_content","get_default_python_udf_content","align_columns","column_offsets","result_lines","merger","comment","aligned_fields","is_last_field","aligned_field","shrink_columns","active_doc","_fields_info","has_edit","field_lines","calc_column_stats","calc_column_stats_for_fragment","row_infos","header_lnum","is_assumed_header_record","reconcile_whole_doc_and_local_column_stats","whole_doc_column_stats","local_column_stats","max_num_fields","get_cursor_position_info","position","last_found_position_info","contains","is_comment","record_range","column_number","total_columns","split_warning","get_cursor_position_info_rfc","cnum","entries","get_cursor_position_info_standard","format_cursor_position_info","cursor_position_info","show_column_names","show_comments","max_label_length","short_report","full_report","column_label","short_column_label","substr","parse_document_range","sample_preview_records_from_context","rbql_context","dst_message","preview_window_size","cached_table_parse_result","requested_start_record","stop_on_warning","first_failed_line","end_record","vscode_doc_version","need_full_doc_parse","has","fileName","version","sample_records","preview_sampling_error","preview_records","r","cur_record","c","actual_start_record","show_lint_status_bar_button","extension_context","language_id","COLOR_ERROR","lint_cache_key","lint_results","lint_report","lint_status_bar_button","window","createStatusBarItem","StatusBarAlignment","Left","lint_report_msg","is_processing","color","isInteger","first_trailing_space_line","is_ok","tooltip","command","show","get_cursor_position_if_unambiguous","active_editor","selections","selection","active","isEqual","anchor","generate_column_edit_selections","edit_mode","warning_msg","char_pos_before","char_pos_after","position_before","Position","position_after","Selection","generate_inlay_hints","visible_range","alignment_char","enable_vertical_grid","inlay_hints","leading_aligned_margin","hint_display_start_line","hint_display_end_line","field_segments_ranges","field_segment_range","hint_label","hint_line","InlayHint","generate_markdown_lines","replaceAll","max_column_widths","markdown_table_cells","markdown_row_cells","aligned_cell","markdown_lines","header_separator_line","copy","fill","readUInt8","EvalError","getOwnPropertySymbols","sym","symObj","syms","propertyIsEnumerable","descriptor","require","actualApply","isCallable","toStr","list","thisArg","receiver","forEachArray","forEachString","object","k","forEachObject","$isNaN","$actualApply","$reflectApply","combining","DEFAULTS","nul","control","ucs","mid","bisearch","s","charCodeAt","wcswidth","RecordTextConsumer","collect_records","preserve_quotes_and_whitespaces","detect_trailing_spaces","min_num_fields_for_autodetection","num_records_parsed","consume","record_text","record_start_line","max_records_to_parse","consumer","reflectGetProto","originalGetProto","getDunderProto","O","callBound","hasToStringTag","gOPD","isRegexMarker","throwRegexMarker","badStringifier","valueOf","toPrimitive","$toString","origSymbol","hasSymbolSham","field_regular_expression","field_rgx","field_rgx_external_whitespaces","extract_next_field","src","dlm","allow_external_whitespaces","cidx","src_cur","match_obj","match_end","uidx","extraction_report","unquote_field","split_whitespace_separated_str","preserve_whitespaces","rgxp","unquote_fields","split_lines","rfc_line_buffer","match_list","has_unbalanced_double_quote","line_separator","a","URIError","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","whichTypedArray","availableTypedArrays","callBind","g","globalThis","typedArrays","$slice","$indexOf","cache","typedArray","arr","toStringTag","proto","superProto","tag","found","getter","trySlices","tryTypedArrays","GetIntrinsic","create","ctor","superCtor","super_","TempCtor","implementation","define","hasDescriptors","$floor","functionLengthIsConfigurable","functionLengthIsWritable","util","utf_decoding_error","rbql_init_source_path","readFileSync","name_record","index_path","content","lines","try_read_index","get_index_record","RecordQueue","push_stack","pull_stack","enqueue","dequeue","reverse","csv_path","first_record_should_be_emitted","header_preread_complete","decoder","TextDecoder","fatal","input_exhausted","started","utf8_bom_removed","partially_decoded_line","partially_decoded_line_ends_with_cr","resolve_current_record","reject_current_record","current_exception","produced_records_queue","process_line_polymorphic","process_partial_rfc_record_line","process_record_line_simple","handle_query_modifier","modifier","reset_external_callbacks","try_propagate_exception","exception","store_or_propagate_exception","preread_first_record","pause","try_resolve_next_record","isPaused","resume","parent_iterator","current_record_promise","get_all_records","num_records","process_record_line","num_fields","process_line","clean_line","assumed_source_encoding","remove_utf8_bom","process_data_stream_chunk","data_chunk","decoded_string","decode","first_line_index","process_data_bulk","data_blob","control_buffer","Buffer","from","compare","process_data_stream_end","last_line","destroy","readFile","close_stream_on_finish","setDefaultEncoding","error_obj","store_first_error","first_error","writer_error","_write_all","table","output_encoding","FileSystemCSVRegistry","interpret_named_csv_format","format_name","toLowerCase","query_csv","exception_to_error_info","hasProtoAccessor","code","$getPrototypeOf","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","SyntaxError","GeneratorFunction","isFnRegex","safeRegexTest","fnToStr","generatorFunc","getGeneratorFunc","RbqlParsingError","RbqlRuntimeError","InternalBadFieldError","bad_idx","params","replace_all","search","replacement","RBQLContext","writer","unnest_list","top_count","like_regex_cache","sort_key_expression","aggregation_stage","aggregation_key_expression","functional_aggregators","join_map_impl","join_map","lhs_join_var_expression","where_expression","select_expression","update_expressions","variables_init_code","query_context","wrong_aggregation_usage_error","RBQL_VERSION","check_if_brackets_match","opening_bracket","closing_bracket","parse_root_bracket_level_text_spans","text_spans","last_pos","bracket_stack","cur_char","span","unquote_string","quoted_str","column_info_from_text_span","text_span","string_literals","rbql_star_marker","simple_var_match","attribute_match","subscript_int_match","subscript_str_match","as_alias_match","column_index","column_name","is_star","alias_name","replaced_string_literal_id","unquoted_column_name","adhoc_parse_select_expression_to_column_infos","ts","stable_compare","b","safe_get","safe_join_get","safe_set","regexp_escape","like_to_regex","pattern","p","converted","like","matcher","LIKE","RBQLAggregationToken","marker_id","UnnestMarker","UNNEST","vals","unnest","Unnest","UNFOLD","parse_number","AnyValueAggregator","stats","increment","get_final","MinAggregator","cur_aggr","MaxAggregator","SumAggregator","AvgAggregator","cur_sum","cur_cnt","VarianceAggregator","cur_sum_sq","avg_val","MedianAggregator","sort","m","CountAggregator","ArrayAggAggregator","post_proc","ConstGroupVerifier","output_index","const_values","old_value","init_aggregator","generator_name","ANY_VALUE","any_value","Any_value","MIN","Min","MAX","Max","COUNT","count","Count","SUM","sum","Sum","AVG","avg","Avg","VARIANCE","variance","Variance","MEDIAN","median","Median","ARRAY_AGG","array_agg","FOLD","add_to_set","dst_set","len_before","TopWriter","subwriter","NW","UniqWriter","UniqCountWriter","old_val","unshift","SortedWriter","reverse_sort","unsorted_entries","stable_entry","entry","AggregateWriter","aggregators","aggregation_keys","all_keys","ag","InnerJoiner","get_rhs","lhs_key","get_join_records","LeftJoiner","null_record","max_record_len","StrictLeftJoiner","select_except","except_fields","select_simple","sort_key","sort_entry","select_aggregated","transparent_values","num_aggregators_found","trans_value","select_unnested","folded_fields","unnest_pos","findIndex","PROCESS_SELECT_COMMON","PROCESS_SELECT_SIMPLE","PROCESS_SELECT_JOIN","PROCESS_UPDATE_JOIN","PROCESS_UPDATE_SIMPLE","MAIN_LOOP_BODY","embed_expression","parent_code","child_placeholder","child_expression","embed_code","child_code","parent_lines","child_lines","pos","placeholder_indentation","generate_main_loop_code","is_select_query","is_join_query","js_code","compile_and_run","main_loop_body","main_loop_promise","lower_case_query","GROUP_BY","UPDATE","SELECT","JOIN","INNER_JOIN","LEFT_JOIN","LEFT_OUTER_JOIN","STRICT_LEFT_JOIN","ORDER_BY","WHERE","LIMIT","EXCEPT","WITH","get_ambiguous_error_msg","variable_name","get_all_matches","regexp","str_strip","strip_comments","cline","combine_string_literals","backend_expression","prefix","dst_variables_map","matches","field_num","initialize","index","js_string_escape_column_name","quote_char","query_probably_has_dictionary_variable","continuous_name_segments","continuous_segment","column_names","dict_test_rgx","escaped_column_name","column_names_source","column_names_from_query","zero_based_idx","map_variables_directly","ensure_no_ambiguous_variables","input_column_names","join_column_names","join_column_names_set","parse_join_expression","invalid_join_syntax_error","variable_pairs","pair_rgx","and_rgx","resolve_join_variables","input_variables_map","join_variables_map","lhs_variables","rhs_indices","valid_join_syntax_msg","variable_pair","join_var_1","join_var_2","lhs_key_index","rhs_key_index","generate_common_init_code","base_var","attr_var","generate_init_statements","variables_map","indent","code_lines","simple_var_name_rgx","var_info","variable_declaration_keyword","replace_star_count","aggregate_expression","replace_star_vars","rbql_expression","replacement_expression","replace_star_vars_for_header_parsing","translate_update_expression","update_expression","first_assignment_error","assignment_looking_rgx","dst_var_name","var_index","current_indent","translate_select_expression","expression_without_counting_stars","translated","translated_for_header","separate_string_literals","rgx","format_parts","idx_before","literal_id","string_literal","start_index","lastIndex","format_expression","locate_statements","statement_groups","ig","is","statement","match_str","separate_actions","with_match","ordered_statements","statement_start","span_start","span_end","statement_params","new_span","find_top","rb_actions","select_action","translate_except_expression","except_expression","input_header","skip_vars","skip_indices","var_name","HashJoinMap","key_indices","hash_map","key_index","polymorphic_get_key","get_single_key","get_multi_key","ki","build","nf","key_records","cleanup_query","filter","remove_redundant_table_name","select_output_header","join_header","query_column_infos","query_has_star","query_has_column_alias","qci","output_header","TableIterator","normalize_column_names","stopped","TableWriter","external_table","SingleTableRegistry","shallow_parse_input_query","rhs_table_id","join_record_iterator","sql_join_type","select_expression_for_header","query_table","input_table","output_table","join_table","output_column_names","exceptions_type_map","error_type","isArgumentsObject","isGeneratorFunction","isTypedArray","uncurryThis","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","isSet","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","possibleNames","out","RangeError","concatty","j","that","target","bound","arrLike","slicy","boundLength","boundArgs","joiny","Empty","ReferenceError","badArrayLike","isCallableMarker","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","all","strClass","isRegex","regex","$hasOwn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","child_process","rainbow_utils","ll_rainbow_utils","is_web_ext","web_extension_uri","scratch_buf_marker","whitespace_aligned_files","alternate_row_background_decoration_type","tracked_field_decoration_types","custom_virtual_alignment_modes","VA_EXPLICITLY_ENABLED","VA_EXPLICITLY_DISABLED","whole_doc_alignment_stats","result_set_parent_map","manual_comment_prefix_stoplist","rbql_status_bar_button","align_shrink_button","copy_back_button","column_info_button","dynamic_dialect_select_button","debug_log_output_channel","last_rbql_queries","client_html_template","dialect_selection_html_template","global_state","rbql_preview_panel","dialect_panel","doc_first_edit_subscription","column_info_cursor_subscription","alt_background_cursor_subscription","last_closed_rainbow_doc_info","_unit_test_last_rbql_report","_unit_test_last_warnings","cursor_timeout_handle_for_column_info","cursor_timeout_handle_for_alt_row_background","rainbow_token_event","comment_token_event","row_background_decoration_event","column_tracking_decoration_event","sticky_header_disposable","inlay_hint_disposable","PLAINTEXT","DYNAMIC_CSV","WHITESPACE_POLICY","SIMPLE_POLICY","dynamic_document_dialects","custom_comment_prefixes","original_language_ids","toggle_enabled_rows_backgrounds","tracked_columns","reenable_rainbow_language_infos","autodetection_stoplist","autodetection_temporarily_disabled_for_rbql","dynamic_dialect_for_next_request","logging_enabled","logging_next_context_id","virtual_alignment_mode","double_width_alignment","virtual_alignment_char","virtual_alignment_vertical_grid","dialect_map","COMMENT_TOKEN","rainbow_token_types","all_token_types","tokens_legend","SemanticTokensLegend","is_eligible_doc","vscode_doc","uri","scheme","is_eligible_scheme","is_rainbow_dialect_doc","languageId","make_dialect_info","make_dynamic_dialect_key","save_dynamic_info","dialect_info","save_to_global_state","get_dynamic_info","get_from_global_state","safe_lower","get_default_policy","separator","map_dialect_to_language_id","absolute_path_map","show_single_line_error","error_msg","active_window","showErrorMessage","sleep","ms","report_progress","progress","status_message","report","default_value","update","replace_doc_content","new_content","invalid_range","full_range","validateRange","edit","make_header_key","make_with_headers_key","get_from_config","param_name","config","workspace","getConfiguration","TrackedColumns","column_to_decoration_id","is_tracked","column_num","get_tracked_columns","toggle_tracking","delete","num_tracked","existing_decoration_ids","values","new_id","includes","get_decoration_type","empty","StackContextLogWrapper","context_name","caller_context_id","context_id","log_doc_event","event_name","full_event","info","_error","log_simple_event","get_header_from_document","header_text","header_info","header_line_num","get_dialect","StickyHeaderProvider","provideDocumentSymbols","header_range","symbol_kind","SymbolKind","File","DocumentSymbol","get_all_rainbow_lang_selector","document_selector","language","reconfigure_sticky_header_provider","force","dispose","header_symbol_provider","languages","registerDocumentSymbolProvider","reenable_inlay_hints_provider","inlay_hints_provider","InlayHintProvider","registerInlayHintsProvider","configure_inlay_hints_alignment","log_wrapper","get_active_editor","tabSize","update_global_settings","enable_dynamic_semantic_tokenization","token_provider","RainbowTokenProvider","registerDocumentRangeSemanticTokensProvider","row_background_enabled","default_enabled","toggle_row_background","get_active_doc","_delim","_comment_prefix","highlighting_enabled","setDecorations","register_row_background_decorations_provider","onDidChangeTextEditorSelection","handle_cursor_movement_for_alt_row_background","toggle_column_tracking","trackings","decoration_type","decorations_provider","ColumnTrackingDecorationsProvider","register_column_tracking_decorations_provider","RowBackgroundDecorationsProvider","register_comment_tokenization_handler","CommentTokenProvider","choose_dynamic_separator","integration_test_options","selected_separator","get_selected_separator","load_resource_file_universal","createWebviewPanel","ViewColumn","Beside","enableScripts","webview","html","adjust_webview_paths","onDidReceiveMessage","origin_doc","dialect_webview_panel","msg_type","init_msg","integration_test","postMessage","is_active_doc","enable_rainbow_features_if_csv","setTextDocumentLanguage","handle_dialect_selection_message","disable_ui_elements","setLanguageConfiguration","lineComment","hide","show_align_shrink_button","parent_table_path","parent_basename","show_rbql_copy_to_source_button","show_column_info_button","handle_cursor_movement_for_column_info","enable_rainbow_ui","csv_lint","all_buttons","disable_rainbow_features_if_non_csv","activeTextEditor","virtual_alignment_enabled","custom_alignment_mode","is_aligned","config_whitespace_alignment_button","config_virtual_alignment_button","enable_tooltip_column_names","Right","do_show_column_info_button","is_manual_op","_records","lint_result","csv_lint_cmd","run_internal_test_cmd","check_initialization_state","initialized","lazy_loaded","check_last_rbql_report","check_last_rbql_warnings","show_warnings","warnings","showWarningMessage","handle_rbql_result_file_node","text_doc","showTextDocument","file_path_to_query_key","run_command_and_parse_output","cmd","execution_result","stdout_data","stderr_data","spawn","data","stderr","command_async_wrapper","invocation_error","json_report","parse","_e","run_first_working_interpreter_command_and_parse_output","interpreters_list","interpreter_cmd","send_report_to_webview","report_msg","set_header_line","header_line","raw_header","preserve_original_language_id_if_needed","original_language_id","set_comment_prefix","restore_original_language","current_language_info","dynamic_dialect_info","remove_dynamic_info","reenable_rainbow_language","rainbow_language_info","set_join_table_name","showInputBox","set_virtual_header","old_header","old_header_str","quoted_fields","input_box_props","raw_new_header","new_header","column_edit","virtual_shrink_table","whitespace_shrink_table","progress_options","location","ProgressLocation","Window","withProgress","shrinked_doc_text","virtual_align_table","content_modifying_align_table","aligned_doc_text","copy_back","result_doc","parent_doc","openTextDocument","parent_editor","query_result_doc","getText","do_copy_back","handle_rbql_client_message","message_type","path_key","input_document_path","history_list","header_for_ui","rbql_backend","rbql_query","integration_test_delay","input_table_dir","navig_direction","protocol_message","backend_language","output_dialect","old_index","update_query_history","interpreters_preference_list","input_table_path","rbql_output_dir","tmpdir","get_dst_table_dir","orig_extension","extname","delim_ext_map","dst_extension","result_table_name","get_dst_table_name","strip_spaces_from_fields","target_language_id","output_doc_cfg","handle_rbql_result_file_web","csv_options","cmd_safe_query","output_doc","run_rbql_query","udf_file_path","default_content","writeFileSync","udf_doc","preview_panel","client_html","paths_list","local_path","adjusted_webview_url","asWebviewUri","Uri","file","edit_rbql","orig_uri","isDirty","rnd_suffix","random","with_headers_by_default","Active","autodetect_dialect_frequency_based","candidate_separators","max_num_chars_to_test","best_dialect","best_separator","best_policy","best_dialect_frequency","frequency","dialect_id","try_autodetect_and_set_rainbow_filetype","logging_context_id","is_default_csv","endsWith","now","timestamp","comment_prefix_for_autodetection","rainbow_csv_language_id","candidate_dialects","min_num_lines","best_dialect_first_trailing_space_line","best_dialect_num_columns","candidate_dialect","num_columns","autodetect_dialect","new_doc","handle_first_edit_for_an_empty_doc","change_event","handle_editor_switch","editor","_cursor_event","visibleRanges","provide_row_background_decorations","do_handle_cursor_movement_for_row_background","handle_doc_open","isUntitled","onDidChangeTextDocument","filetype_changed","handle_doc_close","doc_to_close","restart_extension_config","_config_change_event","logging_enabled_before","make_preview","preview_mode","fsPath","size_limit","file_size_in_bytes","statSync","full_orig_doc","file_basename","out_path","open","fd","buffer","alloc","read_begin_pos","read","_num","buffer_str","lastIndexOf","register_csv_hover_info_provider","context","hover_provider","registerHoverProvider","provideHover","token","cancellation_token","isCancellationRequested","_full_text","mds","MarkdownString","appendText","Hover","make_hover","subscriptions","selection_start_line","selection_end_line","isEmpty","alternating_row_ranges","provideDocumentRangeSemanticTokens","_document","_token","tracked_column_ranges","parsing_range","current_column_ranges","tracked_decoration_type","provide_tracked_column_decorations","builder","SemanticTokensBuilder","token_id","provideInlayHints","_range","_cancellation_token","resource_path","resource_data","extension_uri","resource_uri","joinPath","bytes","load_resource_file_for_web","activate","globalState","extensionUri","asAbsolutePath","lint_cmd","commands","registerCommand","rbql_cmd","set_header_line_cmd","set_comment_prefix_cmd","edit_column_names_cmd","set_join_table_name_cmd","column_edit_before_cmd","column_edit_after_cmd","column_edit_select_cmd","set_separator_cmd","rainbow_off_cmd","rainbow_on_cmd","sample_head_cmd","sample_tail_cmd","align_cmd","virtual_align_cmd","shrink_cmd","virtual_shrink_cmd","copy_back_cmd","toggle_row_background_cmd","toggle_column_tracking_cmd","excel_copy_cmd","are_actual_comments","tsv_lines","tsv_content","clipboard","writeText","showInformationMessage","do_excel_copy","excel_copy","markdown_copy_cmd","conversion_range","markdown_copy","internal_test_cmd","doc_open_event","onDidOpenTextDocument","doc_close_event","onDidCloseTextDocument","config_change_event","onDidChangeConfiguration","switch_event","onDidChangeActiveTextEditor","createOutputChannel","createTextEditorDecorationType","backgroundColor","ThemeColor","isWholeLine","borderStyle","borderWidth","borderColor","generate_tracked_field_decoration_types","deactivate"],"sourceRoot":""}